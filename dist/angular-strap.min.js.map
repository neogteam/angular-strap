{"version":3,"sources":["angular-strap.min.js","module.js","affix/affix.js","alert/alert.js","aside/aside.js","button/button.js","collapse/collapse.js","datepicker/datepicker.js","dropdown/dropdown.js","helpers/date-parser.js","helpers/debounce.js","helpers/dimensions.js","helpers/parse-options.js","helpers/raf.js","modal/modal.js","navbar/navbar.js","popover/popover.js","scrollspy/scrollspy.js","select/select.js","tab/tab.js","timepicker/timepicker.js","tooltip/tooltip.js","typeahead/typeahead.js"],"names":["window","document","undefined","angular","module","provider","defaults","this","offsetTop","$get","$window","debounce","dimensions","AffixFactory","element","config","getRequiredAffixClass","unpin","position","elementHeight","scrollTop","getScrollTop","scrollHeight","getScrollHeight","top","offsetBottom","initialAffixTop","targetEl","pageYOffset","body","$affix","options","extend","target","reset","initialOffsetTop","affixed","parent","offsetParent","match","i","init","$parseOffsets","offset","on","checkPosition","checkPositionWithEventLoop","windowEl","$debouncedOnResize","destroy","off","setTimeout","height","affix","removeClass","addClass","css","offsetUnpin","bodyEl","offsetHeight","$onResize","directive","restrict","require","link","scope","attr","affixTarget","$element","forEach","key","isDefined","$on","controller","animation","prefixClass","prefixEvent","placement","template","container","backdrop","keyboard","show","duration","type","dismissable","$modal","$timeout","AlertFactory","$alert","$scope","hide","$sce","requestAnimationFrame","transclusion","$observe","newValue","oldValue","trustAsHtml","bsAlert","$watch","isObject","content","alert","trigger","toggle","contentTemplate","html","AsideFactory","$aside","bsAside","aside","activeClass","toggleEvent","compile","removeAttr","children","querySelectorAll","child","childEl","ngModel","$button","$$rAF","constantValueRegExp","isInput","nodeName","activeElement","trueValue","test","$eval","falseValue","hasExoticValues","$parsers","push","viewValue","$render","isActive","equals","$modelValue","checked","toggleClass","bind","$apply","$setViewValue","hasClass","value","disallowToggle","startCollapsed","$attrs","self","$options","copy","$toggles","$targets","$viewChangeListeners","$registerToggle","$registerTarget","$active","$setActive","fn","$collapse","$animate","attrs","controllers","ngModelCtrl","bsCollapseCtrl","$formatters","modelValue","index","bsCollapseToggle","indexOf","render","active","delay","useNative","dateType","dateFormat","modelDateFormat","dayFormat","strictFormat","autoclose","minDate","Infinity","maxDate","startView","minView","startWeek","daysOfWeekDisabled","iconLeft","iconRight","$document","$rootScope","$locale","dateFilter","datepickerViews","$tooltip","DatepickerFactory","updateSelected","el","selected","$datepicker","$isSelected","date","focusElement","focus","parentScope","pickerViews","$views","views","viewDate","$mode","$iconLeft","$iconRight","$picker","$select","select","$selectPane","$toggleMode","setMode","length","update","isDate","isNaN","getTime","$date","call","$build","updateDisabledDates","dateRanges","disabledDateRanges","l","rows","$setDisabledEl","keep","$dateValue","Date","year","getFullYear","month","getMonth","getDate","mode","pristine","built","build","$updateSelected","isSelected","disabled","isDisabled","steps","targetDate","UTC","day","getUTCFullYear","getUTCMonth","getUTCDate","$onMouseDown","evt","preventDefault","stopPropagation","isTouch","toLowerCase","triggerHandler","$onKeyDown","keyCode","shiftKey","altKey","onKeyDown","$digest","_init","isNative","prop","_destroy","_show","_hide","blur","navigator","userAgent","lang","id","$parse","$q","$dateParser","isNumeric","n","parseFloat","isFinite","normalizeDateRanges","ranges","bsShow","datepicker","isString","today","substr","parseInt","disabledDates","disabledRanges","previousValue","dateParser","format","strict","unshift","$setValidity","parsedDate","parse","isMinValid","isMaxValid","isValid","toISOString","isUndefined","NaN","val","split","arr","size","arrays","splice","mod","m","daySplit","picker","weekDaysMin","DATETIME_FORMATS","SHORTDAY","weekDaysLabels","slice","concat","weekDaysLabelsHtml","join","startDate","getTimezoneOffset","force","firstDayOfMonth","firstDayOfMonthOffset","firstDate","getDay","firstDateOffset","toDateString","days","isToday","label","muted","title","showLabels","labels","time","start","end","newDate","actualTime","name","months","lastDate","actualMonth","setMonth","firstYear","years","actualYear","setYear","Array","prototype","DropdownFactory","onBodyClick","$dropdown","$new","parentEl","items","matchesSelector","eq","Element","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","bsDropdown","dropdown","$localeProvider","noop","proto","DateParserFactory","setMapForFormat","keys","Object","setFnMap","map","sortedMap","clonedFormat","search","v","escapeReservedSymbols","text","replace","regExpForFormat","regExpMap","re","RegExp","regex","setMap","sss","ss","s","mm","HH","H","hh","h","a","EEEE","DAY","EEE","dd","d","MMMM","MONTH","MMM","SHORTMONTH","MM","M","yyyy","yy","y","setMilliseconds","setSeconds","setMinutes","setHours","setDate","hours","getHours","setFullYear","$format","baseDate","formatRegex","formatSetMap","matches","exec","constant","func","wait","immediate","timeout","args","context","timestamp","result","arguments","later","last","apply","callNow","previous","leading","now","remaining","clearTimeout","trailing","factory","extra","currentStyle","getComputedStyle","style","boxRect","getBoundingClientRect","docElement","ownerDocument","width","offsetWidth","documentElement","clientTop","left","pageXOffset","scrollLeft","clientLeft","offsetParentElement","offsetParentRect","outer","regexp","ParseOptionsFactory","parseValues","values","locals","valueName","displayFn","valueFn","$parseOptions","$values","keyName","groupByFn","valuesFn","$match","when","then","version","minor","dot","webkitRequestAnimationFrame","mozRequestAnimationFrame","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","webkitCancelRequestAnimationFrame","rafSupported","raf","timer","cancel","supported","backdropAnimation","$compile","$templateCache","$http","ModalFactory","enterAnimateCallback","$emit","leaveAnimateCallback","bodyElement","hideOnBackdropClick","currentTarget","$promise","fetchTemplate","$hide","$$postDigest","$show","$toggle","templateEl","contentEl","findElement","next","remove","outerHTML","modalLinker","modalElement","backdropElement","data","htmlReplaceRegExp","trim","$destroy","defaultPrevented","isElement","after","clonedElement","display","enter","promise","$isShown","$$phase","$root","$onKeyUp","leave","which","query","get","res","put","String","bsModal","modal","routeAttr","$location","$navbar","path","liElements","li","liElement","pattern","customClass","PopoverFactory","$popover","popover","$applyPlacement","bsPopover","spies","$$spies","throttle","ScrollSpyFactory","isWindowSpy","scrollEl","scrollId","$$count","unbindViewContentLoaded","unbindIncludeContentLoaded","activeTarget","debouncedCheckPosition","throttledCheckPosition","debouncedCheckOffsets","viewportHeight","$scrollspy","trackedElements","$trackedElements","sortedElements","checkOffsets","Math","max","innerHeight","docEl","$activateElement","$getTrackedElement","source","filter","obj","trackedElement","targetElement","querySelector","sort","b","trackElement","untrackElement","toDelete","activate","scrollspy","multiple","allNoneButtons","caretHtml","placeholder","maxLength","maxLengthHtml","iconCheckmark","reloadEvents","SelectFactory","$matches","$activeIndex","$isMultiple","$showAllNoneButtons","$iconCheckmark","$activate","$isVisible","$isActive","$selectAll","$selectNone","$updateActiveIndex","isArray","$getIndex","minLength","$viewValue","inputEl","parsedOptions","ngOptions","reloadData","eventName","watchedOptions","getPlaceHolder","e","navClass","$navClass","$activeClass","$panes","$push","pane","$tab","transclude","templateUrl","bsTabsCtrl","timeType","timeFormat","modelTimeFormat","minTime","maxTime","hourStep","minuteStep","iconUp","iconDown","arrowBehavior","timepickerFactory","createSelection","createTextRange","selRange","collapse","moveStart","moveEnd","setSelectionRange","selectionStart","selectionEnd","$timepicker","selectedIndex","hour","meridian","minute","getMinutes","second","getSeconds","millisecond","getMilliseconds","formats","$iconUp","$iconDown","$moveIndex","$switchMeridian","switchMeridian","$isBuilt","midIndex","$isDisabled","minutes","showAM","isAM","timeSeparator","selectedTime","$arrowAction","$setTimeByStep","hoursLength","minutesLength","lateralMove","count","selectRange","timepicker","parsedTime","TooltipFactory","getPosition","getCalculatedOffset","actualWidth","actualHeight","hoverState","tipLinker","tipElement","tipTemplate","tipContainer","isNumber","triggers","$onFocusElementMouseDown","visibility","$onFocusKeyUp","elementPosition","tipWidth","tipHeight","tipPosition","tooltip","bsTooltip","limit","TypeaheadFactory","$typeahead","$resetMatches","typeahead","watchOptions","selectMode","substring","isVisible","$isEmpty"],"mappings":"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","file":"angular-strap.min.js","sourcesContent":["/**\n * angular-strap\n * @version v2.1.0 - 2015-12-14\n * @link http://mgcrea.github.io/angular-strap\n * @author Olivier Louvignes (olivier@mg-crea.com)\n * @license MIT License, http://www.opensource.org/licenses/MIT\n */\n(function(window, document, undefined) {\n'use strict';\n// Source: module.js\nangular.module('mgcrea.ngStrap', [\r\n  'mgcrea.ngStrap.modal',\r\n  'mgcrea.ngStrap.aside',\r\n  'mgcrea.ngStrap.alert',\r\n  'mgcrea.ngStrap.button',\r\n  'mgcrea.ngStrap.select',\r\n  'mgcrea.ngStrap.datepicker',\r\n  'mgcrea.ngStrap.timepicker',\r\n  'mgcrea.ngStrap.navbar',\r\n  'mgcrea.ngStrap.tooltip',\r\n  'mgcrea.ngStrap.popover',\r\n  'mgcrea.ngStrap.dropdown',\r\n  'mgcrea.ngStrap.typeahead',\r\n  'mgcrea.ngStrap.scrollspy',\r\n  'mgcrea.ngStrap.affix',\r\n  'mgcrea.ngStrap.tab',\r\n  'mgcrea.ngStrap.collapse'\r\n]);\n\r\n// Source: affix.js\nangular.module('mgcrea.ngStrap.affix', ['mgcrea.ngStrap.helpers.dimensions', 'mgcrea.ngStrap.helpers.debounce'])\r\n\r\n  .provider('$affix', function() {\r\n\r\n    var defaults = this.defaults = {\r\n      offsetTop: 'auto'\r\n    };\r\n\r\n    this.$get = [\"$window\", \"debounce\", \"dimensions\", function($window, debounce, dimensions) {\r\n\r\n      var bodyEl = angular.element($window.document.body);\r\n      var windowEl = angular.element($window);\r\n\r\n      function AffixFactory(element, config) {\r\n\r\n        var $affix = {};\r\n\r\n        // Common vars\r\n        var options = angular.extend({}, defaults, config);\r\n        var targetEl = options.target;\r\n\r\n        // Initial private vars\r\n        var reset = 'affix affix-top affix-bottom',\r\n            initialAffixTop = 0,\r\n            initialOffsetTop = 0,\r\n            offsetTop = 0,\r\n            offsetBottom = 0,\r\n            affixed = null,\r\n            unpin = null;\r\n\r\n        var parent = element.parent();\r\n        // Options: custom parent\r\n        if (options.offsetParent) {\r\n          if (options.offsetParent.match(/^\\d+$/)) {\r\n            for (var i = 0; i < (options.offsetParent * 1) - 1; i++) {\r\n              parent = parent.parent();\r\n            }\r\n          }\r\n          else {\r\n            parent = angular.element(options.offsetParent);\r\n          }\r\n        }\r\n\r\n        $affix.init = function() {\r\n\r\n          $affix.$parseOffsets();\r\n          initialOffsetTop = dimensions.offset(element[0]).top + initialAffixTop;\r\n\r\n          // Bind events\r\n          targetEl.on('scroll', $affix.checkPosition);\r\n          targetEl.on('click', $affix.checkPositionWithEventLoop);\r\n          windowEl.on('resize', $affix.$debouncedOnResize);\r\n\r\n          // Both of these checkPosition() calls are necessary for the case where\r\n          // the user hits refresh after scrolling to the bottom of the page.\r\n          $affix.checkPosition();\r\n          $affix.checkPositionWithEventLoop();\r\n\r\n        };\r\n\r\n        $affix.destroy = function() {\r\n\r\n          // Unbind events\r\n          targetEl.off('scroll', $affix.checkPosition);\r\n          targetEl.off('click', $affix.checkPositionWithEventLoop);\r\n          windowEl.off('resize', $affix.$debouncedOnResize);\r\n\r\n        };\r\n\r\n        $affix.checkPositionWithEventLoop = function() {\r\n\r\n          setTimeout($affix.checkPosition, 1);\r\n\r\n        };\r\n\r\n        $affix.checkPosition = function() {\r\n          // if (!this.$element.is(':visible')) return\r\n\r\n          var scrollTop = getScrollTop();\r\n          var position = dimensions.offset(element[0]);\r\n          var elementHeight = dimensions.height(element[0]);\r\n\r\n          // Get required affix class according to position\r\n          var affix = getRequiredAffixClass(unpin, position, elementHeight);\r\n\r\n          // Did affix status changed this last check?\r\n          if(affixed === affix) return;\r\n          affixed = affix;\r\n\r\n          // Add proper affix class\r\n          element.removeClass(reset).addClass('affix' + ((affix !== 'middle') ? '-' + affix : ''));\r\n\r\n          if(affix === 'top') {\r\n            unpin = null;\r\n            element.css('position', (options.offsetParent) ? '' : 'relative');\r\n            element.css('top', '');\r\n          } else if(affix === 'bottom') {\r\n            if (options.offsetUnpin) {\r\n              unpin = -(options.offsetUnpin * 1);\r\n            }\r\n            else {\r\n              // Calculate unpin threshold when affixed to bottom.\r\n              // Hopefully the browser scrolls pixel by pixel.\r\n              unpin = position.top - scrollTop;\r\n            }\r\n            element.css('position', (options.offsetParent) ? '' : 'relative');\r\n            element.css('top', (options.offsetParent) ? '' : ((bodyEl[0].offsetHeight - offsetBottom - elementHeight - initialOffsetTop) + 'px'));\r\n          } else { // affix === 'middle'\r\n            unpin = null;\r\n            element.css('position', 'fixed');\r\n            element.css('top', initialAffixTop + 'px');\r\n          }\r\n\r\n        };\r\n\r\n        $affix.$onResize = function() {\r\n          $affix.$parseOffsets();\r\n          $affix.checkPosition();\r\n        };\r\n        $affix.$debouncedOnResize = debounce($affix.$onResize, 50);\r\n\r\n        $affix.$parseOffsets = function() {\r\n\r\n          // Reset position to calculate correct offsetTop\r\n          element.css('position', (options.offsetParent) ? '' : 'relative');\r\n\r\n          if(options.offsetTop) {\r\n            if(options.offsetTop === 'auto') {\r\n              options.offsetTop = '+0';\r\n            }\r\n            if(options.offsetTop.match(/^[-+]\\d+$/)) {\r\n              initialAffixTop = - options.offsetTop * 1;\r\n              if(options.offsetParent) {\r\n                offsetTop = dimensions.offset(parent[0]).top + (options.offsetTop * 1);\r\n              }\r\n              else {\r\n                offsetTop = dimensions.offset(element[0]).top - dimensions.css(element[0], 'marginTop', true) + (options.offsetTop * 1);\r\n              }\r\n            }\r\n            else {\r\n              offsetTop = options.offsetTop * 1;\r\n            }\r\n          }\r\n\r\n          if(options.offsetBottom) {\r\n            if(options.offsetParent && options.offsetBottom.match(/^[-+]\\d+$/)) {\r\n              // add 1 pixel due to rounding problems...\r\n              offsetBottom = getScrollHeight() - (dimensions.offset(parent[0]).top + dimensions.height(parent[0])) + (options.offsetBottom * 1) + 1;\r\n            }\r\n            else {\r\n              offsetBottom = options.offsetBottom * 1;\r\n            }\r\n          }\r\n\r\n        };\r\n\r\n        // Private methods\r\n\r\n        function getRequiredAffixClass(unpin, position, elementHeight) {\r\n\r\n          var scrollTop = getScrollTop();\r\n          var scrollHeight = getScrollHeight();\r\n\r\n          if(scrollTop <= offsetTop) {\r\n            return 'top';\r\n          } else if(unpin !== null && (scrollTop + unpin <= position.top)) {\r\n            return 'middle';\r\n          } else if(offsetBottom !== null && (position.top + elementHeight + initialAffixTop >= scrollHeight - offsetBottom)) {\r\n            return 'bottom';\r\n          } else {\r\n            return 'middle';\r\n          }\r\n\r\n        }\r\n\r\n        function getScrollTop() {\r\n          return targetEl[0] === $window ? $window.pageYOffset : targetEl[0].scrollTop;\r\n        }\r\n\r\n        function getScrollHeight() {\r\n          return targetEl[0] === $window ? $window.document.body.scrollHeight : targetEl[0].scrollHeight;\r\n        }\r\n\r\n        $affix.init();\r\n        return $affix;\r\n\r\n      }\r\n\r\n      return AffixFactory;\r\n\r\n    }];\r\n\r\n  })\r\n\r\n  .directive('bsAffix', [\"$affix\", \"$window\", function($affix, $window) {\r\n\r\n    return {\r\n      restrict: 'EAC',\r\n      require: '^?bsAffixTarget',\r\n      link: function postLink(scope, element, attr, affixTarget) {\r\n\r\n        var options = {scope: scope, offsetTop: 'auto', target: affixTarget ? affixTarget.$element : angular.element($window)};\r\n        angular.forEach(['offsetTop', 'offsetBottom', 'offsetParent', 'offsetUnpin'], function(key) {\r\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\r\n        });\r\n\r\n        var affix = $affix(element, options);\r\n        scope.$on('$destroy', function() {\r\n          affix && affix.destroy();\r\n          options = null;\r\n          affix = null;\r\n        });\r\n\r\n      }\r\n    };\r\n\r\n  }])\r\n\r\n  .directive('bsAffixTarget', function() {\r\n    return {\r\n      controller: [\"$element\", function($element) {\r\n        this.$element = $element;\r\n      }]\r\n    };\r\n  });\n\r\n// Source: alert.js\n// @BUG: following snippet won't compile correctly\r\n// @TODO: submit issue to core\r\n// '<span ng-if=\"title\"><strong ng-bind=\"title\"></strong>&nbsp;</span><span ng-bind-html=\"content\"></span>' +\r\n\r\nangular.module('mgcrea.ngStrap.alert', ['mgcrea.ngStrap.modal'])\r\n\r\n  .provider('$alert', function() {\r\n\r\n    var defaults = this.defaults = {\r\n      animation: 'am-fade',\r\n      prefixClass: 'alert',\r\n      prefixEvent: 'alert',\r\n      placement: null,\r\n      template: 'alert/alert.tpl.html',\r\n      container: false,\r\n      element: null,\r\n      backdrop: false,\r\n      keyboard: true,\r\n      show: true,\r\n      // Specific options\r\n      duration: false,\r\n      type: false,\r\n      dismissable: true\r\n    };\r\n\r\n    this.$get = [\"$modal\", \"$timeout\", function($modal, $timeout) {\r\n\r\n      function AlertFactory(config) {\r\n\r\n        var $alert = {};\r\n\r\n        // Common vars\r\n        var options = angular.extend({}, defaults, config);\r\n\r\n        $alert = $modal(options);\r\n\r\n        // Support scope as string options [/*title, content, */ type, dismissable]\r\n        $alert.$scope.dismissable = !!options.dismissable;\r\n        if(options.type) {\r\n          $alert.$scope.type = options.type;\r\n        }\r\n\r\n        // Support auto-close duration\r\n        var show = $alert.show;\r\n        if(options.duration) {\r\n          $alert.show = function() {\r\n            show();\r\n            $timeout(function() {\r\n              $alert.hide();\r\n            }, options.duration * 1000);\r\n          };\r\n        }\r\n\r\n        return $alert;\r\n\r\n      }\r\n\r\n      return AlertFactory;\r\n\r\n    }];\r\n\r\n  })\r\n\r\n  .directive('bsAlert', [\"$window\", \"$sce\", \"$alert\", function($window, $sce, $alert) {\r\n\r\n    var requestAnimationFrame = $window.requestAnimationFrame || $window.setTimeout;\r\n\r\n    return {\r\n      restrict: 'EAC',\r\n      scope: true,\r\n      link: function postLink(scope, element, attr, transclusion) {\r\n\r\n        // Directive options\r\n        var options = {scope: scope, element: element, show: false};\r\n        angular.forEach(['template', 'placement', 'keyboard', 'html', 'container', 'animation', 'duration', 'dismissable'], function(key) {\r\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\r\n        });\r\n\r\n        // Support scope as data-attrs\r\n        angular.forEach(['title', 'content', 'type'], function(key) {\r\n          attr[key] && attr.$observe(key, function(newValue, oldValue) {\r\n            scope[key] = $sce.trustAsHtml(newValue);\r\n          });\r\n        });\r\n\r\n        // Support scope as an object\r\n        attr.bsAlert && scope.$watch(attr.bsAlert, function(newValue, oldValue) {\r\n          if(angular.isObject(newValue)) {\r\n            angular.extend(scope, newValue);\r\n          } else {\r\n            scope.content = newValue;\r\n          }\r\n        }, true);\r\n\r\n        // Initialize alert\r\n        var alert = $alert(options);\r\n\r\n        // Trigger\r\n        element.on(attr.trigger || 'click', alert.toggle);\r\n\r\n        // Garbage collection\r\n        scope.$on('$destroy', function() {\r\n          if (alert) alert.destroy();\r\n          options = null;\r\n          alert = null;\r\n        });\r\n\r\n      }\r\n    };\r\n\r\n  }]);\n\r\n// Source: aside.js\nangular.module('mgcrea.ngStrap.aside', ['mgcrea.ngStrap.modal'])\r\n\r\n  .provider('$aside', function() {\r\n\r\n    var defaults = this.defaults = {\r\n      animation: 'am-fade-and-slide-right',\r\n      prefixClass: 'aside',\r\n      prefixEvent: 'aside',\r\n      placement: 'right',\r\n      template: 'aside/aside.tpl.html',\r\n      contentTemplate: false,\r\n      container: false,\r\n      element: null,\r\n      backdrop: true,\r\n      keyboard: true,\r\n      html: false,\r\n      show: true\r\n    };\r\n\r\n    this.$get = [\"$modal\", function($modal) {\r\n\r\n      function AsideFactory(config) {\r\n\r\n        var $aside = {};\r\n\r\n        // Common vars\r\n        var options = angular.extend({}, defaults, config);\r\n\r\n        $aside = $modal(options);\r\n\r\n        return $aside;\r\n\r\n      }\r\n\r\n      return AsideFactory;\r\n\r\n    }];\r\n\r\n  })\r\n\r\n  .directive('bsAside', [\"$window\", \"$sce\", \"$aside\", function($window, $sce, $aside) {\r\n\r\n    var requestAnimationFrame = $window.requestAnimationFrame || $window.setTimeout;\r\n\r\n    return {\r\n      restrict: 'EAC',\r\n      scope: true,\r\n      link: function postLink(scope, element, attr, transclusion) {\r\n        // Directive options\r\n        var options = {scope: scope, element: element, show: false};\r\n        angular.forEach(['template', 'contentTemplate', 'placement', 'backdrop', 'keyboard', 'html', 'container', 'animation'], function(key) {\r\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\r\n        });\r\n\r\n        // Support scope as data-attrs\r\n        angular.forEach(['title', 'content'], function(key) {\r\n          attr[key] && attr.$observe(key, function(newValue, oldValue) {\r\n            scope[key] = $sce.trustAsHtml(newValue);\r\n          });\r\n        });\r\n\r\n        // Support scope as an object\r\n        attr.bsAside && scope.$watch(attr.bsAside, function(newValue, oldValue) {\r\n          if(angular.isObject(newValue)) {\r\n            angular.extend(scope, newValue);\r\n          } else {\r\n            scope.content = newValue;\r\n          }\r\n        }, true);\r\n\r\n        // Initialize aside\r\n        var aside = $aside(options);\r\n\r\n        // Trigger\r\n        element.on(attr.trigger || 'click', aside.toggle);\r\n\r\n        // Garbage collection\r\n        scope.$on('$destroy', function() {\r\n          if (aside) aside.destroy();\r\n          options = null;\r\n          aside = null;\r\n        });\r\n\r\n      }\r\n    };\r\n\r\n  }]);\n\r\n// Source: button.js\nangular.module('mgcrea.ngStrap.button', [])\r\n\r\n  .provider('$button', function() {\r\n\r\n    var defaults = this.defaults = {\r\n      activeClass:'active',\r\n      toggleEvent:'click'\r\n    };\r\n\r\n    this.$get = function() {\r\n      return {defaults: defaults};\r\n    };\r\n\r\n  })\r\n\r\n  .directive('bsCheckboxGroup', function() {\r\n\r\n    return {\r\n      restrict: 'A',\r\n      require: 'ngModel',\r\n      compile: function postLink(element, attr) {\r\n        element.attr('data-toggle', 'buttons');\r\n        element.removeAttr('ng-model');\r\n        var children = element[0].querySelectorAll('input[type=\"checkbox\"]');\r\n        angular.forEach(children, function(child) {\r\n          var childEl = angular.element(child);\r\n          childEl.attr('bs-checkbox', '');\r\n          childEl.attr('ng-model', attr.ngModel + '.' + childEl.attr('value'));\r\n        });\r\n      }\r\n\r\n    };\r\n\r\n  })\r\n\r\n  .directive('bsCheckbox', [\"$button\", \"$$rAF\", function($button, $$rAF) {\r\n\r\n    var defaults = $button.defaults;\r\n    var constantValueRegExp = /^(true|false|\\d+)$/;\r\n\r\n    return {\r\n      restrict: 'A',\r\n      require: 'ngModel',\r\n      link: function postLink(scope, element, attr, controller) {\r\n\r\n        var options = defaults;\r\n\r\n        // Support label > input[type=\"checkbox\"]\r\n        var isInput = element[0].nodeName === 'INPUT';\r\n        var activeElement = isInput ? element.parent() : element;\r\n\r\n        var trueValue = angular.isDefined(attr.trueValue) ? attr.trueValue : true;\r\n        if(constantValueRegExp.test(attr.trueValue)) {\r\n          trueValue = scope.$eval(attr.trueValue);\r\n        }\r\n        var falseValue = angular.isDefined(attr.falseValue) ? attr.falseValue : false;\r\n        if(constantValueRegExp.test(attr.falseValue)) {\r\n          falseValue = scope.$eval(attr.falseValue);\r\n        }\r\n\r\n        // Parse exotic values\r\n        var hasExoticValues = typeof trueValue !== 'boolean' || typeof falseValue !== 'boolean';\r\n        if(hasExoticValues) {\r\n          controller.$parsers.push(function(viewValue) {\r\n            // console.warn('$parser', element.attr('ng-model'), 'viewValue', viewValue);\r\n            return viewValue ? trueValue : falseValue;\r\n          });\r\n          // Fix rendering for exotic values\r\n          scope.$watch(attr.ngModel, function(newValue, oldValue) {\r\n            controller.$render();\r\n          });\r\n        }\r\n\r\n        // model -> view\r\n        controller.$render = function () {\r\n          // console.warn('$render', element.attr('ng-model'), 'controller.$modelValue', typeof controller.$modelValue, controller.$modelValue, 'controller.$viewValue', typeof controller.$viewValue, controller.$viewValue);\r\n          var isActive = angular.equals(controller.$modelValue, trueValue);\r\n          $$rAF(function() {\r\n            if(isInput) element[0].checked = isActive;\r\n            activeElement.toggleClass(options.activeClass, isActive);\r\n          });\r\n        };\r\n\r\n        // view -> model\r\n        element.bind(options.toggleEvent, function() {\r\n          scope.$apply(function () {\r\n            // console.warn('!click', element.attr('ng-model'), 'controller.$viewValue', typeof controller.$viewValue, controller.$viewValue, 'controller.$modelValue', typeof controller.$modelValue, controller.$modelValue);\r\n            if(!isInput) {\r\n              controller.$setViewValue(!activeElement.hasClass('active'));\r\n            }\r\n            if(!hasExoticValues) {\r\n              controller.$render();\r\n            }\r\n          });\r\n        });\r\n\r\n      }\r\n\r\n    };\r\n\r\n  }])\r\n\r\n  .directive('bsRadioGroup', function() {\r\n\r\n    return {\r\n      restrict: 'A',\r\n      require: 'ngModel',\r\n      compile: function postLink(element, attr) {\r\n        element.attr('data-toggle', 'buttons');\r\n        element.removeAttr('ng-model');\r\n        var children = element[0].querySelectorAll('input[type=\"radio\"]');\r\n        angular.forEach(children, function(child) {\r\n          angular.element(child).attr('bs-radio', '');\r\n          angular.element(child).attr('ng-model', attr.ngModel);\r\n        });\r\n      }\r\n\r\n    };\r\n\r\n  })\r\n\r\n  .directive('bsRadio', [\"$button\", \"$$rAF\", function($button, $$rAF) {\r\n\r\n    var defaults = $button.defaults;\r\n    var constantValueRegExp = /^(true|false|\\d+)$/;\r\n\r\n    return {\r\n      restrict: 'A',\r\n      require: 'ngModel',\r\n      link: function postLink(scope, element, attr, controller) {\r\n\r\n        var options = defaults;\r\n\r\n        // Support `label > input[type=\"radio\"]` markup\r\n        var isInput = element[0].nodeName === 'INPUT';\r\n        var activeElement = isInput ? element.parent() : element;\r\n\r\n        var value = constantValueRegExp.test(attr.value) ? scope.$eval(attr.value) : attr.value;\r\n\r\n        // model -> view\r\n        controller.$render = function () {\r\n          // console.warn('$render', element.attr('value'), 'controller.$modelValue', typeof controller.$modelValue, controller.$modelValue, 'controller.$viewValue', typeof controller.$viewValue, controller.$viewValue);\r\n          var isActive = angular.equals(controller.$modelValue, value);\r\n          $$rAF(function() {\r\n            if(isInput) element[0].checked = isActive;\r\n            activeElement.toggleClass(options.activeClass, isActive);\r\n          });\r\n        };\r\n\r\n        // view -> model\r\n        element.bind(options.toggleEvent, function() {\r\n          scope.$apply(function () {\r\n            // console.warn('!click', element.attr('value'), 'controller.$viewValue', typeof controller.$viewValue, controller.$viewValue, 'controller.$modelValue', typeof controller.$modelValue, controller.$modelValue);\r\n            controller.$setViewValue(value);\r\n            controller.$render();\r\n          });\r\n        });\r\n\r\n      }\r\n\r\n    };\r\n\r\n  }]);\n\r\n// Source: collapse.js\nangular.module('mgcrea.ngStrap.collapse', [])\r\n\r\n  .provider('$collapse', function() {\r\n\r\n    var defaults = this.defaults = {\r\n      animation: 'am-collapse',\r\n      disallowToggle: false,\r\n      activeClass: 'in',\r\n      startCollapsed: false\r\n    };\r\n\r\n    var controller = this.controller = function($scope, $element, $attrs) {\r\n      var self = this;\r\n\r\n      // Attributes options\r\n      self.$options = angular.copy(defaults);\r\n      angular.forEach(['animation', 'disallowToggle', 'activeClass', 'startCollapsed'], function (key) {\r\n        if(angular.isDefined($attrs[key])) self.$options[key] = $attrs[key];\r\n      });\r\n\r\n      self.$toggles = [];\r\n      self.$targets = [];\r\n\r\n      self.$viewChangeListeners = [];\r\n\r\n      self.$registerToggle = function(element) {\r\n        self.$toggles.push(element);\r\n      };\r\n      self.$registerTarget = function(element) {\r\n        self.$targets.push(element);\r\n      };\r\n\r\n      self.$targets.$active = !self.$options.startCollapsed ? 0 : -1;\r\n      self.$setActive = $scope.$setActive = function(value) {\r\n        if(!self.$options.disallowToggle) {\r\n          self.$targets.$active = self.$targets.$active === value ? -1 : value;\r\n        } else {\r\n          self.$targets.$active = value;\r\n        }\r\n        self.$viewChangeListeners.forEach(function(fn) {\r\n          fn();\r\n        });\r\n      };\r\n\r\n    };\r\n\r\n    this.$get = function() {\r\n      var $collapse = {};\r\n      $collapse.defaults = defaults;\r\n      $collapse.controller = controller;\r\n      return $collapse;\r\n    };\r\n\r\n  })\r\n\r\n  .directive('bsCollapse', [\"$window\", \"$animate\", \"$collapse\", function($window, $animate, $collapse) {\r\n\r\n    var defaults = $collapse.defaults;\r\n\r\n    return {\r\n      require: ['?ngModel', 'bsCollapse'],\r\n      controller: ['$scope', '$element', '$attrs', $collapse.controller],\r\n      link: function postLink(scope, element, attrs, controllers) {\r\n\r\n        var ngModelCtrl = controllers[0];\r\n        var bsCollapseCtrl = controllers[1];\r\n\r\n        if(ngModelCtrl) {\r\n\r\n          // Update the modelValue following\r\n          bsCollapseCtrl.$viewChangeListeners.push(function() {\r\n            ngModelCtrl.$setViewValue(bsCollapseCtrl.$targets.$active);\r\n          });\r\n\r\n          // modelValue -> $formatters -> viewValue\r\n          ngModelCtrl.$formatters.push(function(modelValue) {\r\n            // console.warn('$formatter(\"%s\"): modelValue=%o (%o)', element.attr('ng-model'), modelValue, typeof modelValue);\r\n            if (bsCollapseCtrl.$targets.$active !== modelValue * 1) {\r\n              bsCollapseCtrl.$setActive(modelValue * 1);\r\n            }\r\n            return modelValue;\r\n          });\r\n\r\n        }\r\n\r\n      }\r\n    };\r\n\r\n  }])\r\n\r\n  .directive('bsCollapseToggle', function() {\r\n\r\n    return {\r\n      require: ['^?ngModel', '^bsCollapse'],\r\n      link: function postLink(scope, element, attrs, controllers) {\r\n\r\n        var ngModelCtrl = controllers[0];\r\n        var bsCollapseCtrl = controllers[1];\r\n\r\n        // Add base attr\r\n        element.attr('data-toggle', 'collapse');\r\n\r\n        // Push pane to parent bsCollapse controller\r\n        bsCollapseCtrl.$registerToggle(element);\r\n        element.on('click', function() {\r\n          var index = attrs.bsCollapseToggle || bsCollapseCtrl.$toggles.indexOf(element);\r\n          bsCollapseCtrl.$setActive(index * 1);\r\n          scope.$apply();\r\n        });\r\n\r\n      }\r\n    };\r\n\r\n  })\r\n\r\n  .directive('bsCollapseTarget', [\"$animate\", function($animate) {\r\n\r\n    return {\r\n      require: ['^?ngModel', '^bsCollapse'],\r\n      // scope: true,\r\n      link: function postLink(scope, element, attrs, controllers) {\r\n\r\n        var ngModelCtrl = controllers[0];\r\n        var bsCollapseCtrl = controllers[1];\r\n\r\n        // Add base class\r\n        element.addClass('collapse');\r\n\r\n        // Add animation class\r\n        if(bsCollapseCtrl.$options.animation) {\r\n          element.addClass(bsCollapseCtrl.$options.animation);\r\n        }\r\n\r\n        // Push pane to parent bsCollapse controller\r\n        bsCollapseCtrl.$registerTarget(element);\r\n\r\n        function render() {\r\n          var index = bsCollapseCtrl.$targets.indexOf(element);\r\n          var active = bsCollapseCtrl.$targets.$active;\r\n          $animate[index === active ? 'addClass' : 'removeClass'](element, bsCollapseCtrl.$options.activeClass);\r\n        }\r\n\r\n        bsCollapseCtrl.$viewChangeListeners.push(function() {\r\n          render();\r\n        });\r\n        render();\r\n\r\n      }\r\n    };\r\n\r\n  }]);\n\r\n// Source: datepicker.js\nangular.module('mgcrea.ngStrap.datepicker', ['mgcrea.ngStrap.helpers.dateParser', 'mgcrea.ngStrap.tooltip'])\r\n\r\n  .provider('$datepicker', function() {\r\n\r\n    var defaults = this.defaults = {\r\n      animation: 'am-fade',\r\n      prefixClass: 'datepicker',\r\n      placement: 'bottom-left',\r\n      template: 'datepicker/datepicker.tpl.html',\r\n      trigger: 'focus',\r\n      container: false,\r\n      keyboard: true,\r\n      html: false,\r\n      delay: 0,\r\n      // lang: $locale.id,\r\n      useNative: false,\r\n      dateType: 'date',\r\n      dateFormat: 'shortDate',\r\n      modelDateFormat: null,\r\n      dayFormat: 'dd',\r\n      strictFormat: false,\r\n      autoclose: false,\r\n      minDate: -Infinity,\r\n      maxDate: +Infinity,\r\n      startView: 0,\r\n      minView: 0,\r\n      startWeek: 0,\r\n      daysOfWeekDisabled: '',\r\n      iconLeft: 'glyphicon glyphicon-chevron-left',\r\n      iconRight: 'glyphicon glyphicon-chevron-right'\r\n    };\r\n\r\n    this.$get = [\"$window\", \"$document\", \"$rootScope\", \"$sce\", \"$locale\", \"dateFilter\", \"datepickerViews\", \"$tooltip\", function($window, $document, $rootScope, $sce, $locale, dateFilter, datepickerViews, $tooltip) {\r\n\r\n      var bodyEl = angular.element($window.document.body);\r\n      var isNative = /(ip(a|o)d|iphone|android)/ig.test($window.navigator.userAgent);\r\n      var isTouch = ('createTouch' in $window.document) && isNative;\r\n      if(!defaults.lang) defaults.lang = $locale.id;\r\n\r\n      function DatepickerFactory(element, controller, config) {\r\n\r\n        var $datepicker = $tooltip(element, angular.extend({}, defaults, config));\r\n        var parentScope = config.scope;\r\n        var options = $datepicker.$options;\r\n        var scope = $datepicker.$scope;\r\n        if(options.startView) options.startView -= options.minView;\r\n\r\n        // View vars\r\n\r\n        var pickerViews = datepickerViews($datepicker);\r\n        $datepicker.$views = pickerViews.views;\r\n        var viewDate = pickerViews.viewDate;\r\n        scope.$mode = options.startView;\r\n        scope.$iconLeft = options.iconLeft;\r\n        scope.$iconRight = options.iconRight;\r\n        var $picker = $datepicker.$views[scope.$mode];\r\n\r\n        // Scope methods\r\n\r\n        scope.$select = function(date) {\r\n          $datepicker.select(date);\r\n        };\r\n        scope.$selectPane = function(value) {\r\n          $datepicker.$selectPane(value);\r\n        };\r\n        scope.$toggleMode = function() {\r\n          $datepicker.setMode((scope.$mode + 1) % $datepicker.$views.length);\r\n        };\r\n\r\n        // Public methods\r\n\r\n        $datepicker.update = function(date) {\r\n          // console.warn('$datepicker.update() newValue=%o', date);\r\n          if(angular.isDate(date) && !isNaN(date.getTime())) {\r\n            $datepicker.$date = date;\r\n            $picker.update.call($picker, date);\r\n          }\r\n          // Build only if pristine\r\n          $datepicker.$build(true);\r\n        };\r\n\r\n        $datepicker.updateDisabledDates = function(dateRanges) {\r\n          options.disabledDateRanges = dateRanges;\r\n          for(var i = 0, l = scope.rows.length; i < l; i++) {\r\n            angular.forEach(scope.rows[i], $datepicker.$setDisabledEl);\r\n          }\r\n        };\r\n\r\n        $datepicker.select = function(date, keep) {\r\n          // console.warn('$datepicker.select', date, scope.$mode);\r\n          if(!angular.isDate(controller.$dateValue)) controller.$dateValue = new Date(date);\r\n          if(!scope.$mode || keep) {\r\n            controller.$setViewValue(angular.copy(date));\r\n            controller.$render();\r\n            if(options.autoclose && !keep) {\r\n              $datepicker.hide(true);\r\n            }\r\n          } else {\r\n            angular.extend(viewDate, {year: date.getFullYear(), month: date.getMonth(), date: date.getDate()});\r\n            $datepicker.setMode(scope.$mode - 1);\r\n            $datepicker.$build();\r\n          }\r\n        };\r\n\r\n        $datepicker.setMode = function(mode) {\r\n          // console.warn('$datepicker.setMode', mode);\r\n          scope.$mode = mode;\r\n          $picker = $datepicker.$views[scope.$mode];\r\n          $datepicker.$build();\r\n        };\r\n\r\n        // Protected methods\r\n\r\n        $datepicker.$build = function(pristine) {\r\n          // console.warn('$datepicker.$build() viewDate=%o', viewDate);\r\n          if(pristine === true && $picker.built) return;\r\n          if(pristine === false && !$picker.built) return;\r\n          $picker.build.call($picker);\r\n        };\r\n\r\n        $datepicker.$updateSelected = function() {\r\n          for(var i = 0, l = scope.rows.length; i < l; i++) {\r\n            angular.forEach(scope.rows[i], updateSelected);\r\n          }\r\n        };\r\n\r\n        $datepicker.$isSelected = function(date) {\r\n          return $picker.isSelected(date);\r\n        };\r\n\r\n        $datepicker.$setDisabledEl = function(el) {\r\n          el.disabled = $picker.isDisabled(el.date);\r\n        };\r\n\r\n        $datepicker.$selectPane = function(value) {\r\n          var steps = $picker.steps;\r\n          var targetDate = new Date(Date.UTC(viewDate.year + ((steps.year || 0) * value), viewDate.month + ((steps.month || 0) * value), viewDate.date + ((steps.day || 0) * value)));\r\n          angular.extend(viewDate, {year: targetDate.getUTCFullYear(), month: targetDate.getUTCMonth(), date: targetDate.getUTCDate()});\r\n          $datepicker.$build();\r\n        };\r\n\r\n        $datepicker.$onMouseDown = function(evt) {\r\n          // Prevent blur on mousedown on .dropdown-menu\r\n          evt.preventDefault();\r\n          evt.stopPropagation();\r\n          // Emulate click for mobile devices\r\n          if(isTouch) {\r\n            var targetEl = angular.element(evt.target);\r\n            if(targetEl[0].nodeName.toLowerCase() !== 'button') {\r\n              targetEl = targetEl.parent();\r\n            }\r\n            targetEl.triggerHandler('click');\r\n          }\r\n        };\r\n\r\n        $datepicker.$onKeyDown = function(evt) {\r\n          if (!/(38|37|39|40|13)/.test(evt.keyCode) || evt.shiftKey || evt.altKey) return;\r\n          evt.preventDefault();\r\n          evt.stopPropagation();\r\n\r\n          if(evt.keyCode === 13) {\r\n            if(!scope.$mode) {\r\n              return $datepicker.hide(true);\r\n            } else {\r\n              return scope.$apply(function() { $datepicker.setMode(scope.$mode - 1); });\r\n            }\r\n          }\r\n\r\n          // Navigate with keyboard\r\n          $picker.onKeyDown(evt);\r\n          parentScope.$digest();\r\n        };\r\n\r\n        // Private\r\n\r\n        function updateSelected(el) {\r\n          el.selected = $datepicker.$isSelected(el.date);\r\n        }\r\n\r\n        function focusElement() {\r\n          element[0].focus();\r\n        }\r\n\r\n        // Overrides\r\n\r\n        var _init = $datepicker.init;\r\n        $datepicker.init = function() {\r\n          if(isNative && options.useNative) {\r\n            element.prop('type', 'date');\r\n            element.css('-webkit-appearance', 'textfield');\r\n            return;\r\n          } else if(isTouch) {\r\n            element.prop('type', 'text');\r\n            element.attr('readonly', 'true');\r\n            element.on('click', focusElement);\r\n          }\r\n          _init();\r\n        };\r\n\r\n        var _destroy = $datepicker.destroy;\r\n        $datepicker.destroy = function() {\r\n          if(isNative && options.useNative) {\r\n            element.off('click', focusElement);\r\n          }\r\n          _destroy();\r\n        };\r\n\r\n        var _show = $datepicker.show;\r\n        $datepicker.show = function() {\r\n          _show();\r\n          setTimeout(function() {\r\n            $datepicker.$element.on(isTouch ? 'touchstart' : 'mousedown', $datepicker.$onMouseDown);\r\n            if(options.keyboard) {\r\n              element.on('keydown', $datepicker.$onKeyDown);\r\n            }\r\n          });\r\n        };\r\n\r\n        var _hide = $datepicker.hide;\r\n        $datepicker.hide = function(blur) {\r\n          $datepicker.$element.off(isTouch ? 'touchstart' : 'mousedown', $datepicker.$onMouseDown);\r\n          if(options.keyboard) {\r\n            element.off('keydown', $datepicker.$onKeyDown);\r\n          }\r\n          _hide(blur);\r\n        };\r\n\r\n        return $datepicker;\r\n\r\n      }\r\n\r\n      DatepickerFactory.defaults = defaults;\r\n      return DatepickerFactory;\r\n\r\n    }];\r\n\r\n  })\r\n\r\n  .directive('bsDatepicker', [\"$window\", \"$parse\", \"$q\", \"$locale\", \"dateFilter\", \"$datepicker\", \"$dateParser\", \"$timeout\", function($window, $parse, $q, $locale, dateFilter, $datepicker, $dateParser, $timeout) {\r\n\r\n    var defaults = $datepicker.defaults;\r\n    var isNative = /(ip(a|o)d|iphone|android)/ig.test($window.navigator.userAgent);\r\n    var isNumeric = function(n) {\r\n      return !isNaN(parseFloat(n)) && isFinite(n);\r\n    };\r\n\r\n    return {\r\n      restrict: 'EAC',\r\n      require: 'ngModel',\r\n      link: function postLink(scope, element, attr, controller) {\r\n\r\n        // Directive options\r\n        var options = {scope: scope, controller: controller};\r\n        angular.forEach(['placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'template', 'autoclose', 'dateType', 'dateFormat', 'modelDateFormat', 'dayFormat', 'strictFormat', 'startWeek', 'startDate', 'useNative', 'lang', 'startView', 'minView', 'iconLeft', 'iconRight', 'daysOfWeekDisabled'], function(key) {\r\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\r\n        });\r\n\r\n        // Visibility binding support\r\n        attr.bsShow && scope.$watch(attr.bsShow, function(newValue, oldValue) {\r\n          if(!datepicker || !angular.isDefined(newValue)) return;\r\n          if(angular.isString(newValue)) newValue = !!newValue.match(',?(datepicker),?');\r\n          newValue === true ? datepicker.show() : datepicker.hide();\r\n        });\r\n\r\n        // Initialize datepicker\r\n        var datepicker = $datepicker(element, controller, options);\r\n        options = datepicker.$options;\r\n        // Set expected iOS format\r\n        if(isNative && options.useNative) options.dateFormat = 'yyyy-MM-dd';\r\n\r\n        // Observe attributes for changes\r\n        angular.forEach(['minDate', 'maxDate'], function(key) {\r\n          // console.warn('attr.$observe(%s)', key, attr[key]);\r\n          angular.isDefined(attr[key]) && attr.$observe(key, function(newValue) {\r\n            // console.warn('attr.$observe(%s)=%o', key, newValue);\r\n            if(newValue === 'today') {\r\n              var today = new Date();\r\n              datepicker.$options[key] = +new Date(today.getFullYear(), today.getMonth(), today.getDate() + (key === 'maxDate' ? 1 : 0), 0, 0, 0, (key === 'minDate' ? 0 : -1));\r\n            } else if(angular.isString(newValue) && newValue.match(/^\".+\"$/)) { // Support {{ dateObj }}\r\n              datepicker.$options[key] = +new Date(newValue.substr(1, newValue.length - 2));\r\n            } else if(isNumeric(newValue)) {\r\n              datepicker.$options[key] = +new Date(parseInt(newValue, 10));\r\n            } else if (angular.isString(newValue) && 0 === newValue.length) { // Reset date\r\n              datepicker.$options[key] = key === 'maxDate' ? +Infinity : -Infinity;\r\n            } else {\r\n              datepicker.$options[key] = +new Date(newValue);\r\n            }\r\n            // Build only if dirty\r\n            !isNaN(datepicker.$options[key]) && datepicker.$build(false);\r\n          });\r\n        });\r\n\t\t\r\n        // Observe date format\r\n        angular.isDefined(attr.dateFormat) && attr.$observe('dateFormat', function(newValue) {\r\n          datepicker.$options.dateFormat = newValue;\r\n        });\r\n\r\n        // Watch model for changes\r\n        scope.$watch(attr.ngModel, function(newValue, oldValue) {\r\n          datepicker.update(controller.$dateValue);\r\n        }, true);\r\n\r\n        // Normalize undefined/null/empty array,\r\n        // so that we don't treat changing from undefined->null as a change.\r\n        function normalizeDateRanges(ranges) {\r\n          if (!ranges || !ranges.length) return null;\r\n          return ranges;\r\n        }\r\n\r\n        if (angular.isDefined(attr.disabledDates)) {\r\n          scope.$watch(attr.disabledDates, function(disabledRanges, previousValue) {\r\n            disabledRanges = normalizeDateRanges(disabledRanges);\r\n            previousValue = normalizeDateRanges(previousValue);\r\n\r\n            if (disabledRanges !== previousValue) {\r\n              datepicker.updateDisabledDates(disabledRanges);\r\n            }\r\n          });\r\n        }\r\n\r\n        var dateParser = $dateParser({format: options.dateFormat, lang: options.lang, strict: options.strictFormat});\r\n\r\n        // viewValue -> $parsers -> modelValue\r\n        controller.$parsers.unshift(function(viewValue) {\r\n          // console.warn('$parser(\"%s\"): viewValue=%o', element.attr('ng-model'), viewValue);\r\n          // Null values should correctly reset the model value & validity\r\n          if(!viewValue) {\r\n            controller.$setValidity('date', true);\r\n            return;\r\n          }\r\n          var parsedDate = dateParser.parse(viewValue, controller.$dateValue);\r\n          if(!parsedDate || isNaN(parsedDate.getTime())) {\r\n            controller.$setValidity('date', false);\r\n            return;\r\n          } else {\r\n            var isMinValid = isNaN(datepicker.$options.minDate) || parsedDate.getTime() >= datepicker.$options.minDate;\r\n            var isMaxValid = isNaN(datepicker.$options.maxDate) || parsedDate.getTime() <= datepicker.$options.maxDate;\r\n            var isValid = isMinValid && isMaxValid;\r\n            controller.$setValidity('date', isValid);\r\n            controller.$setValidity('min', isMinValid);\r\n            controller.$setValidity('max', isMaxValid);\r\n            // Only update the model when we have a valid date\r\n            if(isValid) controller.$dateValue = parsedDate;\r\n          }\r\n          if(options.dateType === 'string') {\r\n            return dateFilter(parsedDate, options.modelDateFormat || options.dateFormat);\r\n          } else if(options.dateType === 'number') {\r\n            return controller.$dateValue.getTime();\r\n          } else if(options.dateType === 'iso') {\r\n            return controller.$dateValue.toISOString();\r\n          } else {\r\n            return new Date(controller.$dateValue);\r\n          }\r\n        });\r\n\r\n        // modelValue -> $formatters -> viewValue\r\n        controller.$formatters.push(function(modelValue) {\r\n          // console.warn('$formatter(\"%s\"): modelValue=%o (%o)', element.attr('ng-model'), modelValue, typeof modelValue);\r\n          var date;\r\n          if(angular.isUndefined(modelValue) || modelValue === null) {\r\n            date = NaN;\r\n          } else if(angular.isDate(modelValue)) {\r\n            date = modelValue;\r\n          } else if(options.dateType === 'string') {\r\n            date = dateParser.parse(modelValue, null, options.modelDateFormat);\r\n          } else {\r\n            date = new Date(modelValue);\r\n          }\r\n          // Setup default value?\r\n          // if(isNaN(date.getTime())) {\r\n          //   var today = new Date();\r\n          //   date = new Date(today.getFullYear(), today.getMonth(), today.getDate(), 0, 0, 0, 0);\r\n          // }\r\n          controller.$dateValue = date;\r\n          return controller.$dateValue;\r\n        });\r\n\r\n        // viewValue -> element\r\n        controller.$render = function() {\r\n          // console.warn('$render(\"%s\"): viewValue=%o', element.attr('ng-model'), controller.$viewValue);\r\n          element.val(!controller.$dateValue || isNaN(controller.$dateValue.getTime()) ? '' : dateFilter(controller.$dateValue, options.dateFormat));\r\n        };\r\n\r\n        // Garbage collection\r\n        scope.$on('$destroy', function() {\r\n          if(datepicker) datepicker.destroy();\r\n          options = null;\r\n          datepicker = null;\r\n        });\r\n\r\n      }\r\n    };\r\n\r\n  }])\r\n\r\n  .provider('datepickerViews', function() {\r\n\r\n    var defaults = this.defaults = {\r\n      dayFormat: 'dd',\r\n      daySplit: 7\r\n    };\r\n\r\n    // Split array into smaller arrays\r\n    function split(arr, size) {\r\n      var arrays = [];\r\n      while(arr.length > 0) {\r\n        arrays.push(arr.splice(0, size));\r\n      }\r\n      return arrays;\r\n    }\r\n\r\n    // Modulus operator\r\n    function mod(n, m) {\r\n      return ((n % m) + m) % m;\r\n    }\r\n\r\n    this.$get = [\"$locale\", \"$sce\", \"dateFilter\", function($locale, $sce, dateFilter) {\r\n\r\n      return function(picker) {\r\n\r\n        var scope = picker.$scope;\r\n        var options = picker.$options;\r\n\r\n        var weekDaysMin = $locale.DATETIME_FORMATS.SHORTDAY;\r\n        var weekDaysLabels = weekDaysMin.slice(options.startWeek).concat(weekDaysMin.slice(0, options.startWeek));\r\n        var weekDaysLabelsHtml = $sce.trustAsHtml('<th class=\"dow text-center\">' + weekDaysLabels.join('</th><th class=\"dow text-center\">') + '</th>');\r\n\r\n        var startDate = picker.$date || (options.startDate ? new Date(options.startDate) : new Date());\r\n        var viewDate = {year: startDate.getFullYear(), month: startDate.getMonth(), date: startDate.getDate()};\r\n        var timezoneOffset = startDate.getTimezoneOffset() * 6e4;\r\n\r\n        var views = [{\r\n            format: options.dayFormat,\r\n            split: 7,\r\n            steps: { month: 1 },\r\n            update: function(date, force) {\r\n              if(!this.built || force || date.getFullYear() !== viewDate.year || date.getMonth() !== viewDate.month) {\r\n                angular.extend(viewDate, {year: picker.$date.getFullYear(), month: picker.$date.getMonth(), date: picker.$date.getDate()});\r\n                picker.$build();\r\n              } else if(date.getDate() !== viewDate.date) {\r\n                viewDate.date = picker.$date.getDate();\r\n                picker.$updateSelected();\r\n              }\r\n            },\r\n            build: function() {\r\n              var firstDayOfMonth = new Date(viewDate.year, viewDate.month, 1), firstDayOfMonthOffset = firstDayOfMonth.getTimezoneOffset();\r\n              var firstDate = new Date(+firstDayOfMonth - mod(firstDayOfMonth.getDay() - options.startWeek, 7) * 864e5), firstDateOffset = firstDate.getTimezoneOffset();\r\n              var today = new Date().toDateString();\r\n              // Handle daylight time switch\r\n              if(firstDateOffset !== firstDayOfMonthOffset) firstDate = new Date(+firstDate + (firstDateOffset - firstDayOfMonthOffset) * 60e3);\r\n              var days = [], day;\r\n              for(var i = 0; i < 42; i++) { // < 7 * 6\r\n                day = new Date(firstDate.getFullYear(), firstDate.getMonth(), firstDate.getDate() + i);\r\n                days.push({date: day, isToday: day.toDateString() === today, label: dateFilter(day, this.format), selected: picker.$date && this.isSelected(day), muted: day.getMonth() !== viewDate.month, disabled: this.isDisabled(day)});\r\n              }\r\n              scope.title = dateFilter(firstDayOfMonth, 'MMMM yyyy');\r\n              scope.showLabels = true;\r\n              scope.labels = weekDaysLabelsHtml;\r\n              scope.rows = split(days, this.split);\r\n              this.built = true;\r\n            },\r\n            isSelected: function(date) {\r\n              return picker.$date && date.getFullYear() === picker.$date.getFullYear() && date.getMonth() === picker.$date.getMonth() && date.getDate() === picker.$date.getDate();\r\n            },\r\n            isDisabled: function(date) {\r\n              var time = date.getTime();\r\n\r\n              // Disabled because of min/max date.\r\n              if (time < options.minDate || time > options.maxDate) return true;\r\n\r\n              // Disabled due to being a disabled day of the week\r\n              if (options.daysOfWeekDisabled.indexOf(date.getDay()) !== -1) return true;\r\n\r\n              // Disabled because of disabled date range.\r\n              if (options.disabledDateRanges) {\r\n                for (var i = 0; i < options.disabledDateRanges.length; i++) {\r\n                  if (time >= options.disabledDateRanges[i].start) {\r\n                    if (time <= options.disabledDateRanges[i].end) return true;\r\n\r\n                    // The disabledDateRanges is expected to be sorted, so if time >= start,\r\n                    // we know it's not disabled.\r\n                    return false;\r\n                  }\r\n                }\r\n              }\r\n\r\n              return false;\r\n            },\r\n            onKeyDown: function(evt) {\r\n              var actualTime = picker.$date.getTime();\r\n              var newDate;\r\n\r\n              if(evt.keyCode === 37) newDate = new Date(actualTime - 1 * 864e5);\r\n              else if(evt.keyCode === 38) newDate = new Date(actualTime - 7 * 864e5);\r\n              else if(evt.keyCode === 39) newDate = new Date(actualTime + 1 * 864e5);\r\n              else if(evt.keyCode === 40) newDate = new Date(actualTime + 7 * 864e5);\r\n\r\n              if (!this.isDisabled(newDate)) picker.select(newDate, true);\r\n            }\r\n          }, {\r\n            name: 'month',\r\n            format: 'MMM',\r\n            split: 4,\r\n            steps: { year: 1 },\r\n            update: function(date, force) {\r\n              if(!this.built || date.getFullYear() !== viewDate.year) {\r\n                angular.extend(viewDate, {year: picker.$date.getFullYear(), month: picker.$date.getMonth(), date: picker.$date.getDate()});\r\n                picker.$build();\r\n              } else if(date.getMonth() !== viewDate.month) {\r\n                angular.extend(viewDate, {month: picker.$date.getMonth(), date: picker.$date.getDate()});\r\n                picker.$updateSelected();\r\n              }\r\n            },\r\n            build: function() {\r\n              var firstMonth = new Date(viewDate.year, 0, 1);\r\n              var months = [], month;\r\n              for (var i = 0; i < 12; i++) {\r\n                month = new Date(viewDate.year, i, 1);\r\n                months.push({date: month, label: dateFilter(month, this.format), selected: picker.$isSelected(month), disabled: this.isDisabled(month)});\r\n              }\r\n              scope.title = dateFilter(month, 'yyyy');\r\n              scope.showLabels = false;\r\n              scope.rows = split(months, this.split);\r\n              this.built = true;\r\n            },\r\n            isSelected: function(date) {\r\n              return picker.$date && date.getFullYear() === picker.$date.getFullYear() && date.getMonth() === picker.$date.getMonth();\r\n            },\r\n            isDisabled: function(date) {\r\n              var lastDate = +new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n              return lastDate < options.minDate || date.getTime() > options.maxDate;\r\n            },\r\n            onKeyDown: function(evt) {\r\n              var actualMonth = picker.$date.getMonth();\r\n              var newDate = new Date(picker.$date);\r\n\r\n              if(evt.keyCode === 37) newDate.setMonth(actualMonth - 1);\r\n              else if(evt.keyCode === 38) newDate.setMonth(actualMonth - 4);\r\n              else if(evt.keyCode === 39) newDate.setMonth(actualMonth + 1);\r\n              else if(evt.keyCode === 40) newDate.setMonth(actualMonth + 4);\r\n\r\n              if (!this.isDisabled(newDate)) picker.select(newDate, true);\r\n            }\r\n          }, {\r\n            name: 'year',\r\n            format: 'yyyy',\r\n            split: 4,\r\n            steps: { year: 12 },\r\n            update: function(date, force) {\r\n              if(!this.built || force || parseInt(date.getFullYear()/20, 10) !== parseInt(viewDate.year/20, 10)) {\r\n                angular.extend(viewDate, {year: picker.$date.getFullYear(), month: picker.$date.getMonth(), date: picker.$date.getDate()});\r\n                picker.$build();\r\n              } else if(date.getFullYear() !== viewDate.year) {\r\n                angular.extend(viewDate, {year: picker.$date.getFullYear(), month: picker.$date.getMonth(), date: picker.$date.getDate()});\r\n                picker.$updateSelected();\r\n              }\r\n            },\r\n            build: function() {\r\n              var firstYear = viewDate.year - viewDate.year % (this.split * 3);\r\n              var years = [], year;\r\n              for (var i = 0; i < 12; i++) {\r\n                year = new Date(firstYear + i, 0, 1);\r\n                years.push({date: year, label: dateFilter(year, this.format), selected: picker.$isSelected(year), disabled: this.isDisabled(year)});\r\n              }\r\n              scope.title = years[0].label + '-' + years[years.length - 1].label;\r\n              scope.showLabels = false;\r\n              scope.rows = split(years, this.split);\r\n              this.built = true;\r\n            },\r\n            isSelected: function(date) {\r\n              return picker.$date && date.getFullYear() === picker.$date.getFullYear();\r\n            },\r\n            isDisabled: function(date) {\r\n              var lastDate = +new Date(date.getFullYear() + 1, 0, 0);\r\n              return lastDate < options.minDate || date.getTime() > options.maxDate;\r\n            },\r\n            onKeyDown: function(evt) {\r\n              var actualYear = picker.$date.getFullYear(),\r\n                  newDate = new Date(picker.$date);\r\n\r\n              if(evt.keyCode === 37) newDate.setYear(actualYear - 1);\r\n              else if(evt.keyCode === 38) newDate.setYear(actualYear - 4);\r\n              else if(evt.keyCode === 39) newDate.setYear(actualYear + 1);\r\n              else if(evt.keyCode === 40) newDate.setYear(actualYear + 4);\r\n\r\n              if (!this.isDisabled(newDate)) picker.select(newDate, true);\r\n            }\r\n          }];\r\n\r\n        return {\r\n          views: options.minView ? Array.prototype.slice.call(views, options.minView) : views,\r\n          viewDate: viewDate\r\n        };\r\n\r\n      };\r\n\r\n    }];\r\n\r\n  });\n\r\n// Source: dropdown.js\nangular.module('mgcrea.ngStrap.dropdown', ['mgcrea.ngStrap.tooltip'])\r\n\r\n  .provider('$dropdown', function() {\r\n\r\n    var defaults = this.defaults = {\r\n      animation: 'am-fade',\r\n      prefixClass: 'dropdown',\r\n      placement: 'bottom-left',\r\n      template: 'dropdown/dropdown.tpl.html',\r\n      trigger: 'click',\r\n      container: false,\r\n      keyboard: true,\r\n      html: false,\r\n      delay: 0\r\n    };\r\n\r\n    this.$get = [\"$window\", \"$rootScope\", \"$tooltip\", function($window, $rootScope, $tooltip) {\r\n\r\n      var bodyEl = angular.element($window.document.body);\r\n      var matchesSelector = Element.prototype.matchesSelector || Element.prototype.webkitMatchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector;\r\n\r\n      function DropdownFactory(element, config) {\r\n\r\n        var $dropdown = {};\r\n\r\n        // Common vars\r\n        var options = angular.extend({}, defaults, config);\r\n        var scope = $dropdown.$scope = options.scope && options.scope.$new() || $rootScope.$new();\r\n\r\n        $dropdown = $tooltip(element, options);\r\n        var parentEl = element.parent();\r\n\r\n        // Protected methods\r\n\r\n        $dropdown.$onKeyDown = function(evt) {\r\n          if (!/(38|40)/.test(evt.keyCode)) return;\r\n          evt.preventDefault();\r\n          evt.stopPropagation();\r\n\r\n          // Retrieve focused index\r\n          var items = angular.element($dropdown.$element[0].querySelectorAll('li:not(.divider) a'));\r\n          if(!items.length) return;\r\n          var index;\r\n          angular.forEach(items, function(el, i) {\r\n            if(matchesSelector && matchesSelector.call(el, ':focus')) index = i;\r\n          });\r\n\r\n          // Navigate with keyboard\r\n          if(evt.keyCode === 38 && index > 0) index--;\r\n          else if(evt.keyCode === 40 && index < items.length - 1) index++;\r\n          else if(angular.isUndefined(index)) index = 0;\r\n          items.eq(index)[0].focus();\r\n\r\n        };\r\n\r\n        // Overrides\r\n\r\n        var show = $dropdown.show;\r\n        $dropdown.show = function() {\r\n          show();\r\n          setTimeout(function() {\r\n            options.keyboard && $dropdown.$element.on('keydown', $dropdown.$onKeyDown);\r\n            bodyEl.on('click', onBodyClick);\r\n          });\r\n          parentEl.hasClass('dropdown') && parentEl.addClass('open');\r\n        };\r\n\r\n        var hide = $dropdown.hide;\r\n        $dropdown.hide = function() {\r\n          options.keyboard && $dropdown.$element.off('keydown', $dropdown.$onKeyDown);\r\n          bodyEl.off('click', onBodyClick);\r\n          parentEl.hasClass('dropdown') && parentEl.removeClass('open');\r\n          hide();\r\n        };\r\n\r\n        // Private functions\r\n\r\n        function onBodyClick(evt) {\r\n          if(evt.target === element[0]) return;\r\n          return evt.target !== element[0] && $dropdown.hide();\r\n        }\r\n\r\n        return $dropdown;\r\n\r\n      }\r\n\r\n      return DropdownFactory;\r\n\r\n    }];\r\n\r\n  })\r\n\r\n  .directive('bsDropdown', [\"$window\", \"$sce\", \"$dropdown\", function($window, $sce, $dropdown) {\r\n\r\n    return {\r\n      restrict: 'EAC',\r\n      scope: true,\r\n      link: function postLink(scope, element, attr, transclusion) {\r\n\r\n        // Directive options\r\n        var options = {scope: scope};\r\n        angular.forEach(['placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'template'], function(key) {\r\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\r\n        });\r\n\r\n        // Support scope as an object\r\n        attr.bsDropdown && scope.$watch(attr.bsDropdown, function(newValue, oldValue) {\r\n          scope.content = newValue;\r\n        }, true);\r\n\r\n        // Visibility binding support\r\n        attr.bsShow && scope.$watch(attr.bsShow, function(newValue, oldValue) {\r\n          if(!dropdown || !angular.isDefined(newValue)) return;\r\n          if(angular.isString(newValue)) newValue = !!newValue.match(',?(dropdown),?');\r\n          newValue === true ? dropdown.show() : dropdown.hide();\r\n        });\r\n\r\n        // Initialize dropdown\r\n        var dropdown = $dropdown(element, options);\r\n\r\n        // Garbage collection\r\n        scope.$on('$destroy', function() {\r\n          if (dropdown) dropdown.destroy();\r\n          options = null;\r\n          dropdown = null;\r\n        });\r\n\r\n      }\r\n    };\r\n\r\n  }]);\n\r\n// Source: date-parser.js\nangular.module('mgcrea.ngStrap.helpers.dateParser', [])\r\n\r\n.provider('$dateParser', [\"$localeProvider\", function($localeProvider) {\r\n\r\n  var proto = Date.prototype;\r\n\r\n  function noop() {\r\n  }\r\n\r\n  function isNumeric(n) {\r\n    return !isNaN(parseFloat(n)) && isFinite(n);\r\n  }\r\n\r\n  var defaults = this.defaults = {\r\n    format: 'shortDate',\r\n    strict: false\r\n  };\r\n\r\n  this.$get = [\"$locale\", \"dateFilter\", function($locale, dateFilter) {\r\n\r\n    var DateParserFactory = function(config) {\r\n\r\n      var options = angular.extend({}, defaults, config);\r\n\r\n      var $dateParser = {};\r\n\r\n      var regExpMap = {\r\n        'sss'   : '[0-9]{3}',\r\n        'ss'    : '[0-5][0-9]',\r\n        's'     : options.strict ? '[1-5]?[0-9]' : '[0-9]|[0-5][0-9]',\r\n        'mm'    : '[0-5][0-9]',\r\n        'm'     : options.strict ? '[1-5]?[0-9]' : '[0-9]|[0-5][0-9]',\r\n        'HH'    : '[01][0-9]|2[0-3]',\r\n        'H'     : options.strict ? '1?[0-9]|2[0-3]' : '[01]?[0-9]|2[0-3]',\r\n        'hh'    : '[0][1-9]|[1][012]',\r\n        'h'     : options.strict ? '[1-9]|1[012]' : '0?[1-9]|1[012]',\r\n        'a'     : 'AM|PM',\r\n        'EEEE'  : $locale.DATETIME_FORMATS.DAY.join('|'),\r\n        'EEE'   : $locale.DATETIME_FORMATS.SHORTDAY.join('|'),\r\n        'dd'    : '0[1-9]|[12][0-9]|3[01]',\r\n        'd'     : options.strict ? '[1-9]|[1-2][0-9]|3[01]' : '0?[1-9]|[1-2][0-9]|3[01]',\r\n        'MMMM'  : $locale.DATETIME_FORMATS.MONTH.join('|'),\r\n        'MMM'   : $locale.DATETIME_FORMATS.SHORTMONTH.join('|'),\r\n        'MM'    : '0[1-9]|1[012]',\r\n        'M'     : options.strict ? '[1-9]|1[012]' : '0?[1-9]|1[012]',\r\n        'yyyy'  : '[1]{1}[0-9]{3}|[2]{1}[0-9]{3}',\r\n        'yy'    : '[0-9]{2}',\r\n        'y'     : options.strict ? '-?(0|[1-9][0-9]{0,3})' : '-?0*[0-9]{1,4}',\r\n      };\r\n\r\n      var setFnMap = {\r\n        'sss'   : proto.setMilliseconds,\r\n        'ss'    : proto.setSeconds,\r\n        's'     : proto.setSeconds,\r\n        'mm'    : proto.setMinutes,\r\n        'm'     : proto.setMinutes,\r\n        'HH'    : proto.setHours,\r\n        'H'     : proto.setHours,\r\n        'hh'    : proto.setHours,\r\n        'h'     : proto.setHours,\r\n        'EEEE'  : noop,\r\n        'EEE'   : noop,\r\n        'dd'    : proto.setDate,\r\n        'd'     : proto.setDate,\r\n        'a'     : function(value) { var hours = this.getHours() % 12; return this.setHours(value.match(/pm/i) ? hours + 12 : hours); },\r\n        'MMMM'  : function(value) { return this.setMonth($locale.DATETIME_FORMATS.MONTH.indexOf(value)); },\r\n        'MMM'   : function(value) { return this.setMonth($locale.DATETIME_FORMATS.SHORTMONTH.indexOf(value)); },\r\n        'MM'    : function(value) { return this.setMonth(1 * value - 1); },\r\n        'M'     : function(value) { return this.setMonth(1 * value - 1); },\r\n        'yyyy'  : proto.setFullYear,\r\n        'yy'    : function(value) { return this.setFullYear(2000 + 1 * value); },\r\n        'y'     : proto.setFullYear\r\n      };\r\n\r\n      var regex, setMap;\r\n\r\n      $dateParser.init = function() {\r\n        $dateParser.$format = $locale.DATETIME_FORMATS[options.format] || options.format;\r\n        regex = regExpForFormat($dateParser.$format);\r\n        setMap = setMapForFormat($dateParser.$format);\r\n      };\r\n\r\n      $dateParser.isValid = function(date) {\r\n        if(angular.isDate(date)) return !isNaN(date.getTime());\r\n        return regex.test(date);\r\n      };\r\n\r\n      $dateParser.parse = function(value, baseDate, format) {\r\n        if(angular.isDate(value)) value = dateFilter(value, format || $dateParser.$format);\r\n        var formatRegex = format ? regExpForFormat(format) : regex;\r\n        var formatSetMap = format ? setMapForFormat(format) : setMap;\r\n        var matches = formatRegex.exec(value);\r\n        if(!matches) return false;\r\n        var date = baseDate || new Date(0, 0, 1);\r\n        for(var i = 0; i < matches.length - 1; i++) {\r\n          formatSetMap[i] && formatSetMap[i].call(date, matches[i+1]);\r\n        }\r\n        return date;\r\n      };\r\n\r\n      // Private functions\r\n\r\n      function setMapForFormat(format) {\r\n        var keys = Object.keys(setFnMap), i;\r\n        var map = [], sortedMap = [];\r\n        // Map to setFn\r\n        var clonedFormat = format;\r\n        for(i = 0; i < keys.length; i++) {\r\n          if(format.split(keys[i]).length > 1) {\r\n            var index = clonedFormat.search(keys[i]);\r\n            format = format.split(keys[i]).join('');\r\n            if(setFnMap[keys[i]]) {\r\n              map[index] = setFnMap[keys[i]];\r\n            }\r\n          }\r\n        }\r\n        // Sort result map\r\n        angular.forEach(map, function(v) {\r\n          // conditional required since angular.forEach broke around v1.2.21\r\n          // related pr: https://github.com/angular/angular.js/pull/8525\r\n          if(v) sortedMap.push(v);\r\n        });\r\n        return sortedMap;\r\n      }\r\n\r\n      function escapeReservedSymbols(text) {\r\n        return text.replace(/\\//g, '[\\\\/]').replace('/-/g', '[-]').replace(/\\./g, '[.]').replace(/\\\\s/g, '[\\\\s]');\r\n      }\r\n\r\n      function regExpForFormat(format) {\r\n        var keys = Object.keys(regExpMap), i;\r\n\r\n        var re = format;\r\n        // Abstract replaces to avoid collisions\r\n        for(i = 0; i < keys.length; i++) {\r\n          re = re.split(keys[i]).join('${' + i + '}');\r\n        }\r\n        // Replace abstracted values\r\n        for(i = 0; i < keys.length; i++) {\r\n          re = re.split('${' + i + '}').join('(' + regExpMap[keys[i]] + ')');\r\n        }\r\n        format = escapeReservedSymbols(format);\r\n\r\n        return new RegExp('^' + re + '$', ['i']);\r\n      }\r\n\r\n      $dateParser.init();\r\n      return $dateParser;\r\n\r\n    };\r\n\r\n    return DateParserFactory;\r\n\r\n  }];\r\n\r\n}]);\n\r\n// Source: debounce.js\nangular.module('mgcrea.ngStrap.helpers.debounce', [])\r\n\r\n// @source jashkenas/underscore\r\n// @url https://github.com/jashkenas/underscore/blob/1.5.2/underscore.js#L693\r\n.constant('debounce', function(func, wait, immediate) {\r\n  var timeout, args, context, timestamp, result;\r\n  return function() {\r\n    context = this;\r\n    args = arguments;\r\n    timestamp = new Date();\r\n    var later = function() {\r\n      var last = (new Date()) - timestamp;\r\n      if (last < wait) {\r\n        timeout = setTimeout(later, wait - last);\r\n      } else {\r\n        timeout = null;\r\n        if (!immediate) result = func.apply(context, args);\r\n      }\r\n    };\r\n    var callNow = immediate && !timeout;\r\n    if (!timeout) {\r\n      timeout = setTimeout(later, wait);\r\n    }\r\n    if (callNow) result = func.apply(context, args);\r\n    return result;\r\n  };\r\n})\r\n\r\n\r\n// @source jashkenas/underscore\r\n// @url https://github.com/jashkenas/underscore/blob/1.5.2/underscore.js#L661\r\n.constant('throttle', function(func, wait, options) {\r\n  var context, args, result;\r\n  var timeout = null;\r\n  var previous = 0;\r\n  options || (options = {});\r\n  var later = function() {\r\n    previous = options.leading === false ? 0 : new Date();\r\n    timeout = null;\r\n    result = func.apply(context, args);\r\n  };\r\n  return function() {\r\n    var now = new Date();\r\n    if (!previous && options.leading === false) previous = now;\r\n    var remaining = wait - (now - previous);\r\n    context = this;\r\n    args = arguments;\r\n    if (remaining <= 0) {\r\n      clearTimeout(timeout);\r\n      timeout = null;\r\n      previous = now;\r\n      result = func.apply(context, args);\r\n    } else if (!timeout && options.trailing !== false) {\r\n      timeout = setTimeout(later, remaining);\r\n    }\r\n    return result;\r\n  };\r\n});\n\r\n// Source: dimensions.js\nangular.module('mgcrea.ngStrap.helpers.dimensions', [])\r\n\r\n  .factory('dimensions', [\"$document\", \"$window\", function($document, $window) {\r\n\r\n    var jqLite = angular.element;\r\n    var fn = {};\r\n\r\n    /**\r\n     * Test the element nodeName\r\n     * @param element\r\n     * @param name\r\n     */\r\n    var nodeName = fn.nodeName = function(element, name) {\r\n      return element.nodeName && element.nodeName.toLowerCase() === name.toLowerCase();\r\n    };\r\n\r\n    /**\r\n     * Returns the element computed style\r\n     * @param element\r\n     * @param prop\r\n     * @param extra\r\n     */\r\n    fn.css = function(element, prop, extra) {\r\n      var value;\r\n      if (element.currentStyle) { //IE\r\n        value = element.currentStyle[prop];\r\n      } else if (window.getComputedStyle) {\r\n        value = window.getComputedStyle(element)[prop];\r\n      } else {\r\n        value = element.style[prop];\r\n      }\r\n      return extra === true ? parseFloat(value) || 0 : value;\r\n    };\r\n\r\n    /**\r\n     * Provides read-only equivalent of jQuery's offset function:\r\n     * @required-by bootstrap-tooltip, bootstrap-affix\r\n     * @url http://api.jquery.com/offset/\r\n     * @param element\r\n     */\r\n    fn.offset = function(element) {\r\n      var boxRect = element.getBoundingClientRect();\r\n      var docElement = element.ownerDocument;\r\n      return {\r\n        width: boxRect.width || element.offsetWidth,\r\n        height: boxRect.height || element.offsetHeight,\r\n        top: boxRect.top + (window.pageYOffset || docElement.documentElement.scrollTop) - (docElement.documentElement.clientTop || 0),\r\n        left: boxRect.left + (window.pageXOffset || docElement.documentElement.scrollLeft) - (docElement.documentElement.clientLeft || 0)\r\n      };\r\n    };\r\n\r\n    /**\r\n     * Provides read-only equivalent of jQuery's position function\r\n     * @required-by bootstrap-tooltip, bootstrap-affix\r\n     * @url http://api.jquery.com/offset/\r\n     * @param element\r\n     */\r\n    fn.position = function(element) {\r\n\r\n      var offsetParentRect = {top: 0, left: 0},\r\n          offsetParentElement,\r\n          offset;\r\n\r\n      // Fixed elements are offset from window (parentOffset = {top:0, left: 0}, because it is it's only offset parent\r\n      if (fn.css(element, 'position') === 'fixed') {\r\n\r\n        // We assume that getBoundingClientRect is available when computed position is fixed\r\n        offset = element.getBoundingClientRect();\r\n\r\n      } else {\r\n\r\n        // Get *real* offsetParentElement\r\n        offsetParentElement = offsetParent(element);\r\n        offset = fn.offset(element);\r\n\r\n        // Get correct offsets\r\n        offset = fn.offset(element);\r\n        if (!nodeName(offsetParentElement, 'html')) {\r\n          offsetParentRect = fn.offset(offsetParentElement);\r\n        }\r\n\r\n        // Add offsetParent borders\r\n        offsetParentRect.top += fn.css(offsetParentElement, 'borderTopWidth', true);\r\n        offsetParentRect.left += fn.css(offsetParentElement, 'borderLeftWidth', true);\r\n      }\r\n\r\n      // Subtract parent offsets and element margins\r\n      return {\r\n        width: element.offsetWidth,\r\n        height: element.offsetHeight,\r\n        top: offset.top - offsetParentRect.top - fn.css(element, 'marginTop', true),\r\n        left: offset.left - offsetParentRect.left - fn.css(element, 'marginLeft', true)\r\n      };\r\n\r\n    };\r\n\r\n    /**\r\n     * Returns the closest, non-statically positioned offsetParent of a given element\r\n     * @required-by fn.position\r\n     * @param element\r\n     */\r\n    var offsetParent = function offsetParentElement(element) {\r\n      var docElement = element.ownerDocument;\r\n      var offsetParent = element.offsetParent || docElement;\r\n      if(nodeName(offsetParent, '#document')) return docElement.documentElement;\r\n      while(offsetParent && !nodeName(offsetParent, 'html') && fn.css(offsetParent, 'position') === 'static') {\r\n        offsetParent = offsetParent.offsetParent;\r\n      }\r\n      return offsetParent || docElement.documentElement;\r\n    };\r\n\r\n    /**\r\n     * Provides equivalent of jQuery's height function\r\n     * @required-by bootstrap-affix\r\n     * @url http://api.jquery.com/height/\r\n     * @param element\r\n     * @param outer\r\n     */\r\n    fn.height = function(element, outer) {\r\n      var value = element.offsetHeight;\r\n      if(outer) {\r\n        value += fn.css(element, 'marginTop', true) + fn.css(element, 'marginBottom', true);\r\n      } else {\r\n        value -= fn.css(element, 'paddingTop', true) + fn.css(element, 'paddingBottom', true) + fn.css(element, 'borderTopWidth', true) + fn.css(element, 'borderBottomWidth', true);\r\n      }\r\n      return value;\r\n    };\r\n\r\n    /**\r\n     * Provides equivalent of jQuery's width function\r\n     * @required-by bootstrap-affix\r\n     * @url http://api.jquery.com/width/\r\n     * @param element\r\n     * @param outer\r\n     */\r\n    fn.width = function(element, outer) {\r\n      var value = element.offsetWidth;\r\n      if(outer) {\r\n        value += fn.css(element, 'marginLeft', true) + fn.css(element, 'marginRight', true);\r\n      } else {\r\n        value -= fn.css(element, 'paddingLeft', true) + fn.css(element, 'paddingRight', true) + fn.css(element, 'borderLeftWidth', true) + fn.css(element, 'borderRightWidth', true);\r\n      }\r\n      return value;\r\n    };\r\n\r\n    return fn;\r\n\r\n  }]);\n\r\n// Source: parse-options.js\nangular.module('mgcrea.ngStrap.helpers.parseOptions', [])\r\n\r\n  .provider('$parseOptions', function() {\r\n\r\n    var defaults = this.defaults = {\r\n      regexp: /^\\s*(.*?)(?:\\s+as\\s+(.*?))?(?:\\s+group\\s+by\\s+(.*))?\\s+for\\s+(?:([\\$\\w][\\$\\w]*)|(?:\\(\\s*([\\$\\w][\\$\\w]*)\\s*,\\s*([\\$\\w][\\$\\w]*)\\s*\\)))\\s+in\\s+(.*?)(?:\\s+track\\s+by\\s+(.*?))?$/\r\n    };\r\n\r\n    this.$get = [\"$parse\", \"$q\", function($parse, $q) {\r\n\r\n      function ParseOptionsFactory(attr, config) {\r\n\r\n        var $parseOptions = {};\r\n\r\n        // Common vars\r\n        var options = angular.extend({}, defaults, config);\r\n        $parseOptions.$values = [];\r\n\r\n        // Private vars\r\n        var match, displayFn, valueName, keyName, groupByFn, valueFn, valuesFn;\r\n\r\n        $parseOptions.init = function() {\r\n          $parseOptions.$match = match = attr.match(options.regexp);\r\n          displayFn = $parse(match[2] || match[1]),\r\n          valueName = match[4] || match[6],\r\n          keyName = match[5],\r\n          groupByFn = $parse(match[3] || ''),\r\n          valueFn = $parse(match[2] ? match[1] : valueName),\r\n          valuesFn = $parse(match[7]);\r\n        };\r\n\r\n        $parseOptions.valuesFn = function(scope, controller) {\r\n          return $q.when(valuesFn(scope, controller))\r\n          .then(function(values) {\r\n            $parseOptions.$values = values ? parseValues(values, scope) : {};\r\n            return $parseOptions.$values;\r\n          });\r\n        };\r\n\r\n        // Private functions\r\n\r\n        function parseValues(values, scope) {\r\n          return values.map(function(match, index) {\r\n            var locals = {}, label, value;\r\n            locals[valueName] = match;\r\n            label = displayFn(scope, locals);\r\n            value = valueFn(scope, locals) || index;\r\n            return {label: label, value: value};\r\n          });\r\n        }\r\n\r\n        $parseOptions.init();\r\n        return $parseOptions;\r\n\r\n      }\r\n\r\n      return ParseOptionsFactory;\r\n\r\n    }];\r\n\r\n  });\n\r\n// Source: raf.js\n(angular.version.minor < 3 && angular.version.dot < 14) && angular.module('ng')\r\n\r\n.factory('$$rAF', [\"$window\", \"$timeout\", function($window, $timeout) {\r\n\r\n  var requestAnimationFrame = $window.requestAnimationFrame ||\r\n                              $window.webkitRequestAnimationFrame ||\r\n                              $window.mozRequestAnimationFrame;\r\n\r\n  var cancelAnimationFrame = $window.cancelAnimationFrame ||\r\n                             $window.webkitCancelAnimationFrame ||\r\n                             $window.mozCancelAnimationFrame ||\r\n                             $window.webkitCancelRequestAnimationFrame;\r\n\r\n  var rafSupported = !!requestAnimationFrame;\r\n  var raf = rafSupported ?\r\n    function(fn) {\r\n      var id = requestAnimationFrame(fn);\r\n      return function() {\r\n        cancelAnimationFrame(id);\r\n      };\r\n    } :\r\n    function(fn) {\r\n      var timer = $timeout(fn, 16.66, false); // 1000 / 60 = 16.666\r\n      return function() {\r\n        $timeout.cancel(timer);\r\n      };\r\n    };\r\n\r\n  raf.supported = rafSupported;\r\n\r\n  return raf;\r\n\r\n}]);\r\n\r\n// .factory('$$animateReflow', function($$rAF, $document) {\r\n\r\n//   var bodyEl = $document[0].body;\r\n\r\n//   return function(fn) {\r\n//     //the returned function acts as the cancellation function\r\n//     return $$rAF(function() {\r\n//       //the line below will force the browser to perform a repaint\r\n//       //so that all the animated elements within the animation frame\r\n//       //will be properly updated and drawn on screen. This is\r\n//       //required to perform multi-class CSS based animations with\r\n//       //Firefox. DO NOT REMOVE THIS LINE.\r\n//       var a = bodyEl.offsetWidth + 1;\r\n//       fn();\r\n//     });\r\n//   };\r\n\r\n// });\n\r\n// Source: modal.js\nangular.module('mgcrea.ngStrap.modal', ['mgcrea.ngStrap.helpers.dimensions'])\r\n\r\n  .provider('$modal', function() {\r\n\r\n    var defaults = this.defaults = {\r\n      animation: 'am-fade',\r\n      backdropAnimation: 'am-fade',\r\n      prefixClass: 'modal',\r\n      prefixEvent: 'modal',\r\n      placement: 'top',\r\n      template: 'modal/modal.tpl.html',\r\n      contentTemplate: false,\r\n      container: false,\r\n      element: null,\r\n      backdrop: true,\r\n      keyboard: true,\r\n      html: false,\r\n      show: true\r\n    };\r\n\r\n    this.$get = [\"$window\", \"$rootScope\", \"$compile\", \"$q\", \"$templateCache\", \"$http\", \"$animate\", \"$timeout\", \"$sce\", \"dimensions\", function($window, $rootScope, $compile, $q, $templateCache, $http, $animate, $timeout, $sce, dimensions) {\r\n\r\n      var forEach = angular.forEach;\r\n      var trim = String.prototype.trim;\r\n      var requestAnimationFrame = $window.requestAnimationFrame || $window.setTimeout;\r\n      var bodyElement = angular.element($window.document.body);\r\n      var htmlReplaceRegExp = /ng-bind=\"/ig;\r\n\r\n      function ModalFactory(config) {\r\n\r\n        var $modal = {};\r\n\r\n        // Common vars\r\n        var options = $modal.$options = angular.extend({}, defaults, config);\r\n        $modal.$promise = fetchTemplate(options.template);\r\n        var scope = $modal.$scope = options.scope && options.scope.$new() || $rootScope.$new();\r\n        if(!options.element && !options.container) {\r\n          options.container = 'body';\r\n        }\r\n\r\n        // Support scope as string options\r\n        forEach(['title', 'content'], function(key) {\r\n          if(options[key]) scope[key] = $sce.trustAsHtml(options[key]);\r\n        });\r\n\r\n        // Provide scope helpers\r\n        scope.$hide = function() {\r\n          scope.$$postDigest(function() {\r\n            $modal.hide();\r\n          });\r\n        };\r\n        scope.$show = function() {\r\n          scope.$$postDigest(function() {\r\n            $modal.show();\r\n          });\r\n        };\r\n        scope.$toggle = function() {\r\n          scope.$$postDigest(function() {\r\n            $modal.toggle();\r\n          });\r\n        };\r\n\r\n        // Support contentTemplate option\r\n        if(options.contentTemplate) {\r\n          $modal.$promise = $modal.$promise.then(function(template) {\r\n            var templateEl = angular.element(template);\r\n            return fetchTemplate(options.contentTemplate)\r\n            .then(function(contentTemplate) {\r\n              var contentEl = findElement('[ng-bind=\"content\"]', templateEl[0]).removeAttr('ng-bind').html(contentTemplate);\r\n              // Drop the default footer as you probably don't want it if you use a custom contentTemplate\r\n              if(!config.template) contentEl.next().remove();\r\n              return templateEl[0].outerHTML;\r\n            });\r\n          });\r\n        }\r\n\r\n        // Fetch, compile then initialize modal\r\n        var modalLinker, modalElement;\r\n        var backdropElement = angular.element('<div class=\"' + options.prefixClass + '-backdrop\"/>');\r\n        $modal.$promise.then(function(template) {\r\n          if(angular.isObject(template)) template = template.data;\r\n          if(options.html) template = template.replace(htmlReplaceRegExp, 'ng-bind-html=\"');\r\n          template = trim.apply(template);\r\n          modalLinker = $compile(template);\r\n          $modal.init();\r\n        });\r\n\r\n        $modal.init = function() {\r\n\r\n          // Options: show\r\n          if(options.show) {\r\n            scope.$$postDigest(function() {\r\n              $modal.show();\r\n            });\r\n          }\r\n\r\n        };\r\n\r\n        $modal.destroy = function() {\r\n\r\n          // Remove element\r\n          if(modalElement) {\r\n            modalElement.remove();\r\n            modalElement = null;\r\n          }\r\n          if(backdropElement) {\r\n            backdropElement.remove();\r\n            backdropElement = null;\r\n          }\r\n\r\n          // Destroy scope\r\n          scope.$destroy();\r\n\r\n        };\r\n\r\n        $modal.show = function() {\r\n\r\n          if(scope.$emit(options.prefixEvent + '.show.before', $modal).defaultPrevented) {\r\n            return;\r\n          }\r\n          var parent;\r\n          if(angular.isElement(options.container)) {\r\n            parent = options.container;\r\n          } else {\r\n            parent = options.container ? findElement(options.container) : null;\r\n          }\r\n          var after = options.container ? null : options.element;\r\n\r\n          // Fetch a cloned element linked from template\r\n          modalElement = $modal.$element = modalLinker(scope, function(clonedElement, scope) {});\r\n\r\n          // Set the initial positioning.\r\n          modalElement.css({display: 'block'}).addClass(options.placement);\r\n\r\n          // Options: animation\r\n          if(options.animation) {\r\n            if(options.backdrop) {\r\n              backdropElement.addClass(options.backdropAnimation);\r\n            }\r\n            modalElement.addClass(options.animation);\r\n          }\r\n\r\n          if(options.backdrop) {\r\n            $animate.enter(backdropElement, bodyElement, null);\r\n          }\r\n          // Support v1.3+ $animate\r\n          // https://github.com/angular/angular.js/commit/bf0f5502b1bbfddc5cdd2f138efd9188b8c652a9\r\n          var promise = $animate.enter(modalElement, parent, after, enterAnimateCallback);\r\n          if(promise && promise.then) promise.then(enterAnimateCallback);\r\n\r\n          scope.$isShown = true;\r\n          scope.$$phase || (scope.$root && scope.$root.$$phase) || scope.$digest();\r\n          // Focus once the enter-animation has started\r\n          // Weird PhantomJS bug hack\r\n          var el = modalElement[0];\r\n          requestAnimationFrame(function() {\r\n            el.focus();\r\n          });\r\n\r\n          bodyElement.addClass(options.prefixClass + '-open');\r\n          if(options.animation) {\r\n            bodyElement.addClass(options.prefixClass + '-with-' + options.animation);\r\n          }\r\n\r\n          // Bind events\r\n          if(options.backdrop) {\r\n            modalElement.on('click', hideOnBackdropClick);\r\n            backdropElement.on('click', hideOnBackdropClick);\r\n          }\r\n          if(options.keyboard) {\r\n            modalElement.on('keyup', $modal.$onKeyUp);\r\n          }\r\n        };\r\n\r\n        function enterAnimateCallback() {\r\n          scope.$emit(options.prefixEvent + '.show', $modal);\r\n        }\r\n\r\n        $modal.hide = function() {\r\n\r\n          if(scope.$emit(options.prefixEvent + '.hide.before', $modal).defaultPrevented) {\r\n            return;\r\n          }\r\n          var promise = $animate.leave(modalElement, leaveAnimateCallback);\r\n          // Support v1.3+ $animate\r\n          // https://github.com/angular/angular.js/commit/bf0f5502b1bbfddc5cdd2f138efd9188b8c652a9\r\n          if(promise && promise.then) promise.then(leaveAnimateCallback);\r\n\r\n          if(options.backdrop) {\r\n            $animate.leave(backdropElement);\r\n          }\r\n          scope.$isShown = false;\r\n          scope.$$phase || (scope.$root && scope.$root.$$phase) || scope.$digest();\r\n\r\n          // Unbind events\r\n          if(options.backdrop) {\r\n            modalElement.off('click', hideOnBackdropClick);\r\n            backdropElement.off('click', hideOnBackdropClick);\r\n          }\r\n          if(options.keyboard) {\r\n            modalElement.off('keyup', $modal.$onKeyUp);\r\n          }\r\n        };\r\n\r\n        function leaveAnimateCallback() {\r\n          scope.$emit(options.prefixEvent + '.hide', $modal);\r\n          bodyElement.removeClass(options.prefixClass + '-open');\r\n          if(options.animation) {\r\n            bodyElement.removeClass(options.prefixClass + '-with-' + options.animation);\r\n          }\r\n        }\r\n\r\n        $modal.toggle = function() {\r\n\r\n          scope.$isShown ? $modal.hide() : $modal.show();\r\n\r\n        };\r\n\r\n        $modal.focus = function() {\r\n          modalElement[0].focus();\r\n        };\r\n\r\n        // Protected methods\r\n\r\n        $modal.$onKeyUp = function(evt) {\r\n\r\n          if (evt.which === 27 && scope.$isShown) {\r\n            $modal.hide();\r\n            evt.stopPropagation();\r\n          }\r\n\r\n        };\r\n\r\n        // Private methods\r\n\r\n        function hideOnBackdropClick(evt) {\r\n          if(evt.target !== evt.currentTarget) return;\r\n          options.backdrop === 'static' ? $modal.focus() : $modal.hide();\r\n        }\r\n\r\n        return $modal;\r\n\r\n      }\r\n\r\n      // Helper functions\r\n\r\n      function findElement(query, element) {\r\n        return angular.element((element || document).querySelectorAll(query));\r\n      }\r\n\r\n      function fetchTemplate(template) {\r\n        return $q.when($templateCache.get(template) || $http.get(template))\r\n        .then(function(res) {\r\n          if(angular.isObject(res)) {\r\n            $templateCache.put(template, res.data);\r\n            return res.data;\r\n          }\r\n          return res;\r\n        });\r\n      }\r\n\r\n      return ModalFactory;\r\n\r\n    }];\r\n\r\n  })\r\n\r\n  .directive('bsModal', [\"$window\", \"$sce\", \"$modal\", function($window, $sce, $modal) {\r\n\r\n    return {\r\n      restrict: 'EAC',\r\n      scope: true,\r\n      link: function postLink(scope, element, attr, transclusion) {\r\n\r\n        // Directive options\r\n        var options = {scope: scope, element: element, show: false};\r\n        angular.forEach(['template', 'contentTemplate', 'placement', 'backdrop', 'keyboard', 'html', 'container', 'animation'], function(key) {\r\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\r\n        });\r\n\r\n        // Support scope as data-attrs\r\n        angular.forEach(['title', 'content'], function(key) {\r\n          attr[key] && attr.$observe(key, function(newValue, oldValue) {\r\n            scope[key] = $sce.trustAsHtml(newValue);\r\n          });\r\n        });\r\n\r\n        // Support scope as an object\r\n        attr.bsModal && scope.$watch(attr.bsModal, function(newValue, oldValue) {\r\n          if(angular.isObject(newValue)) {\r\n            angular.extend(scope, newValue);\r\n          } else {\r\n            scope.content = newValue;\r\n          }\r\n        }, true);\r\n\r\n        // Initialize modal\r\n        var modal = $modal(options);\r\n\r\n        // Trigger\r\n        element.on(attr.trigger || 'click', modal.toggle);\r\n\r\n        // Garbage collection\r\n        scope.$on('$destroy', function() {\r\n          if (modal) modal.destroy();\r\n          options = null;\r\n          modal = null;\r\n        });\r\n\r\n      }\r\n    };\r\n\r\n  }]);\n\r\n// Source: navbar.js\nangular.module('mgcrea.ngStrap.navbar', [])\r\n\r\n  .provider('$navbar', function() {\r\n\r\n    var defaults = this.defaults = {\r\n      activeClass: 'active',\r\n      routeAttr: 'data-match-route',\r\n      strict: false\r\n    };\r\n\r\n    this.$get = function() {\r\n      return {defaults: defaults};\r\n    };\r\n\r\n  })\r\n\r\n  .directive('bsNavbar', [\"$window\", \"$location\", \"$navbar\", function($window, $location, $navbar) {\r\n\r\n    var defaults = $navbar.defaults;\r\n\r\n    return {\r\n      restrict: 'A',\r\n      link: function postLink(scope, element, attr, controller) {\r\n\r\n        // Directive options\r\n        var options = angular.copy(defaults);\r\n        angular.forEach(Object.keys(defaults), function(key) {\r\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\r\n        });\r\n\r\n        // Watch for the $location\r\n        scope.$watch(function() {\r\n\r\n          return $location.path();\r\n\r\n        }, function(newValue, oldValue) {\r\n\r\n          var liElements = element[0].querySelectorAll('li[' + options.routeAttr + ']');\r\n\r\n          angular.forEach(liElements, function(li) {\r\n\r\n            var liElement = angular.element(li);\r\n            var pattern = liElement.attr(options.routeAttr).replace('/', '\\\\/');\r\n            if(options.strict) {\r\n              pattern = '^' + pattern + '$';\r\n            }\r\n            var regexp = new RegExp(pattern, ['i']);\r\n\r\n            if(regexp.test(newValue)) {\r\n              liElement.addClass(options.activeClass);\r\n            } else {\r\n              liElement.removeClass(options.activeClass);\r\n            }\r\n\r\n          });\r\n\r\n        });\r\n\r\n      }\r\n\r\n    };\r\n\r\n  }]);\n\r\n// Source: popover.js\nangular.module('mgcrea.ngStrap.popover', ['mgcrea.ngStrap.tooltip'])\r\n\r\n  .provider('$popover', function() {\r\n\r\n    var defaults = this.defaults = {\r\n      animation: 'am-fade',\r\n      customClass: '',\r\n      container: false,\r\n      target: false,\r\n      placement: 'right',\r\n      template: 'popover/popover.tpl.html',\r\n      contentTemplate: false,\r\n      trigger: 'click',\r\n      keyboard: true,\r\n      html: false,\r\n      title: '',\r\n      content: '',\r\n      delay: 0\r\n    };\r\n\r\n    this.$get = [\"$tooltip\", function($tooltip) {\r\n\r\n      function PopoverFactory(element, config) {\r\n\r\n        // Common vars\r\n        var options = angular.extend({}, defaults, config);\r\n\r\n        var $popover = $tooltip(element, options);\r\n\r\n        // Support scope as string options [/*title, */content]\r\n        if(options.content) {\r\n          $popover.$scope.content = options.content;\r\n        }\r\n\r\n        return $popover;\r\n\r\n      }\r\n\r\n      return PopoverFactory;\r\n\r\n    }];\r\n\r\n  })\r\n\r\n  .directive('bsPopover', [\"$window\", \"$sce\", \"$popover\", function($window, $sce, $popover) {\r\n\r\n    var requestAnimationFrame = $window.requestAnimationFrame || $window.setTimeout;\r\n\r\n    return {\r\n      restrict: 'EAC',\r\n      scope: true,\r\n      link: function postLink(scope, element, attr) {\r\n\r\n        // Directive options\r\n        var options = {scope: scope};\r\n        angular.forEach(['template', 'contentTemplate', 'placement', 'container', 'target', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'customClass'], function(key) {\r\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\r\n        });\r\n\r\n        // Support scope as data-attrs\r\n        angular.forEach(['title', 'content'], function(key) {\r\n          attr[key] && attr.$observe(key, function(newValue, oldValue) {\r\n            scope[key] = $sce.trustAsHtml(newValue);\r\n            angular.isDefined(oldValue) && requestAnimationFrame(function() {\r\n              popover && popover.$applyPlacement();\r\n            });\r\n          });\r\n        });\r\n\r\n        // Support scope as an object\r\n        attr.bsPopover && scope.$watch(attr.bsPopover, function(newValue, oldValue) {\r\n          if(angular.isObject(newValue)) {\r\n            angular.extend(scope, newValue);\r\n          } else {\r\n            scope.content = newValue;\r\n          }\r\n          angular.isDefined(oldValue) && requestAnimationFrame(function() {\r\n            popover && popover.$applyPlacement();\r\n          });\r\n        }, true);\r\n\r\n        // Visibility binding support\r\n        attr.bsShow && scope.$watch(attr.bsShow, function(newValue, oldValue) {\r\n          if(!popover || !angular.isDefined(newValue)) return;\r\n          if(angular.isString(newValue)) newValue = !!newValue.match(',?(popover),?');\r\n          newValue === true ? popover.show() : popover.hide();\r\n        });\r\n\r\n        // Initialize popover\r\n        var popover = $popover(element, options);\r\n\r\n        // Garbage collection\r\n        scope.$on('$destroy', function() {\r\n          if (popover) popover.destroy();\r\n          options = null;\r\n          popover = null;\r\n        });\r\n\r\n      }\r\n    };\r\n\r\n  }]);\n\r\n// Source: scrollspy.js\nangular.module('mgcrea.ngStrap.scrollspy', ['mgcrea.ngStrap.helpers.debounce', 'mgcrea.ngStrap.helpers.dimensions'])\r\n\r\n  .provider('$scrollspy', function() {\r\n\r\n    // Pool of registered spies\r\n    var spies = this.$$spies = {};\r\n\r\n    var defaults = this.defaults = {\r\n      debounce: 150,\r\n      throttle: 100,\r\n      offset: 100\r\n    };\r\n\r\n    this.$get = [\"$window\", \"$document\", \"$rootScope\", \"dimensions\", \"debounce\", \"throttle\", function($window, $document, $rootScope, dimensions, debounce, throttle) {\r\n\r\n      var windowEl = angular.element($window);\r\n      var docEl = angular.element($document.prop('documentElement'));\r\n      var bodyEl = angular.element($window.document.body);\r\n\r\n      // Helper functions\r\n\r\n      function nodeName(element, name) {\r\n        return element[0].nodeName && element[0].nodeName.toLowerCase() === name.toLowerCase();\r\n      }\r\n\r\n      function ScrollSpyFactory(config) {\r\n\r\n        // Common vars\r\n        var options = angular.extend({}, defaults, config);\r\n        if(!options.element) options.element = bodyEl;\r\n        var isWindowSpy = nodeName(options.element, 'body');\r\n        var scrollEl = isWindowSpy ? windowEl : options.element;\r\n        var scrollId = isWindowSpy ? 'window' : options.id;\r\n\r\n        // Use existing spy\r\n        if(spies[scrollId]) {\r\n          spies[scrollId].$$count++;\r\n          return spies[scrollId];\r\n        }\r\n\r\n        var $scrollspy = {};\r\n\r\n        // Private vars\r\n        var unbindViewContentLoaded, unbindIncludeContentLoaded;\r\n        var trackedElements = $scrollspy.$trackedElements = [];\r\n        var sortedElements = [];\r\n        var activeTarget;\r\n        var debouncedCheckPosition;\r\n        var throttledCheckPosition;\r\n        var debouncedCheckOffsets;\r\n        var viewportHeight;\r\n        var scrollTop;\r\n\r\n        $scrollspy.init = function() {\r\n\r\n          // Setup internal ref counter\r\n          this.$$count = 1;\r\n\r\n          // Bind events\r\n          debouncedCheckPosition = debounce(this.checkPosition, options.debounce);\r\n          throttledCheckPosition = throttle(this.checkPosition, options.throttle);\r\n          scrollEl.on('click', this.checkPositionWithEventLoop);\r\n          windowEl.on('resize', debouncedCheckPosition);\r\n          scrollEl.on('scroll', throttledCheckPosition);\r\n\r\n          debouncedCheckOffsets = debounce(this.checkOffsets, options.debounce);\r\n          unbindViewContentLoaded = $rootScope.$on('$viewContentLoaded', debouncedCheckOffsets);\r\n          unbindIncludeContentLoaded = $rootScope.$on('$includeContentLoaded', debouncedCheckOffsets);\r\n          debouncedCheckOffsets();\r\n\r\n          // Register spy for reuse\r\n          if(scrollId) {\r\n            spies[scrollId] = $scrollspy;\r\n          }\r\n\r\n        };\r\n\r\n        $scrollspy.destroy = function() {\r\n\r\n          // Check internal ref counter\r\n          this.$$count--;\r\n          if(this.$$count > 0) {\r\n            return;\r\n          }\r\n\r\n          // Unbind events\r\n          scrollEl.off('click', this.checkPositionWithEventLoop);\r\n          windowEl.off('resize', debouncedCheckPosition);\r\n          scrollEl.off('scroll', debouncedCheckPosition);\r\n          unbindViewContentLoaded();\r\n          unbindIncludeContentLoaded();\r\n          if (scrollId) {\r\n            delete spies[scrollId];\r\n          }\r\n        };\r\n\r\n        $scrollspy.checkPosition = function() {\r\n\r\n          // Not ready yet\r\n          if(!sortedElements.length) return;\r\n\r\n          // Calculate the scroll position\r\n          scrollTop = (isWindowSpy ? $window.pageYOffset : scrollEl.prop('scrollTop')) || 0;\r\n\r\n          // Calculate the viewport height for use by the components\r\n          viewportHeight = Math.max($window.innerHeight, docEl.prop('clientHeight'));\r\n\r\n          // Activate first element if scroll is smaller\r\n          if(scrollTop < sortedElements[0].offsetTop && activeTarget !== sortedElements[0].target) {\r\n            return $scrollspy.$activateElement(sortedElements[0]);\r\n          }\r\n\r\n          // Activate proper element\r\n          for (var i = sortedElements.length; i--;) {\r\n            if(angular.isUndefined(sortedElements[i].offsetTop) || sortedElements[i].offsetTop === null) continue;\r\n            if(activeTarget === sortedElements[i].target) continue;\r\n            if(scrollTop < sortedElements[i].offsetTop) continue;\r\n            if(sortedElements[i + 1] && scrollTop > sortedElements[i + 1].offsetTop) continue;\r\n            return $scrollspy.$activateElement(sortedElements[i]);\r\n          }\r\n\r\n        };\r\n\r\n        $scrollspy.checkPositionWithEventLoop = function() {\r\n          setTimeout(this.checkPosition, 1);\r\n        };\r\n\r\n        // Protected methods\r\n\r\n        $scrollspy.$activateElement = function(element) {\r\n          if(activeTarget) {\r\n            var activeElement = $scrollspy.$getTrackedElement(activeTarget);\r\n            if(activeElement) {\r\n              activeElement.source.removeClass('active');\r\n              if(nodeName(activeElement.source, 'li') && nodeName(activeElement.source.parent().parent(), 'li')) {\r\n                activeElement.source.parent().parent().removeClass('active');\r\n              }\r\n            }\r\n          }\r\n          activeTarget = element.target;\r\n          element.source.addClass('active');\r\n          if(nodeName(element.source, 'li') && nodeName(element.source.parent().parent(), 'li')) {\r\n            element.source.parent().parent().addClass('active');\r\n          }\r\n        };\r\n\r\n        $scrollspy.$getTrackedElement = function(target) {\r\n          return trackedElements.filter(function(obj) {\r\n            return obj.target === target;\r\n          })[0];\r\n        };\r\n\r\n        // Track offsets behavior\r\n\r\n        $scrollspy.checkOffsets = function() {\r\n\r\n          angular.forEach(trackedElements, function(trackedElement) {\r\n            var targetElement = document.querySelector(trackedElement.target);\r\n            trackedElement.offsetTop = targetElement ? dimensions.offset(targetElement).top : null;\r\n            if(options.offset && trackedElement.offsetTop !== null) trackedElement.offsetTop -= options.offset * 1;\r\n          });\r\n\r\n          sortedElements = trackedElements\r\n          .filter(function(el) {\r\n            return el.offsetTop !== null;\r\n          })\r\n          .sort(function(a, b) {\r\n            return a.offsetTop - b.offsetTop;\r\n          });\r\n\r\n          debouncedCheckPosition();\r\n\r\n        };\r\n\r\n        $scrollspy.trackElement = function(target, source) {\r\n          trackedElements.push({target: target, source: source});\r\n        };\r\n\r\n        $scrollspy.untrackElement = function(target, source) {\r\n          var toDelete;\r\n          for (var i = trackedElements.length; i--;) {\r\n            if(trackedElements[i].target === target && trackedElements[i].source === source) {\r\n              toDelete = i;\r\n              break;\r\n            }\r\n          }\r\n          trackedElements = trackedElements.splice(toDelete, 1);\r\n        };\r\n\r\n        $scrollspy.activate = function(i) {\r\n          trackedElements[i].addClass('active');\r\n        };\r\n\r\n        // Initialize plugin\r\n\r\n        $scrollspy.init();\r\n        return $scrollspy;\r\n\r\n      }\r\n\r\n      return ScrollSpyFactory;\r\n\r\n    }];\r\n\r\n  })\r\n\r\n  .directive('bsScrollspy', [\"$rootScope\", \"debounce\", \"dimensions\", \"$scrollspy\", function($rootScope, debounce, dimensions, $scrollspy) {\r\n\r\n    return {\r\n      restrict: 'EAC',\r\n      link: function postLink(scope, element, attr) {\r\n\r\n        var options = {scope: scope};\r\n        angular.forEach(['offset', 'target'], function(key) {\r\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\r\n        });\r\n\r\n        var scrollspy = $scrollspy(options);\r\n        scrollspy.trackElement(options.target, element);\r\n\r\n        scope.$on('$destroy', function() {\r\n          if (scrollspy) {\r\n            scrollspy.untrackElement(options.target, element);\r\n            scrollspy.destroy();\r\n          }\r\n          options = null;\r\n          scrollspy = null;\r\n        });\r\n\r\n      }\r\n    };\r\n\r\n  }])\r\n\r\n\r\n  .directive('bsScrollspyList', [\"$rootScope\", \"debounce\", \"dimensions\", \"$scrollspy\", function($rootScope, debounce, dimensions, $scrollspy) {\r\n\r\n    return {\r\n      restrict: 'A',\r\n      compile: function postLink(element, attr) {\r\n        var children = element[0].querySelectorAll('li > a[href]');\r\n        angular.forEach(children, function(child) {\r\n          var childEl = angular.element(child);\r\n          childEl.parent().attr('bs-scrollspy', '').attr('data-target', childEl.attr('href'));\r\n        });\r\n      }\r\n\r\n    };\r\n\r\n  }]);\n\r\n// Source: select.js\nangular.module('mgcrea.ngStrap.select', ['mgcrea.ngStrap.tooltip', 'mgcrea.ngStrap.helpers.parseOptions'])\r\n\r\n  .provider('$select', function() {\r\n\r\n    var defaults = this.defaults = {\r\n      animation: 'am-fade',\r\n      prefixClass: 'select',\r\n      prefixEvent: '$select',\r\n      placement: 'bottom-left',\r\n      template: 'select/select.tpl.html',\r\n      trigger: 'focus',\r\n      container: false,\r\n      keyboard: true,\r\n      html: false,\r\n      delay: 0,\r\n      multiple: false,\r\n      allNoneButtons: false,\r\n      sort: true,\r\n      caretHtml: '&nbsp;<span class=\"caret\"></span>',\r\n      placeholder: 'Choose among the following...',\r\n      maxLength: 3,\r\n      maxLengthHtml: 'selected',\r\n      iconCheckmark: 'glyphicon glyphicon-ok',\r\n      reloadEvents: []\r\n    };\r\n    \r\n    this.$get = [\"$window\", \"$document\", \"$rootScope\", \"$tooltip\", function($window, $document, $rootScope, $tooltip) {\r\n\r\n      var bodyEl = angular.element($window.document.body);\r\n      var isNative = /(ip(a|o)d|iphone|android)/ig.test($window.navigator.userAgent);\r\n      var isTouch = ('createTouch' in $window.document) && isNative;\r\n\r\n      function SelectFactory(element, controller, config) {\r\n\r\n        var $select = {};\r\n\r\n        // Common vars\r\n        var options = angular.extend({}, defaults, config);\r\n\r\n        $select = $tooltip(element, options);\r\n        var scope = $select.$scope;\r\n\r\n        scope.$matches = [];\r\n        scope.$activeIndex = 0;\r\n        scope.$isMultiple = options.multiple;\r\n        scope.$showAllNoneButtons = options.allNoneButtons && options.multiple;\r\n        scope.$iconCheckmark = options.iconCheckmark;\r\n\r\n        scope.$activate = function(index) {\r\n          scope.$$postDigest(function() {\r\n            $select.activate(index);\r\n          });\r\n        };\r\n\r\n        scope.$select = function(index, evt) {\r\n          scope.$$postDigest(function() {\r\n            $select.select(index);\r\n          });\r\n        };\r\n\r\n        scope.$isVisible = function() {\r\n          return $select.$isVisible();\r\n        };\r\n\r\n        scope.$isActive = function(index) {\r\n          return $select.$isActive(index);\r\n        };\r\n\r\n        scope.$selectAll = function () {\r\n          for (var i = 0; i < scope.$matches.length; i++) {\r\n            if (!scope.$isActive(i)) {\r\n              scope.$select(i);\r\n            }\r\n          }\r\n        };\r\n\r\n        scope.$selectNone = function () {\r\n          for (var i = 0; i < scope.$matches.length; i++) {\r\n            if (scope.$isActive(i)) {\r\n              scope.$select(i);\r\n            }\r\n          }\r\n        };\r\n\r\n        // Public methods\r\n\r\n        $select.update = function(matches) {\r\n          scope.$matches = matches;\r\n          $select.$updateActiveIndex();\r\n        };\r\n\r\n        $select.activate = function(index) {\r\n          if(options.multiple) {\r\n            scope.$activeIndex.sort();\r\n            $select.$isActive(index) ? scope.$activeIndex.splice(scope.$activeIndex.indexOf(index), 1) : scope.$activeIndex.push(index);\r\n            if(options.sort) scope.$activeIndex.sort();\r\n          } else {\r\n            scope.$activeIndex = index;\r\n          }\r\n          return scope.$activeIndex;\r\n        };\r\n\r\n        $select.select = function(index) {\r\n          var value = scope.$matches[index].value;\r\n          scope.$apply(function() {\r\n            $select.activate(index);\r\n            if(options.multiple) {\r\n              controller.$setViewValue(scope.$activeIndex.map(function(index) {\r\n                return scope.$matches[index].value;\r\n              }));\r\n            } else {\r\n              controller.$setViewValue(value);\r\n              // Hide if single select\r\n              $select.hide();\r\n            }\r\n          });\r\n          // Emit event\r\n          scope.$emit(options.prefixEvent + '.select', value, index);\r\n        };\r\n\r\n        // Protected methods\r\n\r\n        $select.$updateActiveIndex = function() {\r\n          if(controller.$modelValue && scope.$matches.length) {\r\n            if(options.multiple && angular.isArray(controller.$modelValue)) {\r\n              scope.$activeIndex = controller.$modelValue.map(function(value) {\r\n                return $select.$getIndex(value);\r\n              });\r\n            } else {\r\n              scope.$activeIndex = $select.$getIndex(controller.$modelValue);\r\n            }\r\n          } else if(scope.$activeIndex >= scope.$matches.length) {\r\n            scope.$activeIndex = options.multiple ? [] : 0;\r\n          }\r\n        };\r\n\r\n        $select.$isVisible = function() {\r\n          if(!options.minLength || !controller) {\r\n            return scope.$matches.length;\r\n          }\r\n          // minLength support\r\n          return scope.$matches.length && controller.$viewValue.length >= options.minLength;\r\n        };\r\n\r\n        $select.$isActive = function(index) {\r\n          if(options.multiple) {\r\n            return scope.$activeIndex.indexOf(index) !== -1;\r\n          } else {\r\n            return scope.$activeIndex === index;\r\n          }\r\n        };\r\n\r\n        $select.$getIndex = function(value) {\r\n          var l = scope.$matches.length, i = l;\r\n          if(!l) return;\r\n          for(i = l; i--;) {\r\n            if(scope.$matches[i].value === value) break;\r\n          }\r\n          if(i < 0) return;\r\n          return i;\r\n        };\r\n\r\n        $select.$onMouseDown = function(evt) {\r\n          // Prevent blur on mousedown on .dropdown-menu\r\n          evt.preventDefault();\r\n          evt.stopPropagation();\r\n          // Emulate click for mobile devices\r\n          if(isTouch) {\r\n            var targetEl = angular.element(evt.target);\r\n            targetEl.triggerHandler('click');\r\n          }\r\n        };\r\n\r\n        $select.$onKeyDown = function(evt) {\r\n          if (!/(9|13|38|40)/.test(evt.keyCode)) return;\r\n          evt.preventDefault();\r\n          evt.stopPropagation();\r\n\r\n          // Select with enter\r\n          if(!options.multiple && (evt.keyCode === 13 || evt.keyCode === 9)) {\r\n            return $select.select(scope.$activeIndex);\r\n          }\r\n\r\n          // Navigate with keyboard\r\n          if(evt.keyCode === 38 && scope.$activeIndex > 0) scope.$activeIndex--;\r\n          else if(evt.keyCode === 40 && scope.$activeIndex < scope.$matches.length - 1) scope.$activeIndex++;\r\n          else if(angular.isUndefined(scope.$activeIndex)) scope.$activeIndex = 0;\r\n          scope.$digest();\r\n        };\r\n\r\n        // Overrides\r\n\r\n        var _show = $select.show;\r\n        $select.show = function() {\r\n          _show();\r\n          if(options.multiple) {\r\n            $select.$element.addClass('select-multiple');\r\n          }\r\n          setTimeout(function() {\r\n            $select.$element.on(isTouch ? 'touchstart' : 'mousedown', $select.$onMouseDown);\r\n            if(options.keyboard) {\r\n              element.on('keydown', $select.$onKeyDown);\r\n            }\r\n          });\r\n        };\r\n\r\n        var _hide = $select.hide;\r\n        $select.hide = function() {\r\n          $select.$element.off(isTouch ? 'touchstart' : 'mousedown', $select.$onMouseDown);\r\n          if(options.keyboard) {\r\n            element.off('keydown', $select.$onKeyDown);\r\n          }\r\n          _hide(true);\r\n        };\r\n\r\n        return $select;\r\n\r\n      }\r\n\r\n      SelectFactory.defaults = defaults;\r\n      return SelectFactory;\r\n\r\n    }];\r\n\r\n  })\r\n\r\n  .directive('bsSelect', [\"$window\", \"$parse\", \"$q\", \"$select\", \"$parseOptions\", function($window, $parse, $q, $select, $parseOptions) {\r\n\r\n    var defaults = $select.defaults;\r\n\r\n    return {\r\n      restrict: 'EAC',\r\n      require: 'ngModel',\r\n      link: function postLink(scope, element, attr, controller) {\r\n\r\n        // Directive options\r\n        var options = {scope: scope};\r\n        angular.forEach(['placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'template', 'placeholder', 'multiple', 'allNoneButtons', 'maxLength', 'maxLengthHtml', 'reloadEvents'], function (key) {\r\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\r\n        });\r\n\r\n        // Add support for select markup\r\n        if(element[0].nodeName.toLowerCase() === 'select') {\r\n          var inputEl = element;\r\n          inputEl.css('display', 'none');\r\n          element = angular.element('<button type=\"button\" class=\"btn btn-default\"></button>');\r\n          inputEl.after(element);\r\n        }\r\n\r\n        // Build proper ngOptions\r\n        var parsedOptions = $parseOptions(attr.ngOptions);\r\n\r\n        // Initialize select\r\n        var select = $select(element, controller, options);\r\n\r\n        var reloadData = function () {\r\n            // console.warn('scope.$watch(%s)', watchedOptions, newValue, oldValue);\r\n            parsedOptions.valuesFn(scope, controller)\r\n                .then(function (values) {\r\n                    select.update(values);\r\n                    controller.$render();\r\n                });\r\n        };\r\n\r\n        // Initialize reloading\r\n        var reloadEvents = options.reloadEvents === undefined ? defaults.reloadEvents : options.reloadEvents.replace(' ', ',').split(',').filter(function (eventName) {\r\n            return eventName.trim() !== '';\r\n        });\r\n\r\n        reloadEvents.forEach(function (eventName) {\r\n            scope.$root.$on(eventName, reloadData);\r\n        });\r\n\r\n        // Watch ngOptions values before filtering for changes\r\n        var watchedOptions = parsedOptions.$match[7].replace(/\\|.+/, '').trim();\r\n        scope.$watch(watchedOptions, reloadData, true);\r\n\r\n        // Watch model for changes\r\n        scope.$watch(attr.ngModel, function(newValue, oldValue) {\r\n          // console.warn('scope.$watch(%s)', attr.ngModel, newValue, oldValue);\r\n          select.$updateActiveIndex();\r\n          controller.$render();\r\n        }, true);\r\n\r\n        // Observe placeholder\r\n        attr.$observe('placeholder', function() {\r\n          controller.$render();\r\n        });\r\n        \r\n        var getPlaceHolder = function () {\r\n            try {\r\n                return scope.$eval(attr.placeholder) || attr.placeholder || defaults.placeholder;\r\n            } catch (e) {\r\n                return attr.placeholder || defaults.placeholder;\r\n            }\r\n        };\r\n\r\n        // Model rendering in view\r\n        controller.$render = function () {\r\n          // console.warn('$render', element.attr('ng-model'), 'controller.$modelValue', typeof controller.$modelValue, controller.$modelValue, 'controller.$viewValue', typeof controller.$viewValue, controller.$viewValue);\r\n          var selected, index;\r\n          if(options.multiple && angular.isArray(controller.$modelValue)) {\r\n            selected = controller.$modelValue.map(function(value) {\r\n              index = select.$getIndex(value);\r\n              return angular.isDefined(index) ? select.$scope.$matches[index].label : false;\r\n            }).filter(angular.isDefined);\r\n            if(selected.length > (options.maxLength || defaults.maxLength)) {\r\n              selected = selected.length + ' ' + (options.maxLengthHtml || defaults.maxLengthHtml);\r\n            } else {\r\n              selected = selected.join(', ');\r\n            }\r\n          } else {\r\n            index = select.$getIndex(controller.$modelValue);\r\n            selected = angular.isDefined(index) ? select.$scope.$matches[index].label : false;\r\n          }\r\n          element.html((selected ? selected : getPlaceHolder()) + defaults.caretHtml);\r\n        };\r\n\r\n        // Garbage collection\r\n        scope.$on('$destroy', function() {\r\n          if (select) select.destroy();\r\n          options = null;\r\n          select = null;\r\n        });\r\n      }\r\n    };\r\n  }]);\n\r\n// Source: tab.js\nangular.module('mgcrea.ngStrap.tab', [])\r\n\r\n  .provider('$tab', function() {\r\n\r\n    var defaults = this.defaults = {\r\n      animation: 'am-fade',\r\n      template: 'tab/tab.tpl.html',\r\n      navClass: 'nav-tabs',\r\n      activeClass: 'active'\r\n    };\r\n\r\n    var controller = this.controller = function($scope, $element, $attrs) {\r\n      var self = this;\r\n\r\n      // Attributes options\r\n      self.$options = angular.copy(defaults);\r\n      angular.forEach(['animation', 'navClass', 'activeClass'], function(key) {\r\n        if(angular.isDefined($attrs[key])) self.$options[key] = $attrs[key];\r\n      });\r\n\r\n      // Publish options on scope\r\n      $scope.$navClass = self.$options.navClass;\r\n      $scope.$activeClass = self.$options.activeClass;\r\n\r\n      self.$panes = $scope.$panes = [];\r\n\r\n      self.$viewChangeListeners = [];\r\n\r\n      self.$push = function(pane) {\r\n        self.$panes.push(pane);\r\n      };\r\n\r\n      self.$panes.$active = 0;\r\n      self.$setActive = $scope.$setActive = function(value) {\r\n        self.$panes.$active = value;\r\n        self.$viewChangeListeners.forEach(function(fn) {\r\n          fn();\r\n        });\r\n      };\r\n\r\n    };\r\n\r\n    this.$get = function() {\r\n      var $tab = {};\r\n      $tab.defaults = defaults;\r\n      $tab.controller = controller;\r\n      return $tab;\r\n    };\r\n\r\n  })\r\n\r\n  .directive('bsTabs', [\"$window\", \"$animate\", \"$tab\", function($window, $animate, $tab) {\r\n\r\n    var defaults = $tab.defaults;\r\n\r\n    return {\r\n      require: ['?ngModel', 'bsTabs'],\r\n      transclude: true,\r\n      scope: true,\r\n      controller: ['$scope', '$element', '$attrs', $tab.controller],\r\n      templateUrl: function(element, attr) {\r\n        return attr.template || defaults.template;\r\n      },\r\n      link: function postLink(scope, element, attrs, controllers) {\r\n\r\n        var ngModelCtrl = controllers[0];\r\n        var bsTabsCtrl = controllers[1];\r\n\r\n        if(ngModelCtrl) {\r\n\r\n          // Update the modelValue following\r\n          bsTabsCtrl.$viewChangeListeners.push(function() {\r\n            ngModelCtrl.$setViewValue(bsTabsCtrl.$panes.$active);\r\n          });\r\n\r\n          // modelValue -> $formatters -> viewValue\r\n          ngModelCtrl.$formatters.push(function(modelValue) {\r\n            // console.warn('$formatter(\"%s\"): modelValue=%o (%o)', element.attr('ng-model'), modelValue, typeof modelValue);\r\n            bsTabsCtrl.$setActive(modelValue * 1);\r\n            return modelValue;\r\n          });\r\n\r\n        }\r\n\r\n      }\r\n    };\r\n\r\n  }])\r\n\r\n  .directive('bsPane', [\"$window\", \"$animate\", \"$sce\", function($window, $animate, $sce) {\r\n\r\n    return {\r\n      require: ['^?ngModel', '^bsTabs'],\r\n      scope: true,\r\n      link: function postLink(scope, element, attrs, controllers) {\r\n\r\n        var ngModelCtrl = controllers[0];\r\n        var bsTabsCtrl = controllers[1];\r\n\r\n        // Add base class\r\n        element.addClass('tab-pane');\r\n\r\n        // Observe title attribute for change\r\n        attrs.$observe('title', function(newValue, oldValue) {\r\n          scope.title = $sce.trustAsHtml(newValue);\r\n        });\r\n\r\n        // Add animation class\r\n        if(bsTabsCtrl.$options.animation) {\r\n          element.addClass(bsTabsCtrl.$options.animation);\r\n        }\r\n\r\n        // Push pane to parent bsTabs controller\r\n        bsTabsCtrl.$push(scope);\r\n\r\n        function render() {\r\n          var index = bsTabsCtrl.$panes.indexOf(scope);\r\n          var active = bsTabsCtrl.$panes.$active;\r\n          $animate[index === active ? 'addClass' : 'removeClass'](element, bsTabsCtrl.$options.activeClass);\r\n        }\r\n\r\n        bsTabsCtrl.$viewChangeListeners.push(function() {\r\n          render();\r\n        });\r\n        render();\r\n\r\n      }\r\n    };\r\n\r\n  }]);\n\r\n// Source: timepicker.js\nangular.module('mgcrea.ngStrap.timepicker', ['mgcrea.ngStrap.helpers.dateParser', 'mgcrea.ngStrap.tooltip'])\r\n\r\n  .provider('$timepicker', function() {\r\n\r\n    var defaults = this.defaults = {\r\n      animation: 'am-fade',\r\n      prefixClass: 'timepicker',\r\n      placement: 'bottom-left',\r\n      template: 'timepicker/timepicker.tpl.html',\r\n      trigger: 'focus',\r\n      container: false,\r\n      keyboard: true,\r\n      html: false,\r\n      delay: 0,\r\n      // lang: $locale.id,\r\n      useNative: true,\r\n      timeType: 'date',\r\n      timeFormat: 'shortTime',\r\n      modelTimeFormat: null,\r\n      autoclose: false,\r\n      minTime: -Infinity,\r\n      maxTime: +Infinity,\r\n      length: 5,\r\n      hourStep: 1,\r\n      minuteStep: 5,\r\n      iconUp: 'glyphicon glyphicon-chevron-up',\r\n      iconDown: 'glyphicon glyphicon-chevron-down',\r\n      arrowBehavior: 'pager'\r\n    };\r\n\r\n    this.$get = [\"$window\", \"$document\", \"$rootScope\", \"$sce\", \"$locale\", \"dateFilter\", \"$tooltip\", function($window, $document, $rootScope, $sce, $locale, dateFilter, $tooltip) {\r\n\r\n      var bodyEl = angular.element($window.document.body);\r\n      var isNative = /(ip(a|o)d|iphone|android)/ig.test($window.navigator.userAgent);\r\n      var isTouch = ('createTouch' in $window.document) && isNative;\r\n      if(!defaults.lang) defaults.lang = $locale.id;\r\n\r\n      function timepickerFactory(element, controller, config) {\r\n\r\n        var $timepicker = $tooltip(element, angular.extend({}, defaults, config));\r\n        var parentScope = config.scope;\r\n        var options = $timepicker.$options;\r\n        var scope = $timepicker.$scope;\r\n\r\n        // View vars\r\n\r\n        var selectedIndex = 0;\r\n        var startDate = controller.$dateValue || new Date();\r\n        var viewDate = {hour: startDate.getHours(), meridian: startDate.getHours() < 12, minute: startDate.getMinutes(), second: startDate.getSeconds(), millisecond: startDate.getMilliseconds()};\r\n\r\n        var format = $locale.DATETIME_FORMATS[options.timeFormat] || options.timeFormat;\r\n        var formats = /(h+)([:\\.])?(m+)[ ]?(a?)/i.exec(format).slice(1);\r\n        scope.$iconUp = options.iconUp;\r\n        scope.$iconDown = options.iconDown;\r\n\r\n        // Scope methods\r\n\r\n        scope.$select = function(date, index) {\r\n          $timepicker.select(date, index);\r\n        };\r\n        scope.$moveIndex = function(value, index) {\r\n          $timepicker.$moveIndex(value, index);\r\n        };\r\n        scope.$switchMeridian = function(date) {\r\n          $timepicker.switchMeridian(date);\r\n        };\r\n\r\n        // Public methods\r\n\r\n        $timepicker.update = function(date) {\r\n          // console.warn('$timepicker.update() newValue=%o', date);\r\n          if(angular.isDate(date) && !isNaN(date.getTime())) {\r\n            $timepicker.$date = date;\r\n            angular.extend(viewDate, {hour: date.getHours(), minute: date.getMinutes(), second: date.getSeconds(), millisecond: date.getMilliseconds()});\r\n            $timepicker.$build();\r\n          } else if(!$timepicker.$isBuilt) {\r\n            $timepicker.$build();\r\n          }\r\n        };\r\n\r\n        $timepicker.select = function(date, index, keep) {\r\n          // console.warn('$timepicker.select', date, scope.$mode);\r\n          if(!controller.$dateValue || isNaN(controller.$dateValue.getTime())) controller.$dateValue = new Date(1970, 0, 1);\r\n          if(!angular.isDate(date)) date = new Date(date);\r\n          if(index === 0) controller.$dateValue.setHours(date.getHours());\r\n          else if(index === 1) controller.$dateValue.setMinutes(date.getMinutes());\r\n          controller.$setViewValue(controller.$dateValue);\r\n          controller.$render();\r\n          if(options.autoclose && !keep) {\r\n            $timepicker.hide(true);\r\n          }\r\n        };\r\n\r\n        $timepicker.switchMeridian = function(date) {\r\n          var hours = (date || controller.$dateValue).getHours();\r\n          controller.$dateValue.setHours(hours < 12 ? hours + 12 : hours - 12);\r\n          controller.$setViewValue(controller.$dateValue);\r\n          controller.$render();\r\n        };\r\n\r\n        // Protected methods\r\n\r\n        $timepicker.$build = function() {\r\n          // console.warn('$timepicker.$build() viewDate=%o', viewDate);\r\n          var i, midIndex = scope.midIndex = parseInt(options.length / 2, 10);\r\n          var hours = [], hour;\r\n          for(i = 0; i < options.length; i++) {\r\n            hour = new Date(1970, 0, 1, viewDate.hour - (midIndex - i) * options.hourStep);\r\n            hours.push({date: hour, label: dateFilter(hour, formats[0]), selected: $timepicker.$date && $timepicker.$isSelected(hour, 0), disabled: $timepicker.$isDisabled(hour, 0)});\r\n          }\r\n          var minutes = [], minute;\r\n          for(i = 0; i < options.length; i++) {\r\n            minute = new Date(1970, 0, 1, 0, viewDate.minute - (midIndex - i) * options.minuteStep);\r\n            minutes.push({date: minute, label: dateFilter(minute, formats[2]), selected: $timepicker.$date && $timepicker.$isSelected(minute, 1), disabled: $timepicker.$isDisabled(minute, 1)});\r\n          }\r\n\r\n          var rows = [];\r\n          for(i = 0; i < options.length; i++) {\r\n            rows.push([hours[i], minutes[i]]);\r\n          }\r\n          scope.rows = rows;\r\n          scope.showAM = !!formats[3];\r\n          scope.isAM = ($timepicker.$date || hours[midIndex].date).getHours() < 12;\r\n          scope.timeSeparator = formats[1];\r\n          $timepicker.$isBuilt = true;\r\n        };\r\n\r\n        $timepicker.$isSelected = function(date, index) {\r\n          if(!$timepicker.$date) return false;\r\n          else if(index === 0) {\r\n            return date.getHours() === $timepicker.$date.getHours();\r\n          } else if(index === 1) {\r\n            return date.getMinutes() === $timepicker.$date.getMinutes();\r\n          }\r\n        };\r\n\r\n        $timepicker.$isDisabled = function(date, index) {\r\n          var selectedTime;\r\n          if(index === 0) {\r\n            selectedTime = date.getTime() + viewDate.minute * 6e4;\r\n          } else if(index === 1) {\r\n            selectedTime = date.getTime() + viewDate.hour * 36e5;\r\n          }\r\n          return selectedTime < options.minTime * 1 || selectedTime > options.maxTime * 1;\r\n        };\r\n\r\n        scope.$arrowAction = function (value, index) {\r\n          if (options.arrowBehavior === 'picker') {\r\n            $timepicker.$setTimeByStep(value,index);\r\n          } else {\r\n            $timepicker.$moveIndex(value,index);\r\n          }\r\n        };\r\n\r\n        $timepicker.$setTimeByStep = function(value, index) {\r\n          var newDate = new Date($timepicker.$date);\r\n          var hours = newDate.getHours(), hoursLength = dateFilter(newDate, 'h').length;\r\n          var minutes = newDate.getMinutes(), minutesLength = dateFilter(newDate, 'mm').length;\r\n          if (index === 0) {\r\n            newDate.setHours(hours - (parseInt(options.hourStep, 10) * value));\r\n          }\r\n          else {\r\n            newDate.setMinutes(minutes - (parseInt(options.minuteStep, 10) * value));\r\n          }\r\n          $timepicker.select(newDate, index, true);\r\n          parentScope.$digest();\r\n        };\r\n\r\n        $timepicker.$moveIndex = function(value, index) {\r\n          var targetDate;\r\n          if(index === 0) {\r\n            targetDate = new Date(1970, 0, 1, viewDate.hour + (value * options.length), viewDate.minute);\r\n            angular.extend(viewDate, {hour: targetDate.getHours()});\r\n          } else if(index === 1) {\r\n            targetDate = new Date(1970, 0, 1, viewDate.hour, viewDate.minute + (value * options.length * options.minuteStep));\r\n            angular.extend(viewDate, {minute: targetDate.getMinutes()});\r\n          }\r\n          $timepicker.$build();\r\n        };\r\n\r\n        $timepicker.$onMouseDown = function(evt) {\r\n          // Prevent blur on mousedown on .dropdown-menu\r\n          if(evt.target.nodeName.toLowerCase() !== 'input') evt.preventDefault();\r\n          evt.stopPropagation();\r\n          // Emulate click for mobile devices\r\n          if(isTouch) {\r\n            var targetEl = angular.element(evt.target);\r\n            if(targetEl[0].nodeName.toLowerCase() !== 'button') {\r\n              targetEl = targetEl.parent();\r\n            }\r\n            targetEl.triggerHandler('click');\r\n          }\r\n        };\r\n\r\n        $timepicker.$onKeyDown = function(evt) {\r\n          if (!/(38|37|39|40|13)/.test(evt.keyCode) || evt.shiftKey || evt.altKey) return;\r\n          evt.preventDefault();\r\n          evt.stopPropagation();\r\n\r\n          // Close on enter\r\n          if(evt.keyCode === 13) return $timepicker.hide(true);\r\n\r\n          // Navigate with keyboard\r\n          var newDate = new Date($timepicker.$date);\r\n          var hours = newDate.getHours(), hoursLength = dateFilter(newDate, 'h').length;\r\n          var minutes = newDate.getMinutes(), minutesLength = dateFilter(newDate, 'mm').length;\r\n          var lateralMove = /(37|39)/.test(evt.keyCode);\r\n          var count = 2 + !!formats[3] * 1;\r\n\r\n          // Navigate indexes (left, right)\r\n          if (lateralMove) {\r\n            if(evt.keyCode === 37) selectedIndex = selectedIndex < 1 ? count - 1 : selectedIndex - 1;\r\n            else if(evt.keyCode === 39) selectedIndex = selectedIndex < count - 1 ? selectedIndex + 1 : 0;\r\n          }\r\n\r\n          // Update values (up, down)\r\n          var selectRange = [0, hoursLength];\r\n          if(selectedIndex === 0) {\r\n            if(evt.keyCode === 38) newDate.setHours(hours - parseInt(options.hourStep, 10));\r\n            else if(evt.keyCode === 40) newDate.setHours(hours + parseInt(options.hourStep, 10));\r\n            selectRange = [0, hoursLength];\r\n          } else if(selectedIndex === 1) {\r\n            if(evt.keyCode === 38) newDate.setMinutes(minutes - parseInt(options.minuteStep, 10));\r\n            else if(evt.keyCode === 40) newDate.setMinutes(minutes + parseInt(options.minuteStep, 10));\r\n            selectRange = [hoursLength + 1, hoursLength + 1 + minutesLength];\r\n          } else if(selectedIndex === 2) {\r\n            if(!lateralMove) $timepicker.switchMeridian();\r\n            selectRange = [hoursLength + 1 + minutesLength + 1, hoursLength + 1 + minutesLength + 3];\r\n          }\r\n          $timepicker.select(newDate, selectedIndex, true);\r\n          createSelection(selectRange[0], selectRange[1]);\r\n          parentScope.$digest();\r\n        };\r\n\r\n        // Private\r\n\r\n        function createSelection(start, end) {\r\n          if(element[0].createTextRange) {\r\n            var selRange = element[0].createTextRange();\r\n            selRange.collapse(true);\r\n            selRange.moveStart('character', start);\r\n            selRange.moveEnd('character', end);\r\n            selRange.select();\r\n          } else if(element[0].setSelectionRange) {\r\n            element[0].setSelectionRange(start, end);\r\n          } else if(angular.isUndefined(element[0].selectionStart)) {\r\n            element[0].selectionStart = start;\r\n            element[0].selectionEnd = end;\r\n          }\r\n        }\r\n\r\n        function focusElement() {\r\n          element[0].focus();\r\n        }\r\n\r\n        // Overrides\r\n\r\n        var _init = $timepicker.init;\r\n        $timepicker.init = function() {\r\n          if(isNative && options.useNative) {\r\n            element.prop('type', 'time');\r\n            element.css('-webkit-appearance', 'textfield');\r\n            return;\r\n          } else if(isTouch) {\r\n            element.prop('type', 'text');\r\n            element.attr('readonly', 'true');\r\n            element.on('click', focusElement);\r\n          }\r\n          _init();\r\n        };\r\n\r\n        var _destroy = $timepicker.destroy;\r\n        $timepicker.destroy = function() {\r\n          if(isNative && options.useNative) {\r\n            element.off('click', focusElement);\r\n          }\r\n          _destroy();\r\n        };\r\n\r\n        var _show = $timepicker.show;\r\n        $timepicker.show = function() {\r\n          _show();\r\n          setTimeout(function() {\r\n            $timepicker.$element.on(isTouch ? 'touchstart' : 'mousedown', $timepicker.$onMouseDown);\r\n            if(options.keyboard) {\r\n              element.on('keydown', $timepicker.$onKeyDown);\r\n            }\r\n          });\r\n        };\r\n\r\n        var _hide = $timepicker.hide;\r\n        $timepicker.hide = function(blur) {\r\n          $timepicker.$element.off(isTouch ? 'touchstart' : 'mousedown', $timepicker.$onMouseDown);\r\n          if(options.keyboard) {\r\n            element.off('keydown', $timepicker.$onKeyDown);\r\n          }\r\n          _hide(blur);\r\n        };\r\n\r\n        return $timepicker;\r\n\r\n      }\r\n\r\n      timepickerFactory.defaults = defaults;\r\n      return timepickerFactory;\r\n\r\n    }];\r\n\r\n  })\r\n\r\n\r\n  .directive('bsTimepicker', [\"$window\", \"$parse\", \"$q\", \"$locale\", \"dateFilter\", \"$timepicker\", \"$dateParser\", \"$timeout\", function($window, $parse, $q, $locale, dateFilter, $timepicker, $dateParser, $timeout) {\r\n\r\n    var defaults = $timepicker.defaults;\r\n    var isNative = /(ip(a|o)d|iphone|android)/ig.test($window.navigator.userAgent);\r\n    var requestAnimationFrame = $window.requestAnimationFrame || $window.setTimeout;\r\n\r\n    return {\r\n      restrict: 'EAC',\r\n      require: 'ngModel',\r\n      link: function postLink(scope, element, attr, controller) {\r\n\r\n        // Directive options\r\n        var options = {scope: scope, controller: controller};\r\n        angular.forEach(['placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'template', 'autoclose', 'timeType', 'timeFormat', 'modelTimeFormat', 'useNative', 'hourStep', 'minuteStep', 'length', 'arrowBehavior'], function(key) {\r\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\r\n        });\r\n\r\n        // Visibility binding support\r\n        attr.bsShow && scope.$watch(attr.bsShow, function(newValue, oldValue) {\r\n          if(!timepicker || !angular.isDefined(newValue)) return;\r\n          if(angular.isString(newValue)) newValue = !!newValue.match(',?(timepicker),?');\r\n          newValue === true ? timepicker.show() : timepicker.hide();\r\n        });\r\n\r\n        // Initialize timepicker\r\n        if(isNative && (options.useNative || defaults.useNative)) options.timeFormat = 'HH:mm';\r\n        var timepicker = $timepicker(element, controller, options);\r\n        options = timepicker.$options;\r\n\r\n        // Initialize parser\r\n        var dateParser = $dateParser({format: options.timeFormat, lang: options.lang});\r\n\r\n        // Observe attributes for changes\r\n        angular.forEach(['minTime', 'maxTime'], function(key) {\r\n          // console.warn('attr.$observe(%s)', key, attr[key]);\r\n          angular.isDefined(attr[key]) && attr.$observe(key, function(newValue) {\r\n            if(newValue === 'now') {\r\n              timepicker.$options[key] = new Date().setFullYear(1970, 0, 1);\r\n            } else if(angular.isString(newValue) && newValue.match(/^\".+\"$/)) {\r\n              timepicker.$options[key] = +new Date(newValue.substr(1, newValue.length - 2));\r\n            } else {\r\n              timepicker.$options[key] = dateParser.parse(newValue, new Date(1970, 0, 1, 0));\r\n            }\r\n            !isNaN(timepicker.$options[key]) && timepicker.$build();\r\n          });\r\n        });\r\n\r\n        // Watch model for changes\r\n        scope.$watch(attr.ngModel, function(newValue, oldValue) {\r\n          // console.warn('scope.$watch(%s)', attr.ngModel, newValue, oldValue, controller.$dateValue);\r\n          timepicker.update(controller.$dateValue);\r\n        }, true);\r\n\r\n        // viewValue -> $parsers -> modelValue\r\n        controller.$parsers.unshift(function(viewValue) {\r\n          // console.warn('$parser(\"%s\"): viewValue=%o', element.attr('ng-model'), viewValue);\r\n          // Null values should correctly reset the model value & validity\r\n          if(!viewValue) {\r\n            controller.$setValidity('date', true);\r\n            return;\r\n          }\r\n          var parsedTime = angular.isDate(viewValue) ? viewValue : dateParser.parse(viewValue, controller.$dateValue);\r\n          if(!parsedTime || isNaN(parsedTime.getTime())) {\r\n            controller.$setValidity('date', false);\r\n          } else {\r\n            var isValid = parsedTime.getTime() >= options.minTime && parsedTime.getTime() <= options.maxTime;\r\n            controller.$setValidity('date', isValid);\r\n            // Only update the model when we have a valid date\r\n            if(isValid) controller.$dateValue = parsedTime;\r\n          }\r\n          if(options.timeType === 'string') {\r\n            return dateFilter(parsedTime, options.modelTimeFormat || options.timeFormat);\r\n          } else if(options.timeType === 'number') {\r\n            return controller.$dateValue.getTime();\r\n          } else if(options.timeType === 'iso') {\r\n            return controller.$dateValue.toISOString();\r\n          } else {\r\n            return new Date(controller.$dateValue);\r\n          }\r\n        });\r\n\r\n        // modelValue -> $formatters -> viewValue\r\n        controller.$formatters.push(function(modelValue) {\r\n          // console.warn('$formatter(\"%s\"): modelValue=%o (%o)', element.attr('ng-model'), modelValue, typeof modelValue);\r\n          var date;\r\n          if(angular.isUndefined(modelValue) || modelValue === null) {\r\n            date = NaN;\r\n          } else if(angular.isDate(modelValue)) {\r\n            date = modelValue;\r\n          } else if(options.timeType === 'string') {\r\n            date = dateParser.parse(modelValue, null, options.modelTimeFormat);\r\n          } else {\r\n            date = new Date(modelValue);\r\n          }\r\n          // Setup default value?\r\n          // if(isNaN(date.getTime())) date = new Date(new Date().setMinutes(0) + 36e5);\r\n          controller.$dateValue = date;\r\n          return controller.$dateValue;\r\n        });\r\n\r\n        // viewValue -> element\r\n        controller.$render = function() {\r\n          // console.warn('$render(\"%s\"): viewValue=%o', element.attr('ng-model'), controller.$viewValue);\r\n          element.val(!controller.$dateValue || isNaN(controller.$dateValue.getTime()) ? '' : dateFilter(controller.$dateValue, options.timeFormat));\r\n        };\r\n\r\n        // Garbage collection\r\n        scope.$on('$destroy', function() {\r\n          if (timepicker) timepicker.destroy();\r\n          options = null;\r\n          timepicker = null;\r\n        });\r\n\r\n      }\r\n    };\r\n\r\n  }]);\n\r\n// Source: tooltip.js\nangular.module('mgcrea.ngStrap.tooltip', ['mgcrea.ngStrap.helpers.dimensions'])\r\n\r\n  .provider('$tooltip', function() {\r\n\r\n    var defaults = this.defaults = {\r\n      animation: 'am-fade',\r\n      customClass: '',\r\n      prefixClass: 'tooltip',\r\n      prefixEvent: 'tooltip',\r\n      container: false,\r\n      target: false,\r\n      placement: 'top',\r\n      template: 'tooltip/tooltip.tpl.html',\r\n      contentTemplate: false,\r\n      trigger: 'hover focus',\r\n      keyboard: false,\r\n      html: false,\r\n      show: false,\r\n      title: '',\r\n      type: '',\r\n      delay: 0\r\n    };\r\n\r\n    this.$get = [\"$window\", \"$rootScope\", \"$compile\", \"$q\", \"$templateCache\", \"$http\", \"$animate\", \"dimensions\", \"$$rAF\", function($window, $rootScope, $compile, $q, $templateCache, $http, $animate, dimensions, $$rAF) {\r\n\r\n      var trim = String.prototype.trim;\r\n      var isTouch = 'createTouch' in $window.document;\r\n      var htmlReplaceRegExp = /ng-bind=\"/ig;\r\n\r\n      function TooltipFactory(element, config) {\r\n\r\n        var $tooltip = {};\r\n\r\n        // Common vars\r\n        var nodeName = element[0].nodeName.toLowerCase();\r\n        var options = $tooltip.$options = angular.extend({}, defaults, config);\r\n        $tooltip.$promise = fetchTemplate(options.template);\r\n        var scope = $tooltip.$scope = options.scope && options.scope.$new() || $rootScope.$new();\r\n        if(options.delay && angular.isString(options.delay)) {\r\n          var split = options.delay.split(',').map(parseFloat);\r\n          options.delay = split.length > 1 ? {show: split[0], hide: split[1]} : split[0];\r\n        }\r\n\r\n        // Support scope as string options\r\n        if(options.title) {\r\n          $tooltip.$scope.title = options.title;\r\n        }\r\n\r\n        // Provide scope helpers\r\n        scope.$hide = function() {\r\n          scope.$$postDigest(function() {\r\n            $tooltip.hide();\r\n          });\r\n        };\r\n        scope.$show = function() {\r\n          scope.$$postDigest(function() {\r\n            $tooltip.show();\r\n          });\r\n        };\r\n        scope.$toggle = function() {\r\n          scope.$$postDigest(function() {\r\n            $tooltip.toggle();\r\n          });\r\n        };\r\n        $tooltip.$isShown = scope.$isShown = false;\r\n\r\n        // Private vars\r\n        var timeout, hoverState;\r\n\r\n        // Support contentTemplate option\r\n        if(options.contentTemplate) {\r\n          $tooltip.$promise = $tooltip.$promise.then(function(template) {\r\n            var templateEl = angular.element(template);\r\n            return fetchTemplate(options.contentTemplate)\r\n            .then(function(contentTemplate) {\r\n              var contentEl = findElement('[ng-bind=\"content\"]', templateEl[0]);\r\n              if(!contentEl.length) contentEl = findElement('[ng-bind=\"title\"]', templateEl[0]);\r\n              contentEl.removeAttr('ng-bind').html(contentTemplate);\r\n              return templateEl[0].outerHTML;\r\n            });\r\n          });\r\n        }\r\n\r\n        // Fetch, compile then initialize tooltip\r\n        var tipLinker, tipElement, tipTemplate, tipContainer;\r\n        $tooltip.$promise.then(function(template) {\r\n          if(angular.isObject(template)) template = template.data;\r\n          if(options.html) template = template.replace(htmlReplaceRegExp, 'ng-bind-html=\"');\r\n          template = trim.apply(template);\r\n          tipTemplate = template;\r\n          tipLinker = $compile(template);\r\n          $tooltip.init();\r\n        });\r\n\r\n        $tooltip.init = function() {\r\n\r\n          // Options: delay\r\n          if (options.delay && angular.isNumber(options.delay)) {\r\n            options.delay = {\r\n              show: options.delay,\r\n              hide: options.delay\r\n            };\r\n          }\r\n\r\n          // Replace trigger on touch devices ?\r\n          // if(isTouch && options.trigger === defaults.trigger) {\r\n          //   options.trigger.replace(/hover/g, 'click');\r\n          // }\r\n\r\n          // Options : container\r\n          if(options.container === 'self') {\r\n            tipContainer = element;\r\n          } else if(angular.isElement(options.container)) {\r\n            tipContainer = options.container;\r\n          } else if(options.container) {\r\n            tipContainer = findElement(options.container);\r\n          }\r\n\r\n          // Options: trigger\r\n          var triggers = options.trigger.split(' ');\r\n          angular.forEach(triggers, function(trigger) {\r\n            if(trigger === 'click') {\r\n              element.on('click', $tooltip.toggle);\r\n            } else if(trigger !== 'manual') {\r\n              element.on(trigger === 'hover' ? 'mouseenter' : 'focus', $tooltip.enter);\r\n              element.on(trigger === 'hover' ? 'mouseleave' : 'blur', $tooltip.leave);\r\n              nodeName === 'button' && trigger !== 'hover' && element.on(isTouch ? 'touchstart' : 'mousedown', $tooltip.$onFocusElementMouseDown);\r\n            }\r\n          });\r\n\r\n          // Options: target\r\n          if(options.target) {\r\n            options.target = angular.isElement(options.target) ? options.target : findElement(options.target);\r\n          }\r\n\r\n          // Options: show\r\n          if(options.show) {\r\n            scope.$$postDigest(function() {\r\n              options.trigger === 'focus' ? element[0].focus() : $tooltip.show();\r\n            });\r\n          }\r\n\r\n        };\r\n\r\n        $tooltip.destroy = function() {\r\n\r\n          // Unbind events\r\n          var triggers = options.trigger.split(' ');\r\n          for (var i = triggers.length; i--;) {\r\n            var trigger = triggers[i];\r\n            if(trigger === 'click') {\r\n              element.off('click', $tooltip.toggle);\r\n            } else if(trigger !== 'manual') {\r\n              element.off(trigger === 'hover' ? 'mouseenter' : 'focus', $tooltip.enter);\r\n              element.off(trigger === 'hover' ? 'mouseleave' : 'blur', $tooltip.leave);\r\n              nodeName === 'button' && trigger !== 'hover' && element.off(isTouch ? 'touchstart' : 'mousedown', $tooltip.$onFocusElementMouseDown);\r\n            }\r\n          }\r\n\r\n          // Remove element\r\n          if(tipElement) {\r\n            tipElement.remove();\r\n            tipElement = null;\r\n          }\r\n\r\n          // Cancel pending callbacks\r\n          clearTimeout(timeout);\r\n\r\n          // Destroy scope\r\n          scope.$destroy();\r\n\r\n        };\r\n\r\n        $tooltip.enter = function() {\r\n\r\n          clearTimeout(timeout);\r\n          hoverState = 'in';\r\n          if (!options.delay || !options.delay.show) {\r\n            return $tooltip.show();\r\n          }\r\n\r\n          timeout = setTimeout(function() {\r\n            if (hoverState ==='in') $tooltip.show();\r\n          }, options.delay.show);\r\n\r\n        };\r\n\r\n        $tooltip.show = function() {\r\n\r\n          scope.$emit(options.prefixEvent + '.show.before', $tooltip);\r\n          var parent = options.container ? tipContainer : null;\r\n          var after = options.container ? null : element;\r\n\r\n          // Hide any existing tipElement\r\n          if(tipElement) tipElement.remove();\r\n          // Fetch a cloned element linked from template\r\n          tipElement = $tooltip.$element = tipLinker(scope, function(clonedElement, scope) {});\r\n\r\n          // Set the initial positioning.  Make the tooltip invisible\r\n          // so IE doesn't try to focus on it off screen.\r\n          tipElement.css({top: '-9999px', left: '-9999px', display: 'block', visibility: 'hidden'}).addClass(options.placement);\r\n\r\n          // Options: animation\r\n          if(options.animation) tipElement.addClass(options.animation);\r\n          // Options: type\r\n          if(options.type) tipElement.addClass(options.prefixClass + '-' + options.type);\r\n          // Options: custom classes\r\n          if(options.customClass) tipElement.addClass(options.customClass);\r\n\r\n          // Support v1.3+ $animate\r\n          // https://github.com/angular/angular.js/commit/bf0f5502b1bbfddc5cdd2f138efd9188b8c652a9\r\n          var promise = $animate.enter(tipElement, parent, after, enterAnimateCallback);\r\n          if(promise && promise.then) promise.then(enterAnimateCallback);\r\n\r\n          $tooltip.$isShown = scope.$isShown = true;\r\n          scope.$$phase || (scope.$root && scope.$root.$$phase) || scope.$digest();\r\n          $$rAF(function () {\r\n            $tooltip.$applyPlacement();\r\n\r\n            // Once placed, make the tooltip visible\r\n            if(tipElement)\r\n            tipElement.css({visibility: 'visible'});\r\n          }); // var a = bodyEl.offsetWidth + 1; ?\r\n\r\n          // Bind events\r\n          if(options.keyboard) {\r\n            if(options.trigger !== 'focus') {\r\n              $tooltip.focus();\r\n              tipElement.on('keyup', $tooltip.$onKeyUp);\r\n            } else {\r\n              element.on('keyup', $tooltip.$onFocusKeyUp);\r\n            }\r\n          }\r\n\r\n        };\r\n\r\n        function enterAnimateCallback() {\r\n          scope.$emit(options.prefixEvent + '.show', $tooltip);\r\n        }\r\n\r\n        $tooltip.leave = function() {\r\n\r\n          clearTimeout(timeout);\r\n          hoverState = 'out';\r\n          if (!options.delay || !options.delay.hide) {\r\n            return $tooltip.hide();\r\n          }\r\n          timeout = setTimeout(function () {\r\n            if (hoverState === 'out') {\r\n              $tooltip.hide();\r\n            }\r\n          }, options.delay.hide);\r\n\r\n        };\r\n\r\n        $tooltip.hide = function(blur) {\r\n\r\n          if(!$tooltip.$isShown) return;\r\n          scope.$emit(options.prefixEvent + '.hide.before', $tooltip);\r\n\r\n          // Support v1.3+ $animate\r\n          // https://github.com/angular/angular.js/commit/bf0f5502b1bbfddc5cdd2f138efd9188b8c652a9\r\n          var promise = $animate.leave(tipElement, leaveAnimateCallback);\r\n          if(promise && promise.then) promise.then(leaveAnimateCallback);\r\n\r\n          $tooltip.$isShown = scope.$isShown = false;\r\n          scope.$$phase || (scope.$root && scope.$root.$$phase) || scope.$digest();\r\n\r\n          // Unbind events\r\n          if(options.keyboard && tipElement !== null) {\r\n            tipElement.off('keyup', $tooltip.$onKeyUp);\r\n          }\r\n\r\n        };\r\n\r\n        function leaveAnimateCallback() {\r\n          scope.$emit(options.prefixEvent + '.hide', $tooltip);\r\n          // Allow to blur the input when hidden, like when pressing enter key\r\n          if(blur && options.trigger === 'focus') {\r\n            return element[0].blur();\r\n          }\r\n        }\r\n\r\n        $tooltip.toggle = function() {\r\n          $tooltip.$isShown ? $tooltip.leave() : $tooltip.enter();\r\n        };\r\n\r\n        $tooltip.focus = function() {\r\n          tipElement[0].focus();\r\n        };\r\n\r\n        // Protected methods\r\n\r\n        $tooltip.$applyPlacement = function() {\r\n          if(!tipElement) return;\r\n\r\n          // Get the position of the tooltip element.\r\n          var elementPosition = getPosition();\r\n\r\n          // Get the height and width of the tooltip so we can center it.\r\n          var tipWidth = tipElement.prop('offsetWidth'),\r\n              tipHeight = tipElement.prop('offsetHeight');\r\n\r\n          // Get the tooltip's top and left coordinates to center it with this directive.\r\n          var tipPosition = getCalculatedOffset(options.placement, elementPosition, tipWidth, tipHeight);\r\n\r\n          // Now set the calculated positioning.\r\n          tipPosition.top += 'px';\r\n          tipPosition.left += 'px';\r\n          tipElement.css(tipPosition);\r\n\r\n        };\r\n\r\n        $tooltip.$onKeyUp = function(evt) {\r\n          if (evt.which === 27 && $tooltip.$isShown) {\r\n            $tooltip.hide();\r\n            evt.stopPropagation();\r\n          }\r\n        };\r\n\r\n        $tooltip.$onFocusKeyUp = function(evt) {\r\n          if (evt.which === 27) {\r\n            element[0].blur();\r\n            evt.stopPropagation();\r\n          }\r\n        };\r\n\r\n        $tooltip.$onFocusElementMouseDown = function(evt) {\r\n          evt.preventDefault();\r\n          evt.stopPropagation();\r\n          // Some browsers do not auto-focus buttons (eg. Safari)\r\n          $tooltip.$isShown ? element[0].blur() : element[0].focus();\r\n        };\r\n\r\n        // Private methods\r\n\r\n        function getPosition() {\r\n          if(options.container === 'body') {\r\n            return dimensions.offset(options.target[0] || element[0]);\r\n          } else {\r\n            return dimensions.position(options.target[0] || element[0]);\r\n          }\r\n        }\r\n\r\n        function getCalculatedOffset(placement, position, actualWidth, actualHeight) {\r\n          var offset;\r\n          var split = placement.split('-');\r\n\r\n          switch (split[0]) {\r\n          case 'right':\r\n            offset = {\r\n              top: position.top + position.height / 2 - actualHeight / 2,\r\n              left: position.left + position.width\r\n            };\r\n            break;\r\n          case 'bottom':\r\n            offset = {\r\n              top: position.top + position.height,\r\n              left: position.left + position.width / 2 - actualWidth / 2\r\n            };\r\n            break;\r\n          case 'left':\r\n            offset = {\r\n              top: position.top + position.height / 2 - actualHeight / 2,\r\n              left: position.left - actualWidth\r\n            };\r\n            break;\r\n          default:\r\n            offset = {\r\n              top: position.top - actualHeight,\r\n              left: position.left + position.width / 2 - actualWidth / 2\r\n            };\r\n            break;\r\n          }\r\n\r\n          if(!split[1]) {\r\n            return offset;\r\n          }\r\n\r\n          // Add support for corners @todo css\r\n          if(split[0] === 'top' || split[0] === 'bottom') {\r\n            switch (split[1]) {\r\n            case 'left':\r\n              offset.left = position.left;\r\n              break;\r\n            case 'right':\r\n              offset.left =  position.left + position.width - actualWidth;\r\n            }\r\n          } else if(split[0] === 'left' || split[0] === 'right') {\r\n            switch (split[1]) {\r\n            case 'top':\r\n              offset.top = position.top - actualHeight;\r\n              break;\r\n            case 'bottom':\r\n              offset.top = position.top + position.height;\r\n            }\r\n          }\r\n\r\n          return offset;\r\n        }\r\n\r\n        return $tooltip;\r\n\r\n      }\r\n\r\n      // Helper functions\r\n\r\n      function findElement(query, element) {\r\n        return angular.element((element || document).querySelectorAll(query));\r\n      }\r\n\r\n      function fetchTemplate(template) {\r\n        return $q.when($templateCache.get(template) || $http.get(template))\r\n        .then(function(res) {\r\n          if(angular.isObject(res)) {\r\n            $templateCache.put(template, res.data);\r\n            return res.data;\r\n          }\r\n          return res;\r\n        });\r\n      }\r\n\r\n      return TooltipFactory;\r\n\r\n    }];\r\n\r\n  })\r\n\r\n  .directive('bsTooltip', [\"$window\", \"$location\", \"$sce\", \"$tooltip\", \"$$rAF\", function($window, $location, $sce, $tooltip, $$rAF) {\r\n\r\n    return {\r\n      restrict: 'EAC',\r\n      scope: true,\r\n      link: function postLink(scope, element, attr, transclusion) {\r\n\r\n        // Directive options\r\n        var options = {scope: scope};\r\n        angular.forEach(['template', 'contentTemplate', 'placement', 'container', 'target', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'type', 'customClass'], function(key) {\r\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\r\n        });\r\n\r\n        // Observe scope attributes for change\r\n        attr.$observe('title', function(newValue, oldValue) {\r\n          scope.title = $sce.trustAsHtml(newValue);\r\n          angular.isDefined(oldValue) && $$rAF(function() {\r\n            tooltip && tooltip.$applyPlacement();\r\n          });\r\n        });\r\n\r\n        // Support scope as an object\r\n        attr.bsTooltip && scope.$watch(attr.bsTooltip, function(newValue, oldValue) {\r\n          if(angular.isObject(newValue)) {\r\n            angular.extend(scope, newValue);\r\n          } else {\r\n            scope.title = newValue;\r\n          }\r\n          angular.isDefined(oldValue) && $$rAF(function() {\r\n            tooltip && tooltip.$applyPlacement();\r\n          });\r\n        }, true);\r\n\r\n        // Visibility binding support\r\n        attr.bsShow && scope.$watch(attr.bsShow, function(newValue, oldValue) {\r\n          if(!tooltip || !angular.isDefined(newValue)) return;\r\n          if(angular.isString(newValue)) newValue = !!newValue.match(',?(tooltip),?');\r\n          newValue === true ? tooltip.show() : tooltip.hide();\r\n        });\r\n\r\n        // Initialize popover\r\n        var tooltip = $tooltip(element, options);\r\n\r\n        // Garbage collection\r\n        scope.$on('$destroy', function() {\r\n          if(tooltip) tooltip.destroy();\r\n          options = null;\r\n          tooltip = null;\r\n        });\r\n\r\n      }\r\n    };\r\n\r\n  }]);\n\r\n// Source: typeahead.js\nangular.module('mgcrea.ngStrap.typeahead', ['mgcrea.ngStrap.tooltip', 'mgcrea.ngStrap.helpers.parseOptions'])\r\n\r\n  .provider('$typeahead', function() {\r\n\r\n    var defaults = this.defaults = {\r\n      animation: 'am-fade',\r\n      prefixClass: 'typeahead',\r\n      prefixEvent: '$typeahead',\r\n      placement: 'bottom-left',\r\n      template: 'typeahead/typeahead.tpl.html',\r\n      trigger: 'focus',\r\n      container: false,\r\n      keyboard: true,\r\n      html: false,\r\n      delay: 0,\r\n      minLength: 1,\r\n      filter: 'filter',\r\n      limit: 6\r\n    };\r\n\r\n    this.$get = [\"$window\", \"$rootScope\", \"$tooltip\", function($window, $rootScope, $tooltip) {\r\n\r\n      var bodyEl = angular.element($window.document.body);\r\n\r\n      function TypeaheadFactory(element, controller, config) {\r\n\r\n        var $typeahead = {};\r\n\r\n        // Common vars\r\n        var options = angular.extend({}, defaults, config);\r\n\r\n        $typeahead = $tooltip(element, options);\r\n        var parentScope = config.scope;\r\n        var scope = $typeahead.$scope;\r\n\r\n        scope.$resetMatches = function(){\r\n          scope.$matches = [];\r\n          scope.$activeIndex = 0;\r\n        };\r\n        scope.$resetMatches();\r\n\r\n        scope.$activate = function(index) {\r\n          scope.$$postDigest(function() {\r\n            $typeahead.activate(index);\r\n          });\r\n        };\r\n\r\n        scope.$select = function(index, evt) {\r\n          scope.$$postDigest(function() {\r\n            $typeahead.select(index);\r\n          });\r\n        };\r\n\r\n        scope.$isVisible = function() {\r\n          return $typeahead.$isVisible();\r\n        };\r\n\r\n        // Public methods\r\n\r\n        $typeahead.update = function(matches) {\r\n          scope.$matches = matches;\r\n          if(scope.$activeIndex >= matches.length) {\r\n            scope.$activeIndex = 0;\r\n          }\r\n        };\r\n\r\n        $typeahead.activate = function(index) {\r\n          scope.$activeIndex = index;\r\n        };\r\n\r\n        $typeahead.select = function(index) {\r\n          var value = scope.$matches[index].value;\r\n          controller.$setViewValue(value);\r\n          controller.$render();\r\n          scope.$resetMatches();\r\n          if(parentScope) parentScope.$digest();\r\n          // Emit event\r\n          scope.$emit(options.prefixEvent + '.select', value, index);\r\n        };\r\n\r\n        // Protected methods\r\n\r\n        $typeahead.$isVisible = function() {\r\n          if(!options.minLength || !controller) {\r\n            return !!scope.$matches.length;\r\n          }\r\n          // minLength support\r\n          return scope.$matches.length && angular.isString(controller.$viewValue) && controller.$viewValue.length >= options.minLength;\r\n        };\r\n\r\n        $typeahead.$getIndex = function(value) {\r\n          var l = scope.$matches.length, i = l;\r\n          if(!l) return;\r\n          for(i = l; i--;) {\r\n            if(scope.$matches[i].value === value) break;\r\n          }\r\n          if(i < 0) return;\r\n          return i;\r\n        };\r\n\r\n        $typeahead.$onMouseDown = function(evt) {\r\n          // Prevent blur on mousedown\r\n          evt.preventDefault();\r\n          evt.stopPropagation();\r\n        };\r\n\r\n        $typeahead.$onKeyDown = function(evt) {\r\n          if(!/(38|40|13)/.test(evt.keyCode)) return;\r\n\r\n          // Let ngSubmit pass if the typeahead tip is hidden\r\n          if($typeahead.$isVisible()) {\r\n            evt.preventDefault();\r\n            evt.stopPropagation();\r\n          }\r\n\r\n          // Select with enter\r\n          if(evt.keyCode === 13 && scope.$matches.length) {\r\n            $typeahead.select(scope.$activeIndex);\r\n          }\r\n\r\n          // Navigate with keyboard\r\n          else if(evt.keyCode === 38 && scope.$activeIndex > 0) scope.$activeIndex--;\r\n          else if(evt.keyCode === 40 && scope.$activeIndex < scope.$matches.length - 1) scope.$activeIndex++;\r\n          else if(angular.isUndefined(scope.$activeIndex)) scope.$activeIndex = 0;\r\n          scope.$digest();\r\n        };\r\n\r\n        // Overrides\r\n\r\n        var show = $typeahead.show;\r\n        $typeahead.show = function() {\r\n          show();\r\n          setTimeout(function() {\r\n            $typeahead.$element.on('mousedown', $typeahead.$onMouseDown);\r\n            if(options.keyboard) {\r\n              element.on('keydown', $typeahead.$onKeyDown);\r\n            }\r\n          });\r\n        };\r\n\r\n        var hide = $typeahead.hide;\r\n        $typeahead.hide = function() {\r\n          $typeahead.$element.off('mousedown', $typeahead.$onMouseDown);\r\n          if(options.keyboard) {\r\n            element.off('keydown', $typeahead.$onKeyDown);\r\n          }\r\n          hide();\r\n        };\r\n\r\n        return $typeahead;\r\n\r\n      }\r\n\r\n      TypeaheadFactory.defaults = defaults;\r\n      return TypeaheadFactory;\r\n\r\n    }];\r\n\r\n  })\r\n\r\n  .directive('bsTypeahead', [\"$window\", \"$parse\", \"$q\", \"$typeahead\", \"$parseOptions\", function($window, $parse, $q, $typeahead, $parseOptions) {\r\n\r\n    var defaults = $typeahead.defaults;\r\n\r\n    return {\r\n      restrict: 'EAC',\r\n      require: 'ngModel',\r\n      link: function postLink(scope, element, attr, controller) {\r\n\r\n        // Directive options\r\n        var options = {scope: scope};\r\n        angular.forEach(['placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'template', 'filter', 'limit', 'minLength', 'watchOptions', 'selectMode'], function(key) {\r\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\r\n        });\r\n\r\n        // Build proper ngOptions\r\n        var filter = options.filter || defaults.filter;\r\n        var limit = options.limit || defaults.limit;\r\n        var ngOptions = attr.ngOptions;\r\n        if(filter) ngOptions += ' | ' + filter + ':$viewValue';\r\n        if(limit) ngOptions += ' | limitTo:' + limit;\r\n        var parsedOptions = $parseOptions(ngOptions);\r\n\r\n        // Initialize typeahead\r\n        var typeahead = $typeahead(element, controller, options);\r\n\r\n        // Watch options on demand\r\n        if(options.watchOptions) {\r\n          // Watch ngOptions values before filtering for changes, drop function calls\r\n          var watchedOptions = parsedOptions.$match[7].replace(/\\|.+/, '').replace(/\\(.*\\)/g, '').trim();\r\n          scope.$watch(watchedOptions, function (newValue, oldValue) {\r\n            // console.warn('scope.$watch(%s)', watchedOptions, newValue, oldValue);\r\n            parsedOptions.valuesFn(scope, controller).then(function (values) {\r\n              typeahead.update(values);\r\n              controller.$render();\r\n            });\r\n          }, true);\r\n        }\r\n\r\n        // Watch model for changes\r\n        scope.$watch(attr.ngModel, function(newValue, oldValue) {\r\n          // console.warn('$watch', element.attr('ng-model'), newValue);\r\n          scope.$modelValue = newValue; // Publish modelValue on scope for custom templates\r\n          parsedOptions.valuesFn(scope, controller)\r\n          .then(function(values) {\r\n            // Prevent input with no future prospect if selectMode is truthy\r\n            // @TODO test selectMode\r\n            if(options.selectMode && !values.length && newValue.length > 0) {\r\n              controller.$setViewValue(controller.$viewValue.substring(0, controller.$viewValue.length - 1));\r\n              return;\r\n            }\r\n            if(values.length > limit) values = values.slice(0, limit);\r\n            var isVisible = typeahead.$isVisible();\r\n            isVisible && typeahead.update(values);\r\n            // Do not re-queue an update if a correct value has been selected\r\n            if(values.length === 1 && values[0].value === newValue) return;\r\n            !isVisible && typeahead.update(values);\r\n            // Queue a new rendering that will leverage collection loading\r\n            controller.$render();\r\n          });\r\n        });\r\n\r\n        // Model rendering in view\r\n        controller.$render = function () {\r\n          // console.warn('$render', element.attr('ng-model'), 'controller.$modelValue', typeof controller.$modelValue, controller.$modelValue, 'controller.$viewValue', typeof controller.$viewValue, controller.$viewValue);\r\n          if(controller.$isEmpty(controller.$viewValue)) return element.val('');\r\n          var index = typeahead.$getIndex(controller.$modelValue);\r\n          var selected = angular.isDefined(index) ? typeahead.$scope.$matches[index].label : controller.$viewValue;\r\n          selected = angular.isObject(selected) ? selected.label : selected;\r\n          element.val(selected ? selected.replace(/<(?:.|\\n)*?>/gm, '').trim() : '');\r\n        };\r\n\r\n        // Garbage collection\r\n        scope.$on('$destroy', function() {\r\n          if (typeahead) typeahead.destroy();\r\n          options = null;\r\n          typeahead = null;\r\n        });\r\n\r\n      }\r\n    };\r\n\r\n  }]);\n\n})(window, document);\n","\r\nangular.module('mgcrea.ngStrap', [\r\n  'mgcrea.ngStrap.modal',\r\n  'mgcrea.ngStrap.aside',\r\n  'mgcrea.ngStrap.alert',\r\n  'mgcrea.ngStrap.button',\r\n  'mgcrea.ngStrap.select',\r\n  'mgcrea.ngStrap.datepicker',\r\n  'mgcrea.ngStrap.timepicker',\r\n  'mgcrea.ngStrap.navbar',\r\n  'mgcrea.ngStrap.tooltip',\r\n  'mgcrea.ngStrap.popover',\r\n  'mgcrea.ngStrap.dropdown',\r\n  'mgcrea.ngStrap.typeahead',\r\n  'mgcrea.ngStrap.scrollspy',\r\n  'mgcrea.ngStrap.affix',\r\n  'mgcrea.ngStrap.tab',\r\n  'mgcrea.ngStrap.collapse'\r\n]);\r\n","'use strict';\r\n\r\nangular.module('mgcrea.ngStrap.affix', ['mgcrea.ngStrap.helpers.dimensions', 'mgcrea.ngStrap.helpers.debounce'])\r\n\r\n  .provider('$affix', function() {\r\n\r\n    var defaults = this.defaults = {\r\n      offsetTop: 'auto'\r\n    };\r\n\r\n    this.$get = function($window, debounce, dimensions) {\r\n\r\n      var bodyEl = angular.element($window.document.body);\r\n      var windowEl = angular.element($window);\r\n\r\n      function AffixFactory(element, config) {\r\n\r\n        var $affix = {};\r\n\r\n        // Common vars\r\n        var options = angular.extend({}, defaults, config);\r\n        var targetEl = options.target;\r\n\r\n        // Initial private vars\r\n        var reset = 'affix affix-top affix-bottom',\r\n            initialAffixTop = 0,\r\n            initialOffsetTop = 0,\r\n            offsetTop = 0,\r\n            offsetBottom = 0,\r\n            affixed = null,\r\n            unpin = null;\r\n\r\n        var parent = element.parent();\r\n        // Options: custom parent\r\n        if (options.offsetParent) {\r\n          if (options.offsetParent.match(/^\\d+$/)) {\r\n            for (var i = 0; i < (options.offsetParent * 1) - 1; i++) {\r\n              parent = parent.parent();\r\n            }\r\n          }\r\n          else {\r\n            parent = angular.element(options.offsetParent);\r\n          }\r\n        }\r\n\r\n        $affix.init = function() {\r\n\r\n          $affix.$parseOffsets();\r\n          initialOffsetTop = dimensions.offset(element[0]).top + initialAffixTop;\r\n\r\n          // Bind events\r\n          targetEl.on('scroll', $affix.checkPosition);\r\n          targetEl.on('click', $affix.checkPositionWithEventLoop);\r\n          windowEl.on('resize', $affix.$debouncedOnResize);\r\n\r\n          // Both of these checkPosition() calls are necessary for the case where\r\n          // the user hits refresh after scrolling to the bottom of the page.\r\n          $affix.checkPosition();\r\n          $affix.checkPositionWithEventLoop();\r\n\r\n        };\r\n\r\n        $affix.destroy = function() {\r\n\r\n          // Unbind events\r\n          targetEl.off('scroll', $affix.checkPosition);\r\n          targetEl.off('click', $affix.checkPositionWithEventLoop);\r\n          windowEl.off('resize', $affix.$debouncedOnResize);\r\n\r\n        };\r\n\r\n        $affix.checkPositionWithEventLoop = function() {\r\n\r\n          setTimeout($affix.checkPosition, 1);\r\n\r\n        };\r\n\r\n        $affix.checkPosition = function() {\r\n          // if (!this.$element.is(':visible')) return\r\n\r\n          var scrollTop = getScrollTop();\r\n          var position = dimensions.offset(element[0]);\r\n          var elementHeight = dimensions.height(element[0]);\r\n\r\n          // Get required affix class according to position\r\n          var affix = getRequiredAffixClass(unpin, position, elementHeight);\r\n\r\n          // Did affix status changed this last check?\r\n          if(affixed === affix) return;\r\n          affixed = affix;\r\n\r\n          // Add proper affix class\r\n          element.removeClass(reset).addClass('affix' + ((affix !== 'middle') ? '-' + affix : ''));\r\n\r\n          if(affix === 'top') {\r\n            unpin = null;\r\n            element.css('position', (options.offsetParent) ? '' : 'relative');\r\n            element.css('top', '');\r\n          } else if(affix === 'bottom') {\r\n            if (options.offsetUnpin) {\r\n              unpin = -(options.offsetUnpin * 1);\r\n            }\r\n            else {\r\n              // Calculate unpin threshold when affixed to bottom.\r\n              // Hopefully the browser scrolls pixel by pixel.\r\n              unpin = position.top - scrollTop;\r\n            }\r\n            element.css('position', (options.offsetParent) ? '' : 'relative');\r\n            element.css('top', (options.offsetParent) ? '' : ((bodyEl[0].offsetHeight - offsetBottom - elementHeight - initialOffsetTop) + 'px'));\r\n          } else { // affix === 'middle'\r\n            unpin = null;\r\n            element.css('position', 'fixed');\r\n            element.css('top', initialAffixTop + 'px');\r\n          }\r\n\r\n        };\r\n\r\n        $affix.$onResize = function() {\r\n          $affix.$parseOffsets();\r\n          $affix.checkPosition();\r\n        };\r\n        $affix.$debouncedOnResize = debounce($affix.$onResize, 50);\r\n\r\n        $affix.$parseOffsets = function() {\r\n\r\n          // Reset position to calculate correct offsetTop\r\n          element.css('position', (options.offsetParent) ? '' : 'relative');\r\n\r\n          if(options.offsetTop) {\r\n            if(options.offsetTop === 'auto') {\r\n              options.offsetTop = '+0';\r\n            }\r\n            if(options.offsetTop.match(/^[-+]\\d+$/)) {\r\n              initialAffixTop = - options.offsetTop * 1;\r\n              if(options.offsetParent) {\r\n                offsetTop = dimensions.offset(parent[0]).top + (options.offsetTop * 1);\r\n              }\r\n              else {\r\n                offsetTop = dimensions.offset(element[0]).top - dimensions.css(element[0], 'marginTop', true) + (options.offsetTop * 1);\r\n              }\r\n            }\r\n            else {\r\n              offsetTop = options.offsetTop * 1;\r\n            }\r\n          }\r\n\r\n          if(options.offsetBottom) {\r\n            if(options.offsetParent && options.offsetBottom.match(/^[-+]\\d+$/)) {\r\n              // add 1 pixel due to rounding problems...\r\n              offsetBottom = getScrollHeight() - (dimensions.offset(parent[0]).top + dimensions.height(parent[0])) + (options.offsetBottom * 1) + 1;\r\n            }\r\n            else {\r\n              offsetBottom = options.offsetBottom * 1;\r\n            }\r\n          }\r\n\r\n        };\r\n\r\n        // Private methods\r\n\r\n        function getRequiredAffixClass(unpin, position, elementHeight) {\r\n\r\n          var scrollTop = getScrollTop();\r\n          var scrollHeight = getScrollHeight();\r\n\r\n          if(scrollTop <= offsetTop) {\r\n            return 'top';\r\n          } else if(unpin !== null && (scrollTop + unpin <= position.top)) {\r\n            return 'middle';\r\n          } else if(offsetBottom !== null && (position.top + elementHeight + initialAffixTop >= scrollHeight - offsetBottom)) {\r\n            return 'bottom';\r\n          } else {\r\n            return 'middle';\r\n          }\r\n\r\n        }\r\n\r\n        function getScrollTop() {\r\n          return targetEl[0] === $window ? $window.pageYOffset : targetEl[0].scrollTop;\r\n        }\r\n\r\n        function getScrollHeight() {\r\n          return targetEl[0] === $window ? $window.document.body.scrollHeight : targetEl[0].scrollHeight;\r\n        }\r\n\r\n        $affix.init();\r\n        return $affix;\r\n\r\n      }\r\n\r\n      return AffixFactory;\r\n\r\n    };\r\n\r\n  })\r\n\r\n  .directive('bsAffix', function($affix, $window) {\r\n\r\n    return {\r\n      restrict: 'EAC',\r\n      require: '^?bsAffixTarget',\r\n      link: function postLink(scope, element, attr, affixTarget) {\r\n\r\n        var options = {scope: scope, offsetTop: 'auto', target: affixTarget ? affixTarget.$element : angular.element($window)};\r\n        angular.forEach(['offsetTop', 'offsetBottom', 'offsetParent', 'offsetUnpin'], function(key) {\r\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\r\n        });\r\n\r\n        var affix = $affix(element, options);\r\n        scope.$on('$destroy', function() {\r\n          affix && affix.destroy();\r\n          options = null;\r\n          affix = null;\r\n        });\r\n\r\n      }\r\n    };\r\n\r\n  })\r\n\r\n  .directive('bsAffixTarget', function() {\r\n    return {\r\n      controller: function($element) {\r\n        this.$element = $element;\r\n      }\r\n    };\r\n  });\r\n","'use strict';\r\n\r\n// @BUG: following snippet won't compile correctly\r\n// @TODO: submit issue to core\r\n// '<span ng-if=\"title\"><strong ng-bind=\"title\"></strong>&nbsp;</span><span ng-bind-html=\"content\"></span>' +\r\n\r\nangular.module('mgcrea.ngStrap.alert', ['mgcrea.ngStrap.modal'])\r\n\r\n  .provider('$alert', function() {\r\n\r\n    var defaults = this.defaults = {\r\n      animation: 'am-fade',\r\n      prefixClass: 'alert',\r\n      prefixEvent: 'alert',\r\n      placement: null,\r\n      template: 'alert/alert.tpl.html',\r\n      container: false,\r\n      element: null,\r\n      backdrop: false,\r\n      keyboard: true,\r\n      show: true,\r\n      // Specific options\r\n      duration: false,\r\n      type: false,\r\n      dismissable: true\r\n    };\r\n\r\n    this.$get = function($modal, $timeout) {\r\n\r\n      function AlertFactory(config) {\r\n\r\n        var $alert = {};\r\n\r\n        // Common vars\r\n        var options = angular.extend({}, defaults, config);\r\n\r\n        $alert = $modal(options);\r\n\r\n        // Support scope as string options [/*title, content, */ type, dismissable]\r\n        $alert.$scope.dismissable = !!options.dismissable;\r\n        if(options.type) {\r\n          $alert.$scope.type = options.type;\r\n        }\r\n\r\n        // Support auto-close duration\r\n        var show = $alert.show;\r\n        if(options.duration) {\r\n          $alert.show = function() {\r\n            show();\r\n            $timeout(function() {\r\n              $alert.hide();\r\n            }, options.duration * 1000);\r\n          };\r\n        }\r\n\r\n        return $alert;\r\n\r\n      }\r\n\r\n      return AlertFactory;\r\n\r\n    };\r\n\r\n  })\r\n\r\n  .directive('bsAlert', function($window, $sce, $alert) {\r\n\r\n    var requestAnimationFrame = $window.requestAnimationFrame || $window.setTimeout;\r\n\r\n    return {\r\n      restrict: 'EAC',\r\n      scope: true,\r\n      link: function postLink(scope, element, attr, transclusion) {\r\n\r\n        // Directive options\r\n        var options = {scope: scope, element: element, show: false};\r\n        angular.forEach(['template', 'placement', 'keyboard', 'html', 'container', 'animation', 'duration', 'dismissable'], function(key) {\r\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\r\n        });\r\n\r\n        // Support scope as data-attrs\r\n        angular.forEach(['title', 'content', 'type'], function(key) {\r\n          attr[key] && attr.$observe(key, function(newValue, oldValue) {\r\n            scope[key] = $sce.trustAsHtml(newValue);\r\n          });\r\n        });\r\n\r\n        // Support scope as an object\r\n        attr.bsAlert && scope.$watch(attr.bsAlert, function(newValue, oldValue) {\r\n          if(angular.isObject(newValue)) {\r\n            angular.extend(scope, newValue);\r\n          } else {\r\n            scope.content = newValue;\r\n          }\r\n        }, true);\r\n\r\n        // Initialize alert\r\n        var alert = $alert(options);\r\n\r\n        // Trigger\r\n        element.on(attr.trigger || 'click', alert.toggle);\r\n\r\n        // Garbage collection\r\n        scope.$on('$destroy', function() {\r\n          if (alert) alert.destroy();\r\n          options = null;\r\n          alert = null;\r\n        });\r\n\r\n      }\r\n    };\r\n\r\n  });\r\n","'use strict';\r\n\r\nangular.module('mgcrea.ngStrap.aside', ['mgcrea.ngStrap.modal'])\r\n\r\n  .provider('$aside', function() {\r\n\r\n    var defaults = this.defaults = {\r\n      animation: 'am-fade-and-slide-right',\r\n      prefixClass: 'aside',\r\n      prefixEvent: 'aside',\r\n      placement: 'right',\r\n      template: 'aside/aside.tpl.html',\r\n      contentTemplate: false,\r\n      container: false,\r\n      element: null,\r\n      backdrop: true,\r\n      keyboard: true,\r\n      html: false,\r\n      show: true\r\n    };\r\n\r\n    this.$get = function($modal) {\r\n\r\n      function AsideFactory(config) {\r\n\r\n        var $aside = {};\r\n\r\n        // Common vars\r\n        var options = angular.extend({}, defaults, config);\r\n\r\n        $aside = $modal(options);\r\n\r\n        return $aside;\r\n\r\n      }\r\n\r\n      return AsideFactory;\r\n\r\n    };\r\n\r\n  })\r\n\r\n  .directive('bsAside', function($window, $sce, $aside) {\r\n\r\n    var requestAnimationFrame = $window.requestAnimationFrame || $window.setTimeout;\r\n\r\n    return {\r\n      restrict: 'EAC',\r\n      scope: true,\r\n      link: function postLink(scope, element, attr, transclusion) {\r\n        // Directive options\r\n        var options = {scope: scope, element: element, show: false};\r\n        angular.forEach(['template', 'contentTemplate', 'placement', 'backdrop', 'keyboard', 'html', 'container', 'animation'], function(key) {\r\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\r\n        });\r\n\r\n        // Support scope as data-attrs\r\n        angular.forEach(['title', 'content'], function(key) {\r\n          attr[key] && attr.$observe(key, function(newValue, oldValue) {\r\n            scope[key] = $sce.trustAsHtml(newValue);\r\n          });\r\n        });\r\n\r\n        // Support scope as an object\r\n        attr.bsAside && scope.$watch(attr.bsAside, function(newValue, oldValue) {\r\n          if(angular.isObject(newValue)) {\r\n            angular.extend(scope, newValue);\r\n          } else {\r\n            scope.content = newValue;\r\n          }\r\n        }, true);\r\n\r\n        // Initialize aside\r\n        var aside = $aside(options);\r\n\r\n        // Trigger\r\n        element.on(attr.trigger || 'click', aside.toggle);\r\n\r\n        // Garbage collection\r\n        scope.$on('$destroy', function() {\r\n          if (aside) aside.destroy();\r\n          options = null;\r\n          aside = null;\r\n        });\r\n\r\n      }\r\n    };\r\n\r\n  });\r\n","'use strict';\r\n\r\nangular.module('mgcrea.ngStrap.button', [])\r\n\r\n  .provider('$button', function() {\r\n\r\n    var defaults = this.defaults = {\r\n      activeClass:'active',\r\n      toggleEvent:'click'\r\n    };\r\n\r\n    this.$get = function() {\r\n      return {defaults: defaults};\r\n    };\r\n\r\n  })\r\n\r\n  .directive('bsCheckboxGroup', function() {\r\n\r\n    return {\r\n      restrict: 'A',\r\n      require: 'ngModel',\r\n      compile: function postLink(element, attr) {\r\n        element.attr('data-toggle', 'buttons');\r\n        element.removeAttr('ng-model');\r\n        var children = element[0].querySelectorAll('input[type=\"checkbox\"]');\r\n        angular.forEach(children, function(child) {\r\n          var childEl = angular.element(child);\r\n          childEl.attr('bs-checkbox', '');\r\n          childEl.attr('ng-model', attr.ngModel + '.' + childEl.attr('value'));\r\n        });\r\n      }\r\n\r\n    };\r\n\r\n  })\r\n\r\n  .directive('bsCheckbox', function($button, $$rAF) {\r\n\r\n    var defaults = $button.defaults;\r\n    var constantValueRegExp = /^(true|false|\\d+)$/;\r\n\r\n    return {\r\n      restrict: 'A',\r\n      require: 'ngModel',\r\n      link: function postLink(scope, element, attr, controller) {\r\n\r\n        var options = defaults;\r\n\r\n        // Support label > input[type=\"checkbox\"]\r\n        var isInput = element[0].nodeName === 'INPUT';\r\n        var activeElement = isInput ? element.parent() : element;\r\n\r\n        var trueValue = angular.isDefined(attr.trueValue) ? attr.trueValue : true;\r\n        if(constantValueRegExp.test(attr.trueValue)) {\r\n          trueValue = scope.$eval(attr.trueValue);\r\n        }\r\n        var falseValue = angular.isDefined(attr.falseValue) ? attr.falseValue : false;\r\n        if(constantValueRegExp.test(attr.falseValue)) {\r\n          falseValue = scope.$eval(attr.falseValue);\r\n        }\r\n\r\n        // Parse exotic values\r\n        var hasExoticValues = typeof trueValue !== 'boolean' || typeof falseValue !== 'boolean';\r\n        if(hasExoticValues) {\r\n          controller.$parsers.push(function(viewValue) {\r\n            // console.warn('$parser', element.attr('ng-model'), 'viewValue', viewValue);\r\n            return viewValue ? trueValue : falseValue;\r\n          });\r\n          // Fix rendering for exotic values\r\n          scope.$watch(attr.ngModel, function(newValue, oldValue) {\r\n            controller.$render();\r\n          });\r\n        }\r\n\r\n        // model -> view\r\n        controller.$render = function () {\r\n          // console.warn('$render', element.attr('ng-model'), 'controller.$modelValue', typeof controller.$modelValue, controller.$modelValue, 'controller.$viewValue', typeof controller.$viewValue, controller.$viewValue);\r\n          var isActive = angular.equals(controller.$modelValue, trueValue);\r\n          $$rAF(function() {\r\n            if(isInput) element[0].checked = isActive;\r\n            activeElement.toggleClass(options.activeClass, isActive);\r\n          });\r\n        };\r\n\r\n        // view -> model\r\n        element.bind(options.toggleEvent, function() {\r\n          scope.$apply(function () {\r\n            // console.warn('!click', element.attr('ng-model'), 'controller.$viewValue', typeof controller.$viewValue, controller.$viewValue, 'controller.$modelValue', typeof controller.$modelValue, controller.$modelValue);\r\n            if(!isInput) {\r\n              controller.$setViewValue(!activeElement.hasClass('active'));\r\n            }\r\n            if(!hasExoticValues) {\r\n              controller.$render();\r\n            }\r\n          });\r\n        });\r\n\r\n      }\r\n\r\n    };\r\n\r\n  })\r\n\r\n  .directive('bsRadioGroup', function() {\r\n\r\n    return {\r\n      restrict: 'A',\r\n      require: 'ngModel',\r\n      compile: function postLink(element, attr) {\r\n        element.attr('data-toggle', 'buttons');\r\n        element.removeAttr('ng-model');\r\n        var children = element[0].querySelectorAll('input[type=\"radio\"]');\r\n        angular.forEach(children, function(child) {\r\n          angular.element(child).attr('bs-radio', '');\r\n          angular.element(child).attr('ng-model', attr.ngModel);\r\n        });\r\n      }\r\n\r\n    };\r\n\r\n  })\r\n\r\n  .directive('bsRadio', function($button, $$rAF) {\r\n\r\n    var defaults = $button.defaults;\r\n    var constantValueRegExp = /^(true|false|\\d+)$/;\r\n\r\n    return {\r\n      restrict: 'A',\r\n      require: 'ngModel',\r\n      link: function postLink(scope, element, attr, controller) {\r\n\r\n        var options = defaults;\r\n\r\n        // Support `label > input[type=\"radio\"]` markup\r\n        var isInput = element[0].nodeName === 'INPUT';\r\n        var activeElement = isInput ? element.parent() : element;\r\n\r\n        var value = constantValueRegExp.test(attr.value) ? scope.$eval(attr.value) : attr.value;\r\n\r\n        // model -> view\r\n        controller.$render = function () {\r\n          // console.warn('$render', element.attr('value'), 'controller.$modelValue', typeof controller.$modelValue, controller.$modelValue, 'controller.$viewValue', typeof controller.$viewValue, controller.$viewValue);\r\n          var isActive = angular.equals(controller.$modelValue, value);\r\n          $$rAF(function() {\r\n            if(isInput) element[0].checked = isActive;\r\n            activeElement.toggleClass(options.activeClass, isActive);\r\n          });\r\n        };\r\n\r\n        // view -> model\r\n        element.bind(options.toggleEvent, function() {\r\n          scope.$apply(function () {\r\n            // console.warn('!click', element.attr('value'), 'controller.$viewValue', typeof controller.$viewValue, controller.$viewValue, 'controller.$modelValue', typeof controller.$modelValue, controller.$modelValue);\r\n            controller.$setViewValue(value);\r\n            controller.$render();\r\n          });\r\n        });\r\n\r\n      }\r\n\r\n    };\r\n\r\n  });\r\n","'use strict';\r\n\r\nangular.module('mgcrea.ngStrap.collapse', [])\r\n\r\n  .provider('$collapse', function() {\r\n\r\n    var defaults = this.defaults = {\r\n      animation: 'am-collapse',\r\n      disallowToggle: false,\r\n      activeClass: 'in',\r\n      startCollapsed: false\r\n    };\r\n\r\n    var controller = this.controller = function($scope, $element, $attrs) {\r\n      var self = this;\r\n\r\n      // Attributes options\r\n      self.$options = angular.copy(defaults);\r\n      angular.forEach(['animation', 'disallowToggle', 'activeClass', 'startCollapsed'], function (key) {\r\n        if(angular.isDefined($attrs[key])) self.$options[key] = $attrs[key];\r\n      });\r\n\r\n      self.$toggles = [];\r\n      self.$targets = [];\r\n\r\n      self.$viewChangeListeners = [];\r\n\r\n      self.$registerToggle = function(element) {\r\n        self.$toggles.push(element);\r\n      };\r\n      self.$registerTarget = function(element) {\r\n        self.$targets.push(element);\r\n      };\r\n\r\n      self.$targets.$active = !self.$options.startCollapsed ? 0 : -1;\r\n      self.$setActive = $scope.$setActive = function(value) {\r\n        if(!self.$options.disallowToggle) {\r\n          self.$targets.$active = self.$targets.$active === value ? -1 : value;\r\n        } else {\r\n          self.$targets.$active = value;\r\n        }\r\n        self.$viewChangeListeners.forEach(function(fn) {\r\n          fn();\r\n        });\r\n      };\r\n\r\n    };\r\n\r\n    this.$get = function() {\r\n      var $collapse = {};\r\n      $collapse.defaults = defaults;\r\n      $collapse.controller = controller;\r\n      return $collapse;\r\n    };\r\n\r\n  })\r\n\r\n  .directive('bsCollapse', function($window, $animate, $collapse) {\r\n\r\n    var defaults = $collapse.defaults;\r\n\r\n    return {\r\n      require: ['?ngModel', 'bsCollapse'],\r\n      controller: ['$scope', '$element', '$attrs', $collapse.controller],\r\n      link: function postLink(scope, element, attrs, controllers) {\r\n\r\n        var ngModelCtrl = controllers[0];\r\n        var bsCollapseCtrl = controllers[1];\r\n\r\n        if(ngModelCtrl) {\r\n\r\n          // Update the modelValue following\r\n          bsCollapseCtrl.$viewChangeListeners.push(function() {\r\n            ngModelCtrl.$setViewValue(bsCollapseCtrl.$targets.$active);\r\n          });\r\n\r\n          // modelValue -> $formatters -> viewValue\r\n          ngModelCtrl.$formatters.push(function(modelValue) {\r\n            // console.warn('$formatter(\"%s\"): modelValue=%o (%o)', element.attr('ng-model'), modelValue, typeof modelValue);\r\n            if (bsCollapseCtrl.$targets.$active !== modelValue * 1) {\r\n              bsCollapseCtrl.$setActive(modelValue * 1);\r\n            }\r\n            return modelValue;\r\n          });\r\n\r\n        }\r\n\r\n      }\r\n    };\r\n\r\n  })\r\n\r\n  .directive('bsCollapseToggle', function() {\r\n\r\n    return {\r\n      require: ['^?ngModel', '^bsCollapse'],\r\n      link: function postLink(scope, element, attrs, controllers) {\r\n\r\n        var ngModelCtrl = controllers[0];\r\n        var bsCollapseCtrl = controllers[1];\r\n\r\n        // Add base attr\r\n        element.attr('data-toggle', 'collapse');\r\n\r\n        // Push pane to parent bsCollapse controller\r\n        bsCollapseCtrl.$registerToggle(element);\r\n        element.on('click', function() {\r\n          var index = attrs.bsCollapseToggle || bsCollapseCtrl.$toggles.indexOf(element);\r\n          bsCollapseCtrl.$setActive(index * 1);\r\n          scope.$apply();\r\n        });\r\n\r\n      }\r\n    };\r\n\r\n  })\r\n\r\n  .directive('bsCollapseTarget', function($animate) {\r\n\r\n    return {\r\n      require: ['^?ngModel', '^bsCollapse'],\r\n      // scope: true,\r\n      link: function postLink(scope, element, attrs, controllers) {\r\n\r\n        var ngModelCtrl = controllers[0];\r\n        var bsCollapseCtrl = controllers[1];\r\n\r\n        // Add base class\r\n        element.addClass('collapse');\r\n\r\n        // Add animation class\r\n        if(bsCollapseCtrl.$options.animation) {\r\n          element.addClass(bsCollapseCtrl.$options.animation);\r\n        }\r\n\r\n        // Push pane to parent bsCollapse controller\r\n        bsCollapseCtrl.$registerTarget(element);\r\n\r\n        function render() {\r\n          var index = bsCollapseCtrl.$targets.indexOf(element);\r\n          var active = bsCollapseCtrl.$targets.$active;\r\n          $animate[index === active ? 'addClass' : 'removeClass'](element, bsCollapseCtrl.$options.activeClass);\r\n        }\r\n\r\n        bsCollapseCtrl.$viewChangeListeners.push(function() {\r\n          render();\r\n        });\r\n        render();\r\n\r\n      }\r\n    };\r\n\r\n  });\r\n","'use strict';\r\n\r\nangular.module('mgcrea.ngStrap.datepicker', ['mgcrea.ngStrap.helpers.dateParser', 'mgcrea.ngStrap.tooltip'])\r\n\r\n  .provider('$datepicker', function() {\r\n\r\n    var defaults = this.defaults = {\r\n      animation: 'am-fade',\r\n      prefixClass: 'datepicker',\r\n      placement: 'bottom-left',\r\n      template: 'datepicker/datepicker.tpl.html',\r\n      trigger: 'focus',\r\n      container: false,\r\n      keyboard: true,\r\n      html: false,\r\n      delay: 0,\r\n      // lang: $locale.id,\r\n      useNative: false,\r\n      dateType: 'date',\r\n      dateFormat: 'shortDate',\r\n      modelDateFormat: null,\r\n      dayFormat: 'dd',\r\n      strictFormat: false,\r\n      autoclose: false,\r\n      minDate: -Infinity,\r\n      maxDate: +Infinity,\r\n      startView: 0,\r\n      minView: 0,\r\n      startWeek: 0,\r\n      daysOfWeekDisabled: '',\r\n      iconLeft: 'glyphicon glyphicon-chevron-left',\r\n      iconRight: 'glyphicon glyphicon-chevron-right'\r\n    };\r\n\r\n    this.$get = function($window, $document, $rootScope, $sce, $locale, dateFilter, datepickerViews, $tooltip) {\r\n\r\n      var bodyEl = angular.element($window.document.body);\r\n      var isNative = /(ip(a|o)d|iphone|android)/ig.test($window.navigator.userAgent);\r\n      var isTouch = ('createTouch' in $window.document) && isNative;\r\n      if(!defaults.lang) defaults.lang = $locale.id;\r\n\r\n      function DatepickerFactory(element, controller, config) {\r\n\r\n        var $datepicker = $tooltip(element, angular.extend({}, defaults, config));\r\n        var parentScope = config.scope;\r\n        var options = $datepicker.$options;\r\n        var scope = $datepicker.$scope;\r\n        if(options.startView) options.startView -= options.minView;\r\n\r\n        // View vars\r\n\r\n        var pickerViews = datepickerViews($datepicker);\r\n        $datepicker.$views = pickerViews.views;\r\n        var viewDate = pickerViews.viewDate;\r\n        scope.$mode = options.startView;\r\n        scope.$iconLeft = options.iconLeft;\r\n        scope.$iconRight = options.iconRight;\r\n        var $picker = $datepicker.$views[scope.$mode];\r\n\r\n        // Scope methods\r\n\r\n        scope.$select = function(date) {\r\n          $datepicker.select(date);\r\n        };\r\n        scope.$selectPane = function(value) {\r\n          $datepicker.$selectPane(value);\r\n        };\r\n        scope.$toggleMode = function() {\r\n          $datepicker.setMode((scope.$mode + 1) % $datepicker.$views.length);\r\n        };\r\n\r\n        // Public methods\r\n\r\n        $datepicker.update = function(date) {\r\n          // console.warn('$datepicker.update() newValue=%o', date);\r\n          if(angular.isDate(date) && !isNaN(date.getTime())) {\r\n            $datepicker.$date = date;\r\n            $picker.update.call($picker, date);\r\n          }\r\n          // Build only if pristine\r\n          $datepicker.$build(true);\r\n        };\r\n\r\n        $datepicker.updateDisabledDates = function(dateRanges) {\r\n          options.disabledDateRanges = dateRanges;\r\n          for(var i = 0, l = scope.rows.length; i < l; i++) {\r\n            angular.forEach(scope.rows[i], $datepicker.$setDisabledEl);\r\n          }\r\n        };\r\n\r\n        $datepicker.select = function(date, keep) {\r\n          // console.warn('$datepicker.select', date, scope.$mode);\r\n          if(!angular.isDate(controller.$dateValue)) controller.$dateValue = new Date(date);\r\n          if(!scope.$mode || keep) {\r\n            controller.$setViewValue(angular.copy(date));\r\n            controller.$render();\r\n            if(options.autoclose && !keep) {\r\n              $datepicker.hide(true);\r\n            }\r\n          } else {\r\n            angular.extend(viewDate, {year: date.getFullYear(), month: date.getMonth(), date: date.getDate()});\r\n            $datepicker.setMode(scope.$mode - 1);\r\n            $datepicker.$build();\r\n          }\r\n        };\r\n\r\n        $datepicker.setMode = function(mode) {\r\n          // console.warn('$datepicker.setMode', mode);\r\n          scope.$mode = mode;\r\n          $picker = $datepicker.$views[scope.$mode];\r\n          $datepicker.$build();\r\n        };\r\n\r\n        // Protected methods\r\n\r\n        $datepicker.$build = function(pristine) {\r\n          // console.warn('$datepicker.$build() viewDate=%o', viewDate);\r\n          if(pristine === true && $picker.built) return;\r\n          if(pristine === false && !$picker.built) return;\r\n          $picker.build.call($picker);\r\n        };\r\n\r\n        $datepicker.$updateSelected = function() {\r\n          for(var i = 0, l = scope.rows.length; i < l; i++) {\r\n            angular.forEach(scope.rows[i], updateSelected);\r\n          }\r\n        };\r\n\r\n        $datepicker.$isSelected = function(date) {\r\n          return $picker.isSelected(date);\r\n        };\r\n\r\n        $datepicker.$setDisabledEl = function(el) {\r\n          el.disabled = $picker.isDisabled(el.date);\r\n        };\r\n\r\n        $datepicker.$selectPane = function(value) {\r\n          var steps = $picker.steps;\r\n          var targetDate = new Date(Date.UTC(viewDate.year + ((steps.year || 0) * value), viewDate.month + ((steps.month || 0) * value), viewDate.date + ((steps.day || 0) * value)));\r\n          angular.extend(viewDate, {year: targetDate.getUTCFullYear(), month: targetDate.getUTCMonth(), date: targetDate.getUTCDate()});\r\n          $datepicker.$build();\r\n        };\r\n\r\n        $datepicker.$onMouseDown = function(evt) {\r\n          // Prevent blur on mousedown on .dropdown-menu\r\n          evt.preventDefault();\r\n          evt.stopPropagation();\r\n          // Emulate click for mobile devices\r\n          if(isTouch) {\r\n            var targetEl = angular.element(evt.target);\r\n            if(targetEl[0].nodeName.toLowerCase() !== 'button') {\r\n              targetEl = targetEl.parent();\r\n            }\r\n            targetEl.triggerHandler('click');\r\n          }\r\n        };\r\n\r\n        $datepicker.$onKeyDown = function(evt) {\r\n          if (!/(38|37|39|40|13)/.test(evt.keyCode) || evt.shiftKey || evt.altKey) return;\r\n          evt.preventDefault();\r\n          evt.stopPropagation();\r\n\r\n          if(evt.keyCode === 13) {\r\n            if(!scope.$mode) {\r\n              return $datepicker.hide(true);\r\n            } else {\r\n              return scope.$apply(function() { $datepicker.setMode(scope.$mode - 1); });\r\n            }\r\n          }\r\n\r\n          // Navigate with keyboard\r\n          $picker.onKeyDown(evt);\r\n          parentScope.$digest();\r\n        };\r\n\r\n        // Private\r\n\r\n        function updateSelected(el) {\r\n          el.selected = $datepicker.$isSelected(el.date);\r\n        }\r\n\r\n        function focusElement() {\r\n          element[0].focus();\r\n        }\r\n\r\n        // Overrides\r\n\r\n        var _init = $datepicker.init;\r\n        $datepicker.init = function() {\r\n          if(isNative && options.useNative) {\r\n            element.prop('type', 'date');\r\n            element.css('-webkit-appearance', 'textfield');\r\n            return;\r\n          } else if(isTouch) {\r\n            element.prop('type', 'text');\r\n            element.attr('readonly', 'true');\r\n            element.on('click', focusElement);\r\n          }\r\n          _init();\r\n        };\r\n\r\n        var _destroy = $datepicker.destroy;\r\n        $datepicker.destroy = function() {\r\n          if(isNative && options.useNative) {\r\n            element.off('click', focusElement);\r\n          }\r\n          _destroy();\r\n        };\r\n\r\n        var _show = $datepicker.show;\r\n        $datepicker.show = function() {\r\n          _show();\r\n          setTimeout(function() {\r\n            $datepicker.$element.on(isTouch ? 'touchstart' : 'mousedown', $datepicker.$onMouseDown);\r\n            if(options.keyboard) {\r\n              element.on('keydown', $datepicker.$onKeyDown);\r\n            }\r\n          });\r\n        };\r\n\r\n        var _hide = $datepicker.hide;\r\n        $datepicker.hide = function(blur) {\r\n          $datepicker.$element.off(isTouch ? 'touchstart' : 'mousedown', $datepicker.$onMouseDown);\r\n          if(options.keyboard) {\r\n            element.off('keydown', $datepicker.$onKeyDown);\r\n          }\r\n          _hide(blur);\r\n        };\r\n\r\n        return $datepicker;\r\n\r\n      }\r\n\r\n      DatepickerFactory.defaults = defaults;\r\n      return DatepickerFactory;\r\n\r\n    };\r\n\r\n  })\r\n\r\n  .directive('bsDatepicker', function($window, $parse, $q, $locale, dateFilter, $datepicker, $dateParser, $timeout) {\r\n\r\n    var defaults = $datepicker.defaults;\r\n    var isNative = /(ip(a|o)d|iphone|android)/ig.test($window.navigator.userAgent);\r\n    var isNumeric = function(n) {\r\n      return !isNaN(parseFloat(n)) && isFinite(n);\r\n    };\r\n\r\n    return {\r\n      restrict: 'EAC',\r\n      require: 'ngModel',\r\n      link: function postLink(scope, element, attr, controller) {\r\n\r\n        // Directive options\r\n        var options = {scope: scope, controller: controller};\r\n        angular.forEach(['placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'template', 'autoclose', 'dateType', 'dateFormat', 'modelDateFormat', 'dayFormat', 'strictFormat', 'startWeek', 'startDate', 'useNative', 'lang', 'startView', 'minView', 'iconLeft', 'iconRight', 'daysOfWeekDisabled'], function(key) {\r\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\r\n        });\r\n\r\n        // Visibility binding support\r\n        attr.bsShow && scope.$watch(attr.bsShow, function(newValue, oldValue) {\r\n          if(!datepicker || !angular.isDefined(newValue)) return;\r\n          if(angular.isString(newValue)) newValue = !!newValue.match(',?(datepicker),?');\r\n          newValue === true ? datepicker.show() : datepicker.hide();\r\n        });\r\n\r\n        // Initialize datepicker\r\n        var datepicker = $datepicker(element, controller, options);\r\n        options = datepicker.$options;\r\n        // Set expected iOS format\r\n        if(isNative && options.useNative) options.dateFormat = 'yyyy-MM-dd';\r\n\r\n        // Observe attributes for changes\r\n        angular.forEach(['minDate', 'maxDate'], function(key) {\r\n          // console.warn('attr.$observe(%s)', key, attr[key]);\r\n          angular.isDefined(attr[key]) && attr.$observe(key, function(newValue) {\r\n            // console.warn('attr.$observe(%s)=%o', key, newValue);\r\n            if(newValue === 'today') {\r\n              var today = new Date();\r\n              datepicker.$options[key] = +new Date(today.getFullYear(), today.getMonth(), today.getDate() + (key === 'maxDate' ? 1 : 0), 0, 0, 0, (key === 'minDate' ? 0 : -1));\r\n            } else if(angular.isString(newValue) && newValue.match(/^\".+\"$/)) { // Support {{ dateObj }}\r\n              datepicker.$options[key] = +new Date(newValue.substr(1, newValue.length - 2));\r\n            } else if(isNumeric(newValue)) {\r\n              datepicker.$options[key] = +new Date(parseInt(newValue, 10));\r\n            } else if (angular.isString(newValue) && 0 === newValue.length) { // Reset date\r\n              datepicker.$options[key] = key === 'maxDate' ? +Infinity : -Infinity;\r\n            } else {\r\n              datepicker.$options[key] = +new Date(newValue);\r\n            }\r\n            // Build only if dirty\r\n            !isNaN(datepicker.$options[key]) && datepicker.$build(false);\r\n          });\r\n        });\r\n\t\t\r\n        // Observe date format\r\n        angular.isDefined(attr.dateFormat) && attr.$observe('dateFormat', function(newValue) {\r\n          datepicker.$options.dateFormat = newValue;\r\n        });\r\n\r\n        // Watch model for changes\r\n        scope.$watch(attr.ngModel, function(newValue, oldValue) {\r\n          datepicker.update(controller.$dateValue);\r\n        }, true);\r\n\r\n        // Normalize undefined/null/empty array,\r\n        // so that we don't treat changing from undefined->null as a change.\r\n        function normalizeDateRanges(ranges) {\r\n          if (!ranges || !ranges.length) return null;\r\n          return ranges;\r\n        }\r\n\r\n        if (angular.isDefined(attr.disabledDates)) {\r\n          scope.$watch(attr.disabledDates, function(disabledRanges, previousValue) {\r\n            disabledRanges = normalizeDateRanges(disabledRanges);\r\n            previousValue = normalizeDateRanges(previousValue);\r\n\r\n            if (disabledRanges !== previousValue) {\r\n              datepicker.updateDisabledDates(disabledRanges);\r\n            }\r\n          });\r\n        }\r\n\r\n        var dateParser = $dateParser({format: options.dateFormat, lang: options.lang, strict: options.strictFormat});\r\n\r\n        // viewValue -> $parsers -> modelValue\r\n        controller.$parsers.unshift(function(viewValue) {\r\n          // console.warn('$parser(\"%s\"): viewValue=%o', element.attr('ng-model'), viewValue);\r\n          // Null values should correctly reset the model value & validity\r\n          if(!viewValue) {\r\n            controller.$setValidity('date', true);\r\n            return;\r\n          }\r\n          var parsedDate = dateParser.parse(viewValue, controller.$dateValue);\r\n          if(!parsedDate || isNaN(parsedDate.getTime())) {\r\n            controller.$setValidity('date', false);\r\n            return;\r\n          } else {\r\n            var isMinValid = isNaN(datepicker.$options.minDate) || parsedDate.getTime() >= datepicker.$options.minDate;\r\n            var isMaxValid = isNaN(datepicker.$options.maxDate) || parsedDate.getTime() <= datepicker.$options.maxDate;\r\n            var isValid = isMinValid && isMaxValid;\r\n            controller.$setValidity('date', isValid);\r\n            controller.$setValidity('min', isMinValid);\r\n            controller.$setValidity('max', isMaxValid);\r\n            // Only update the model when we have a valid date\r\n            if(isValid) controller.$dateValue = parsedDate;\r\n          }\r\n          if(options.dateType === 'string') {\r\n            return dateFilter(parsedDate, options.modelDateFormat || options.dateFormat);\r\n          } else if(options.dateType === 'number') {\r\n            return controller.$dateValue.getTime();\r\n          } else if(options.dateType === 'iso') {\r\n            return controller.$dateValue.toISOString();\r\n          } else {\r\n            return new Date(controller.$dateValue);\r\n          }\r\n        });\r\n\r\n        // modelValue -> $formatters -> viewValue\r\n        controller.$formatters.push(function(modelValue) {\r\n          // console.warn('$formatter(\"%s\"): modelValue=%o (%o)', element.attr('ng-model'), modelValue, typeof modelValue);\r\n          var date;\r\n          if(angular.isUndefined(modelValue) || modelValue === null) {\r\n            date = NaN;\r\n          } else if(angular.isDate(modelValue)) {\r\n            date = modelValue;\r\n          } else if(options.dateType === 'string') {\r\n            date = dateParser.parse(modelValue, null, options.modelDateFormat);\r\n          } else {\r\n            date = new Date(modelValue);\r\n          }\r\n          // Setup default value?\r\n          // if(isNaN(date.getTime())) {\r\n          //   var today = new Date();\r\n          //   date = new Date(today.getFullYear(), today.getMonth(), today.getDate(), 0, 0, 0, 0);\r\n          // }\r\n          controller.$dateValue = date;\r\n          return controller.$dateValue;\r\n        });\r\n\r\n        // viewValue -> element\r\n        controller.$render = function() {\r\n          // console.warn('$render(\"%s\"): viewValue=%o', element.attr('ng-model'), controller.$viewValue);\r\n          element.val(!controller.$dateValue || isNaN(controller.$dateValue.getTime()) ? '' : dateFilter(controller.$dateValue, options.dateFormat));\r\n        };\r\n\r\n        // Garbage collection\r\n        scope.$on('$destroy', function() {\r\n          if(datepicker) datepicker.destroy();\r\n          options = null;\r\n          datepicker = null;\r\n        });\r\n\r\n      }\r\n    };\r\n\r\n  })\r\n\r\n  .provider('datepickerViews', function() {\r\n\r\n    var defaults = this.defaults = {\r\n      dayFormat: 'dd',\r\n      daySplit: 7\r\n    };\r\n\r\n    // Split array into smaller arrays\r\n    function split(arr, size) {\r\n      var arrays = [];\r\n      while(arr.length > 0) {\r\n        arrays.push(arr.splice(0, size));\r\n      }\r\n      return arrays;\r\n    }\r\n\r\n    // Modulus operator\r\n    function mod(n, m) {\r\n      return ((n % m) + m) % m;\r\n    }\r\n\r\n    this.$get = function($locale, $sce, dateFilter) {\r\n\r\n      return function(picker) {\r\n\r\n        var scope = picker.$scope;\r\n        var options = picker.$options;\r\n\r\n        var weekDaysMin = $locale.DATETIME_FORMATS.SHORTDAY;\r\n        var weekDaysLabels = weekDaysMin.slice(options.startWeek).concat(weekDaysMin.slice(0, options.startWeek));\r\n        var weekDaysLabelsHtml = $sce.trustAsHtml('<th class=\"dow text-center\">' + weekDaysLabels.join('</th><th class=\"dow text-center\">') + '</th>');\r\n\r\n        var startDate = picker.$date || (options.startDate ? new Date(options.startDate) : new Date());\r\n        var viewDate = {year: startDate.getFullYear(), month: startDate.getMonth(), date: startDate.getDate()};\r\n        var timezoneOffset = startDate.getTimezoneOffset() * 6e4;\r\n\r\n        var views = [{\r\n            format: options.dayFormat,\r\n            split: 7,\r\n            steps: { month: 1 },\r\n            update: function(date, force) {\r\n              if(!this.built || force || date.getFullYear() !== viewDate.year || date.getMonth() !== viewDate.month) {\r\n                angular.extend(viewDate, {year: picker.$date.getFullYear(), month: picker.$date.getMonth(), date: picker.$date.getDate()});\r\n                picker.$build();\r\n              } else if(date.getDate() !== viewDate.date) {\r\n                viewDate.date = picker.$date.getDate();\r\n                picker.$updateSelected();\r\n              }\r\n            },\r\n            build: function() {\r\n              var firstDayOfMonth = new Date(viewDate.year, viewDate.month, 1), firstDayOfMonthOffset = firstDayOfMonth.getTimezoneOffset();\r\n              var firstDate = new Date(+firstDayOfMonth - mod(firstDayOfMonth.getDay() - options.startWeek, 7) * 864e5), firstDateOffset = firstDate.getTimezoneOffset();\r\n              var today = new Date().toDateString();\r\n              // Handle daylight time switch\r\n              if(firstDateOffset !== firstDayOfMonthOffset) firstDate = new Date(+firstDate + (firstDateOffset - firstDayOfMonthOffset) * 60e3);\r\n              var days = [], day;\r\n              for(var i = 0; i < 42; i++) { // < 7 * 6\r\n                day = new Date(firstDate.getFullYear(), firstDate.getMonth(), firstDate.getDate() + i);\r\n                days.push({date: day, isToday: day.toDateString() === today, label: dateFilter(day, this.format), selected: picker.$date && this.isSelected(day), muted: day.getMonth() !== viewDate.month, disabled: this.isDisabled(day)});\r\n              }\r\n              scope.title = dateFilter(firstDayOfMonth, 'MMMM yyyy');\r\n              scope.showLabels = true;\r\n              scope.labels = weekDaysLabelsHtml;\r\n              scope.rows = split(days, this.split);\r\n              this.built = true;\r\n            },\r\n            isSelected: function(date) {\r\n              return picker.$date && date.getFullYear() === picker.$date.getFullYear() && date.getMonth() === picker.$date.getMonth() && date.getDate() === picker.$date.getDate();\r\n            },\r\n            isDisabled: function(date) {\r\n              var time = date.getTime();\r\n\r\n              // Disabled because of min/max date.\r\n              if (time < options.minDate || time > options.maxDate) return true;\r\n\r\n              // Disabled due to being a disabled day of the week\r\n              if (options.daysOfWeekDisabled.indexOf(date.getDay()) !== -1) return true;\r\n\r\n              // Disabled because of disabled date range.\r\n              if (options.disabledDateRanges) {\r\n                for (var i = 0; i < options.disabledDateRanges.length; i++) {\r\n                  if (time >= options.disabledDateRanges[i].start) {\r\n                    if (time <= options.disabledDateRanges[i].end) return true;\r\n\r\n                    // The disabledDateRanges is expected to be sorted, so if time >= start,\r\n                    // we know it's not disabled.\r\n                    return false;\r\n                  }\r\n                }\r\n              }\r\n\r\n              return false;\r\n            },\r\n            onKeyDown: function(evt) {\r\n              var actualTime = picker.$date.getTime();\r\n              var newDate;\r\n\r\n              if(evt.keyCode === 37) newDate = new Date(actualTime - 1 * 864e5);\r\n              else if(evt.keyCode === 38) newDate = new Date(actualTime - 7 * 864e5);\r\n              else if(evt.keyCode === 39) newDate = new Date(actualTime + 1 * 864e5);\r\n              else if(evt.keyCode === 40) newDate = new Date(actualTime + 7 * 864e5);\r\n\r\n              if (!this.isDisabled(newDate)) picker.select(newDate, true);\r\n            }\r\n          }, {\r\n            name: 'month',\r\n            format: 'MMM',\r\n            split: 4,\r\n            steps: { year: 1 },\r\n            update: function(date, force) {\r\n              if(!this.built || date.getFullYear() !== viewDate.year) {\r\n                angular.extend(viewDate, {year: picker.$date.getFullYear(), month: picker.$date.getMonth(), date: picker.$date.getDate()});\r\n                picker.$build();\r\n              } else if(date.getMonth() !== viewDate.month) {\r\n                angular.extend(viewDate, {month: picker.$date.getMonth(), date: picker.$date.getDate()});\r\n                picker.$updateSelected();\r\n              }\r\n            },\r\n            build: function() {\r\n              var firstMonth = new Date(viewDate.year, 0, 1);\r\n              var months = [], month;\r\n              for (var i = 0; i < 12; i++) {\r\n                month = new Date(viewDate.year, i, 1);\r\n                months.push({date: month, label: dateFilter(month, this.format), selected: picker.$isSelected(month), disabled: this.isDisabled(month)});\r\n              }\r\n              scope.title = dateFilter(month, 'yyyy');\r\n              scope.showLabels = false;\r\n              scope.rows = split(months, this.split);\r\n              this.built = true;\r\n            },\r\n            isSelected: function(date) {\r\n              return picker.$date && date.getFullYear() === picker.$date.getFullYear() && date.getMonth() === picker.$date.getMonth();\r\n            },\r\n            isDisabled: function(date) {\r\n              var lastDate = +new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n              return lastDate < options.minDate || date.getTime() > options.maxDate;\r\n            },\r\n            onKeyDown: function(evt) {\r\n              var actualMonth = picker.$date.getMonth();\r\n              var newDate = new Date(picker.$date);\r\n\r\n              if(evt.keyCode === 37) newDate.setMonth(actualMonth - 1);\r\n              else if(evt.keyCode === 38) newDate.setMonth(actualMonth - 4);\r\n              else if(evt.keyCode === 39) newDate.setMonth(actualMonth + 1);\r\n              else if(evt.keyCode === 40) newDate.setMonth(actualMonth + 4);\r\n\r\n              if (!this.isDisabled(newDate)) picker.select(newDate, true);\r\n            }\r\n          }, {\r\n            name: 'year',\r\n            format: 'yyyy',\r\n            split: 4,\r\n            steps: { year: 12 },\r\n            update: function(date, force) {\r\n              if(!this.built || force || parseInt(date.getFullYear()/20, 10) !== parseInt(viewDate.year/20, 10)) {\r\n                angular.extend(viewDate, {year: picker.$date.getFullYear(), month: picker.$date.getMonth(), date: picker.$date.getDate()});\r\n                picker.$build();\r\n              } else if(date.getFullYear() !== viewDate.year) {\r\n                angular.extend(viewDate, {year: picker.$date.getFullYear(), month: picker.$date.getMonth(), date: picker.$date.getDate()});\r\n                picker.$updateSelected();\r\n              }\r\n            },\r\n            build: function() {\r\n              var firstYear = viewDate.year - viewDate.year % (this.split * 3);\r\n              var years = [], year;\r\n              for (var i = 0; i < 12; i++) {\r\n                year = new Date(firstYear + i, 0, 1);\r\n                years.push({date: year, label: dateFilter(year, this.format), selected: picker.$isSelected(year), disabled: this.isDisabled(year)});\r\n              }\r\n              scope.title = years[0].label + '-' + years[years.length - 1].label;\r\n              scope.showLabels = false;\r\n              scope.rows = split(years, this.split);\r\n              this.built = true;\r\n            },\r\n            isSelected: function(date) {\r\n              return picker.$date && date.getFullYear() === picker.$date.getFullYear();\r\n            },\r\n            isDisabled: function(date) {\r\n              var lastDate = +new Date(date.getFullYear() + 1, 0, 0);\r\n              return lastDate < options.minDate || date.getTime() > options.maxDate;\r\n            },\r\n            onKeyDown: function(evt) {\r\n              var actualYear = picker.$date.getFullYear(),\r\n                  newDate = new Date(picker.$date);\r\n\r\n              if(evt.keyCode === 37) newDate.setYear(actualYear - 1);\r\n              else if(evt.keyCode === 38) newDate.setYear(actualYear - 4);\r\n              else if(evt.keyCode === 39) newDate.setYear(actualYear + 1);\r\n              else if(evt.keyCode === 40) newDate.setYear(actualYear + 4);\r\n\r\n              if (!this.isDisabled(newDate)) picker.select(newDate, true);\r\n            }\r\n          }];\r\n\r\n        return {\r\n          views: options.minView ? Array.prototype.slice.call(views, options.minView) : views,\r\n          viewDate: viewDate\r\n        };\r\n\r\n      };\r\n\r\n    };\r\n\r\n  });\r\n","'use strict';\r\n\r\nangular.module('mgcrea.ngStrap.dropdown', ['mgcrea.ngStrap.tooltip'])\r\n\r\n  .provider('$dropdown', function() {\r\n\r\n    var defaults = this.defaults = {\r\n      animation: 'am-fade',\r\n      prefixClass: 'dropdown',\r\n      placement: 'bottom-left',\r\n      template: 'dropdown/dropdown.tpl.html',\r\n      trigger: 'click',\r\n      container: false,\r\n      keyboard: true,\r\n      html: false,\r\n      delay: 0\r\n    };\r\n\r\n    this.$get = function($window, $rootScope, $tooltip) {\r\n\r\n      var bodyEl = angular.element($window.document.body);\r\n      var matchesSelector = Element.prototype.matchesSelector || Element.prototype.webkitMatchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector;\r\n\r\n      function DropdownFactory(element, config) {\r\n\r\n        var $dropdown = {};\r\n\r\n        // Common vars\r\n        var options = angular.extend({}, defaults, config);\r\n        var scope = $dropdown.$scope = options.scope && options.scope.$new() || $rootScope.$new();\r\n\r\n        $dropdown = $tooltip(element, options);\r\n        var parentEl = element.parent();\r\n\r\n        // Protected methods\r\n\r\n        $dropdown.$onKeyDown = function(evt) {\r\n          if (!/(38|40)/.test(evt.keyCode)) return;\r\n          evt.preventDefault();\r\n          evt.stopPropagation();\r\n\r\n          // Retrieve focused index\r\n          var items = angular.element($dropdown.$element[0].querySelectorAll('li:not(.divider) a'));\r\n          if(!items.length) return;\r\n          var index;\r\n          angular.forEach(items, function(el, i) {\r\n            if(matchesSelector && matchesSelector.call(el, ':focus')) index = i;\r\n          });\r\n\r\n          // Navigate with keyboard\r\n          if(evt.keyCode === 38 && index > 0) index--;\r\n          else if(evt.keyCode === 40 && index < items.length - 1) index++;\r\n          else if(angular.isUndefined(index)) index = 0;\r\n          items.eq(index)[0].focus();\r\n\r\n        };\r\n\r\n        // Overrides\r\n\r\n        var show = $dropdown.show;\r\n        $dropdown.show = function() {\r\n          show();\r\n          setTimeout(function() {\r\n            options.keyboard && $dropdown.$element.on('keydown', $dropdown.$onKeyDown);\r\n            bodyEl.on('click', onBodyClick);\r\n          });\r\n          parentEl.hasClass('dropdown') && parentEl.addClass('open');\r\n        };\r\n\r\n        var hide = $dropdown.hide;\r\n        $dropdown.hide = function() {\r\n          options.keyboard && $dropdown.$element.off('keydown', $dropdown.$onKeyDown);\r\n          bodyEl.off('click', onBodyClick);\r\n          parentEl.hasClass('dropdown') && parentEl.removeClass('open');\r\n          hide();\r\n        };\r\n\r\n        // Private functions\r\n\r\n        function onBodyClick(evt) {\r\n          if(evt.target === element[0]) return;\r\n          return evt.target !== element[0] && $dropdown.hide();\r\n        }\r\n\r\n        return $dropdown;\r\n\r\n      }\r\n\r\n      return DropdownFactory;\r\n\r\n    };\r\n\r\n  })\r\n\r\n  .directive('bsDropdown', function($window, $sce, $dropdown) {\r\n\r\n    return {\r\n      restrict: 'EAC',\r\n      scope: true,\r\n      link: function postLink(scope, element, attr, transclusion) {\r\n\r\n        // Directive options\r\n        var options = {scope: scope};\r\n        angular.forEach(['placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'template'], function(key) {\r\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\r\n        });\r\n\r\n        // Support scope as an object\r\n        attr.bsDropdown && scope.$watch(attr.bsDropdown, function(newValue, oldValue) {\r\n          scope.content = newValue;\r\n        }, true);\r\n\r\n        // Visibility binding support\r\n        attr.bsShow && scope.$watch(attr.bsShow, function(newValue, oldValue) {\r\n          if(!dropdown || !angular.isDefined(newValue)) return;\r\n          if(angular.isString(newValue)) newValue = !!newValue.match(',?(dropdown),?');\r\n          newValue === true ? dropdown.show() : dropdown.hide();\r\n        });\r\n\r\n        // Initialize dropdown\r\n        var dropdown = $dropdown(element, options);\r\n\r\n        // Garbage collection\r\n        scope.$on('$destroy', function() {\r\n          if (dropdown) dropdown.destroy();\r\n          options = null;\r\n          dropdown = null;\r\n        });\r\n\r\n      }\r\n    };\r\n\r\n  });\r\n","'use strict';\r\n\r\nangular.module('mgcrea.ngStrap.helpers.dateParser', [])\r\n\r\n.provider('$dateParser', function($localeProvider) {\r\n\r\n  var proto = Date.prototype;\r\n\r\n  function noop() {\r\n  }\r\n\r\n  function isNumeric(n) {\r\n    return !isNaN(parseFloat(n)) && isFinite(n);\r\n  }\r\n\r\n  var defaults = this.defaults = {\r\n    format: 'shortDate',\r\n    strict: false\r\n  };\r\n\r\n  this.$get = function($locale, dateFilter) {\r\n\r\n    var DateParserFactory = function(config) {\r\n\r\n      var options = angular.extend({}, defaults, config);\r\n\r\n      var $dateParser = {};\r\n\r\n      var regExpMap = {\r\n        'sss'   : '[0-9]{3}',\r\n        'ss'    : '[0-5][0-9]',\r\n        's'     : options.strict ? '[1-5]?[0-9]' : '[0-9]|[0-5][0-9]',\r\n        'mm'    : '[0-5][0-9]',\r\n        'm'     : options.strict ? '[1-5]?[0-9]' : '[0-9]|[0-5][0-9]',\r\n        'HH'    : '[01][0-9]|2[0-3]',\r\n        'H'     : options.strict ? '1?[0-9]|2[0-3]' : '[01]?[0-9]|2[0-3]',\r\n        'hh'    : '[0][1-9]|[1][012]',\r\n        'h'     : options.strict ? '[1-9]|1[012]' : '0?[1-9]|1[012]',\r\n        'a'     : 'AM|PM',\r\n        'EEEE'  : $locale.DATETIME_FORMATS.DAY.join('|'),\r\n        'EEE'   : $locale.DATETIME_FORMATS.SHORTDAY.join('|'),\r\n        'dd'    : '0[1-9]|[12][0-9]|3[01]',\r\n        'd'     : options.strict ? '[1-9]|[1-2][0-9]|3[01]' : '0?[1-9]|[1-2][0-9]|3[01]',\r\n        'MMMM'  : $locale.DATETIME_FORMATS.MONTH.join('|'),\r\n        'MMM'   : $locale.DATETIME_FORMATS.SHORTMONTH.join('|'),\r\n        'MM'    : '0[1-9]|1[012]',\r\n        'M'     : options.strict ? '[1-9]|1[012]' : '0?[1-9]|1[012]',\r\n        'yyyy'  : '[1]{1}[0-9]{3}|[2]{1}[0-9]{3}',\r\n        'yy'    : '[0-9]{2}',\r\n        'y'     : options.strict ? '-?(0|[1-9][0-9]{0,3})' : '-?0*[0-9]{1,4}',\r\n      };\r\n\r\n      var setFnMap = {\r\n        'sss'   : proto.setMilliseconds,\r\n        'ss'    : proto.setSeconds,\r\n        's'     : proto.setSeconds,\r\n        'mm'    : proto.setMinutes,\r\n        'm'     : proto.setMinutes,\r\n        'HH'    : proto.setHours,\r\n        'H'     : proto.setHours,\r\n        'hh'    : proto.setHours,\r\n        'h'     : proto.setHours,\r\n        'EEEE'  : noop,\r\n        'EEE'   : noop,\r\n        'dd'    : proto.setDate,\r\n        'd'     : proto.setDate,\r\n        'a'     : function(value) { var hours = this.getHours() % 12; return this.setHours(value.match(/pm/i) ? hours + 12 : hours); },\r\n        'MMMM'  : function(value) { return this.setMonth($locale.DATETIME_FORMATS.MONTH.indexOf(value)); },\r\n        'MMM'   : function(value) { return this.setMonth($locale.DATETIME_FORMATS.SHORTMONTH.indexOf(value)); },\r\n        'MM'    : function(value) { return this.setMonth(1 * value - 1); },\r\n        'M'     : function(value) { return this.setMonth(1 * value - 1); },\r\n        'yyyy'  : proto.setFullYear,\r\n        'yy'    : function(value) { return this.setFullYear(2000 + 1 * value); },\r\n        'y'     : proto.setFullYear\r\n      };\r\n\r\n      var regex, setMap;\r\n\r\n      $dateParser.init = function() {\r\n        $dateParser.$format = $locale.DATETIME_FORMATS[options.format] || options.format;\r\n        regex = regExpForFormat($dateParser.$format);\r\n        setMap = setMapForFormat($dateParser.$format);\r\n      };\r\n\r\n      $dateParser.isValid = function(date) {\r\n        if(angular.isDate(date)) return !isNaN(date.getTime());\r\n        return regex.test(date);\r\n      };\r\n\r\n      $dateParser.parse = function(value, baseDate, format) {\r\n        if(angular.isDate(value)) value = dateFilter(value, format || $dateParser.$format);\r\n        var formatRegex = format ? regExpForFormat(format) : regex;\r\n        var formatSetMap = format ? setMapForFormat(format) : setMap;\r\n        var matches = formatRegex.exec(value);\r\n        if(!matches) return false;\r\n        var date = baseDate || new Date(0, 0, 1);\r\n        for(var i = 0; i < matches.length - 1; i++) {\r\n          formatSetMap[i] && formatSetMap[i].call(date, matches[i+1]);\r\n        }\r\n        return date;\r\n      };\r\n\r\n      // Private functions\r\n\r\n      function setMapForFormat(format) {\r\n        var keys = Object.keys(setFnMap), i;\r\n        var map = [], sortedMap = [];\r\n        // Map to setFn\r\n        var clonedFormat = format;\r\n        for(i = 0; i < keys.length; i++) {\r\n          if(format.split(keys[i]).length > 1) {\r\n            var index = clonedFormat.search(keys[i]);\r\n            format = format.split(keys[i]).join('');\r\n            if(setFnMap[keys[i]]) {\r\n              map[index] = setFnMap[keys[i]];\r\n            }\r\n          }\r\n        }\r\n        // Sort result map\r\n        angular.forEach(map, function(v) {\r\n          // conditional required since angular.forEach broke around v1.2.21\r\n          // related pr: https://github.com/angular/angular.js/pull/8525\r\n          if(v) sortedMap.push(v);\r\n        });\r\n        return sortedMap;\r\n      }\r\n\r\n      function escapeReservedSymbols(text) {\r\n        return text.replace(/\\//g, '[\\\\/]').replace('/-/g', '[-]').replace(/\\./g, '[.]').replace(/\\\\s/g, '[\\\\s]');\r\n      }\r\n\r\n      function regExpForFormat(format) {\r\n        var keys = Object.keys(regExpMap), i;\r\n\r\n        var re = format;\r\n        // Abstract replaces to avoid collisions\r\n        for(i = 0; i < keys.length; i++) {\r\n          re = re.split(keys[i]).join('${' + i + '}');\r\n        }\r\n        // Replace abstracted values\r\n        for(i = 0; i < keys.length; i++) {\r\n          re = re.split('${' + i + '}').join('(' + regExpMap[keys[i]] + ')');\r\n        }\r\n        format = escapeReservedSymbols(format);\r\n\r\n        return new RegExp('^' + re + '$', ['i']);\r\n      }\r\n\r\n      $dateParser.init();\r\n      return $dateParser;\r\n\r\n    };\r\n\r\n    return DateParserFactory;\r\n\r\n  };\r\n\r\n});\r\n","'use strict';\r\n\r\nangular.module('mgcrea.ngStrap.helpers.debounce', [])\r\n\r\n// @source jashkenas/underscore\r\n// @url https://github.com/jashkenas/underscore/blob/1.5.2/underscore.js#L693\r\n.constant('debounce', function(func, wait, immediate) {\r\n  var timeout, args, context, timestamp, result;\r\n  return function() {\r\n    context = this;\r\n    args = arguments;\r\n    timestamp = new Date();\r\n    var later = function() {\r\n      var last = (new Date()) - timestamp;\r\n      if (last < wait) {\r\n        timeout = setTimeout(later, wait - last);\r\n      } else {\r\n        timeout = null;\r\n        if (!immediate) result = func.apply(context, args);\r\n      }\r\n    };\r\n    var callNow = immediate && !timeout;\r\n    if (!timeout) {\r\n      timeout = setTimeout(later, wait);\r\n    }\r\n    if (callNow) result = func.apply(context, args);\r\n    return result;\r\n  };\r\n})\r\n\r\n\r\n// @source jashkenas/underscore\r\n// @url https://github.com/jashkenas/underscore/blob/1.5.2/underscore.js#L661\r\n.constant('throttle', function(func, wait, options) {\r\n  var context, args, result;\r\n  var timeout = null;\r\n  var previous = 0;\r\n  options || (options = {});\r\n  var later = function() {\r\n    previous = options.leading === false ? 0 : new Date();\r\n    timeout = null;\r\n    result = func.apply(context, args);\r\n  };\r\n  return function() {\r\n    var now = new Date();\r\n    if (!previous && options.leading === false) previous = now;\r\n    var remaining = wait - (now - previous);\r\n    context = this;\r\n    args = arguments;\r\n    if (remaining <= 0) {\r\n      clearTimeout(timeout);\r\n      timeout = null;\r\n      previous = now;\r\n      result = func.apply(context, args);\r\n    } else if (!timeout && options.trailing !== false) {\r\n      timeout = setTimeout(later, remaining);\r\n    }\r\n    return result;\r\n  };\r\n});\r\n\r\n","'use strict';\r\n\r\nangular.module('mgcrea.ngStrap.helpers.dimensions', [])\r\n\r\n  .factory('dimensions', function($document, $window) {\r\n\r\n    var jqLite = angular.element;\r\n    var fn = {};\r\n\r\n    /**\r\n     * Test the element nodeName\r\n     * @param element\r\n     * @param name\r\n     */\r\n    var nodeName = fn.nodeName = function(element, name) {\r\n      return element.nodeName && element.nodeName.toLowerCase() === name.toLowerCase();\r\n    };\r\n\r\n    /**\r\n     * Returns the element computed style\r\n     * @param element\r\n     * @param prop\r\n     * @param extra\r\n     */\r\n    fn.css = function(element, prop, extra) {\r\n      var value;\r\n      if (element.currentStyle) { //IE\r\n        value = element.currentStyle[prop];\r\n      } else if (window.getComputedStyle) {\r\n        value = window.getComputedStyle(element)[prop];\r\n      } else {\r\n        value = element.style[prop];\r\n      }\r\n      return extra === true ? parseFloat(value) || 0 : value;\r\n    };\r\n\r\n    /**\r\n     * Provides read-only equivalent of jQuery's offset function:\r\n     * @required-by bootstrap-tooltip, bootstrap-affix\r\n     * @url http://api.jquery.com/offset/\r\n     * @param element\r\n     */\r\n    fn.offset = function(element) {\r\n      var boxRect = element.getBoundingClientRect();\r\n      var docElement = element.ownerDocument;\r\n      return {\r\n        width: boxRect.width || element.offsetWidth,\r\n        height: boxRect.height || element.offsetHeight,\r\n        top: boxRect.top + (window.pageYOffset || docElement.documentElement.scrollTop) - (docElement.documentElement.clientTop || 0),\r\n        left: boxRect.left + (window.pageXOffset || docElement.documentElement.scrollLeft) - (docElement.documentElement.clientLeft || 0)\r\n      };\r\n    };\r\n\r\n    /**\r\n     * Provides read-only equivalent of jQuery's position function\r\n     * @required-by bootstrap-tooltip, bootstrap-affix\r\n     * @url http://api.jquery.com/offset/\r\n     * @param element\r\n     */\r\n    fn.position = function(element) {\r\n\r\n      var offsetParentRect = {top: 0, left: 0},\r\n          offsetParentElement,\r\n          offset;\r\n\r\n      // Fixed elements are offset from window (parentOffset = {top:0, left: 0}, because it is it's only offset parent\r\n      if (fn.css(element, 'position') === 'fixed') {\r\n\r\n        // We assume that getBoundingClientRect is available when computed position is fixed\r\n        offset = element.getBoundingClientRect();\r\n\r\n      } else {\r\n\r\n        // Get *real* offsetParentElement\r\n        offsetParentElement = offsetParent(element);\r\n        offset = fn.offset(element);\r\n\r\n        // Get correct offsets\r\n        offset = fn.offset(element);\r\n        if (!nodeName(offsetParentElement, 'html')) {\r\n          offsetParentRect = fn.offset(offsetParentElement);\r\n        }\r\n\r\n        // Add offsetParent borders\r\n        offsetParentRect.top += fn.css(offsetParentElement, 'borderTopWidth', true);\r\n        offsetParentRect.left += fn.css(offsetParentElement, 'borderLeftWidth', true);\r\n      }\r\n\r\n      // Subtract parent offsets and element margins\r\n      return {\r\n        width: element.offsetWidth,\r\n        height: element.offsetHeight,\r\n        top: offset.top - offsetParentRect.top - fn.css(element, 'marginTop', true),\r\n        left: offset.left - offsetParentRect.left - fn.css(element, 'marginLeft', true)\r\n      };\r\n\r\n    };\r\n\r\n    /**\r\n     * Returns the closest, non-statically positioned offsetParent of a given element\r\n     * @required-by fn.position\r\n     * @param element\r\n     */\r\n    var offsetParent = function offsetParentElement(element) {\r\n      var docElement = element.ownerDocument;\r\n      var offsetParent = element.offsetParent || docElement;\r\n      if(nodeName(offsetParent, '#document')) return docElement.documentElement;\r\n      while(offsetParent && !nodeName(offsetParent, 'html') && fn.css(offsetParent, 'position') === 'static') {\r\n        offsetParent = offsetParent.offsetParent;\r\n      }\r\n      return offsetParent || docElement.documentElement;\r\n    };\r\n\r\n    /**\r\n     * Provides equivalent of jQuery's height function\r\n     * @required-by bootstrap-affix\r\n     * @url http://api.jquery.com/height/\r\n     * @param element\r\n     * @param outer\r\n     */\r\n    fn.height = function(element, outer) {\r\n      var value = element.offsetHeight;\r\n      if(outer) {\r\n        value += fn.css(element, 'marginTop', true) + fn.css(element, 'marginBottom', true);\r\n      } else {\r\n        value -= fn.css(element, 'paddingTop', true) + fn.css(element, 'paddingBottom', true) + fn.css(element, 'borderTopWidth', true) + fn.css(element, 'borderBottomWidth', true);\r\n      }\r\n      return value;\r\n    };\r\n\r\n    /**\r\n     * Provides equivalent of jQuery's width function\r\n     * @required-by bootstrap-affix\r\n     * @url http://api.jquery.com/width/\r\n     * @param element\r\n     * @param outer\r\n     */\r\n    fn.width = function(element, outer) {\r\n      var value = element.offsetWidth;\r\n      if(outer) {\r\n        value += fn.css(element, 'marginLeft', true) + fn.css(element, 'marginRight', true);\r\n      } else {\r\n        value -= fn.css(element, 'paddingLeft', true) + fn.css(element, 'paddingRight', true) + fn.css(element, 'borderLeftWidth', true) + fn.css(element, 'borderRightWidth', true);\r\n      }\r\n      return value;\r\n    };\r\n\r\n    return fn;\r\n\r\n  });\r\n","'use strict';\r\n\r\nangular.module('mgcrea.ngStrap.helpers.parseOptions', [])\r\n\r\n  .provider('$parseOptions', function() {\r\n\r\n    var defaults = this.defaults = {\r\n      regexp: /^\\s*(.*?)(?:\\s+as\\s+(.*?))?(?:\\s+group\\s+by\\s+(.*))?\\s+for\\s+(?:([\\$\\w][\\$\\w]*)|(?:\\(\\s*([\\$\\w][\\$\\w]*)\\s*,\\s*([\\$\\w][\\$\\w]*)\\s*\\)))\\s+in\\s+(.*?)(?:\\s+track\\s+by\\s+(.*?))?$/\r\n    };\r\n\r\n    this.$get = function($parse, $q) {\r\n\r\n      function ParseOptionsFactory(attr, config) {\r\n\r\n        var $parseOptions = {};\r\n\r\n        // Common vars\r\n        var options = angular.extend({}, defaults, config);\r\n        $parseOptions.$values = [];\r\n\r\n        // Private vars\r\n        var match, displayFn, valueName, keyName, groupByFn, valueFn, valuesFn;\r\n\r\n        $parseOptions.init = function() {\r\n          $parseOptions.$match = match = attr.match(options.regexp);\r\n          displayFn = $parse(match[2] || match[1]),\r\n          valueName = match[4] || match[6],\r\n          keyName = match[5],\r\n          groupByFn = $parse(match[3] || ''),\r\n          valueFn = $parse(match[2] ? match[1] : valueName),\r\n          valuesFn = $parse(match[7]);\r\n        };\r\n\r\n        $parseOptions.valuesFn = function(scope, controller) {\r\n          return $q.when(valuesFn(scope, controller))\r\n          .then(function(values) {\r\n            $parseOptions.$values = values ? parseValues(values, scope) : {};\r\n            return $parseOptions.$values;\r\n          });\r\n        };\r\n\r\n        // Private functions\r\n\r\n        function parseValues(values, scope) {\r\n          return values.map(function(match, index) {\r\n            var locals = {}, label, value;\r\n            locals[valueName] = match;\r\n            label = displayFn(scope, locals);\r\n            value = valueFn(scope, locals) || index;\r\n            return {label: label, value: value};\r\n          });\r\n        }\r\n\r\n        $parseOptions.init();\r\n        return $parseOptions;\r\n\r\n      }\r\n\r\n      return ParseOptionsFactory;\r\n\r\n    };\r\n\r\n  });\r\n","'use strict';\r\n\r\n(angular.version.minor < 3 && angular.version.dot < 14) && angular.module('ng')\r\n\r\n.factory('$$rAF', function($window, $timeout) {\r\n\r\n  var requestAnimationFrame = $window.requestAnimationFrame ||\r\n                              $window.webkitRequestAnimationFrame ||\r\n                              $window.mozRequestAnimationFrame;\r\n\r\n  var cancelAnimationFrame = $window.cancelAnimationFrame ||\r\n                             $window.webkitCancelAnimationFrame ||\r\n                             $window.mozCancelAnimationFrame ||\r\n                             $window.webkitCancelRequestAnimationFrame;\r\n\r\n  var rafSupported = !!requestAnimationFrame;\r\n  var raf = rafSupported ?\r\n    function(fn) {\r\n      var id = requestAnimationFrame(fn);\r\n      return function() {\r\n        cancelAnimationFrame(id);\r\n      };\r\n    } :\r\n    function(fn) {\r\n      var timer = $timeout(fn, 16.66, false); // 1000 / 60 = 16.666\r\n      return function() {\r\n        $timeout.cancel(timer);\r\n      };\r\n    };\r\n\r\n  raf.supported = rafSupported;\r\n\r\n  return raf;\r\n\r\n});\r\n\r\n// .factory('$$animateReflow', function($$rAF, $document) {\r\n\r\n//   var bodyEl = $document[0].body;\r\n\r\n//   return function(fn) {\r\n//     //the returned function acts as the cancellation function\r\n//     return $$rAF(function() {\r\n//       //the line below will force the browser to perform a repaint\r\n//       //so that all the animated elements within the animation frame\r\n//       //will be properly updated and drawn on screen. This is\r\n//       //required to perform multi-class CSS based animations with\r\n//       //Firefox. DO NOT REMOVE THIS LINE.\r\n//       var a = bodyEl.offsetWidth + 1;\r\n//       fn();\r\n//     });\r\n//   };\r\n\r\n// });\r\n","'use strict';\r\n\r\nangular.module('mgcrea.ngStrap.modal', ['mgcrea.ngStrap.helpers.dimensions'])\r\n\r\n  .provider('$modal', function() {\r\n\r\n    var defaults = this.defaults = {\r\n      animation: 'am-fade',\r\n      backdropAnimation: 'am-fade',\r\n      prefixClass: 'modal',\r\n      prefixEvent: 'modal',\r\n      placement: 'top',\r\n      template: 'modal/modal.tpl.html',\r\n      contentTemplate: false,\r\n      container: false,\r\n      element: null,\r\n      backdrop: true,\r\n      keyboard: true,\r\n      html: false,\r\n      show: true\r\n    };\r\n\r\n    this.$get = function($window, $rootScope, $compile, $q, $templateCache, $http, $animate, $timeout, $sce, dimensions) {\r\n\r\n      var forEach = angular.forEach;\r\n      var trim = String.prototype.trim;\r\n      var requestAnimationFrame = $window.requestAnimationFrame || $window.setTimeout;\r\n      var bodyElement = angular.element($window.document.body);\r\n      var htmlReplaceRegExp = /ng-bind=\"/ig;\r\n\r\n      function ModalFactory(config) {\r\n\r\n        var $modal = {};\r\n\r\n        // Common vars\r\n        var options = $modal.$options = angular.extend({}, defaults, config);\r\n        $modal.$promise = fetchTemplate(options.template);\r\n        var scope = $modal.$scope = options.scope && options.scope.$new() || $rootScope.$new();\r\n        if(!options.element && !options.container) {\r\n          options.container = 'body';\r\n        }\r\n\r\n        // Support scope as string options\r\n        forEach(['title', 'content'], function(key) {\r\n          if(options[key]) scope[key] = $sce.trustAsHtml(options[key]);\r\n        });\r\n\r\n        // Provide scope helpers\r\n        scope.$hide = function() {\r\n          scope.$$postDigest(function() {\r\n            $modal.hide();\r\n          });\r\n        };\r\n        scope.$show = function() {\r\n          scope.$$postDigest(function() {\r\n            $modal.show();\r\n          });\r\n        };\r\n        scope.$toggle = function() {\r\n          scope.$$postDigest(function() {\r\n            $modal.toggle();\r\n          });\r\n        };\r\n\r\n        // Support contentTemplate option\r\n        if(options.contentTemplate) {\r\n          $modal.$promise = $modal.$promise.then(function(template) {\r\n            var templateEl = angular.element(template);\r\n            return fetchTemplate(options.contentTemplate)\r\n            .then(function(contentTemplate) {\r\n              var contentEl = findElement('[ng-bind=\"content\"]', templateEl[0]).removeAttr('ng-bind').html(contentTemplate);\r\n              // Drop the default footer as you probably don't want it if you use a custom contentTemplate\r\n              if(!config.template) contentEl.next().remove();\r\n              return templateEl[0].outerHTML;\r\n            });\r\n          });\r\n        }\r\n\r\n        // Fetch, compile then initialize modal\r\n        var modalLinker, modalElement;\r\n        var backdropElement = angular.element('<div class=\"' + options.prefixClass + '-backdrop\"/>');\r\n        $modal.$promise.then(function(template) {\r\n          if(angular.isObject(template)) template = template.data;\r\n          if(options.html) template = template.replace(htmlReplaceRegExp, 'ng-bind-html=\"');\r\n          template = trim.apply(template);\r\n          modalLinker = $compile(template);\r\n          $modal.init();\r\n        });\r\n\r\n        $modal.init = function() {\r\n\r\n          // Options: show\r\n          if(options.show) {\r\n            scope.$$postDigest(function() {\r\n              $modal.show();\r\n            });\r\n          }\r\n\r\n        };\r\n\r\n        $modal.destroy = function() {\r\n\r\n          // Remove element\r\n          if(modalElement) {\r\n            modalElement.remove();\r\n            modalElement = null;\r\n          }\r\n          if(backdropElement) {\r\n            backdropElement.remove();\r\n            backdropElement = null;\r\n          }\r\n\r\n          // Destroy scope\r\n          scope.$destroy();\r\n\r\n        };\r\n\r\n        $modal.show = function() {\r\n\r\n          if(scope.$emit(options.prefixEvent + '.show.before', $modal).defaultPrevented) {\r\n            return;\r\n          }\r\n          var parent;\r\n          if(angular.isElement(options.container)) {\r\n            parent = options.container;\r\n          } else {\r\n            parent = options.container ? findElement(options.container) : null;\r\n          }\r\n          var after = options.container ? null : options.element;\r\n\r\n          // Fetch a cloned element linked from template\r\n          modalElement = $modal.$element = modalLinker(scope, function(clonedElement, scope) {});\r\n\r\n          // Set the initial positioning.\r\n          modalElement.css({display: 'block'}).addClass(options.placement);\r\n\r\n          // Options: animation\r\n          if(options.animation) {\r\n            if(options.backdrop) {\r\n              backdropElement.addClass(options.backdropAnimation);\r\n            }\r\n            modalElement.addClass(options.animation);\r\n          }\r\n\r\n          if(options.backdrop) {\r\n            $animate.enter(backdropElement, bodyElement, null);\r\n          }\r\n          // Support v1.3+ $animate\r\n          // https://github.com/angular/angular.js/commit/bf0f5502b1bbfddc5cdd2f138efd9188b8c652a9\r\n          var promise = $animate.enter(modalElement, parent, after, enterAnimateCallback);\r\n          if(promise && promise.then) promise.then(enterAnimateCallback);\r\n\r\n          scope.$isShown = true;\r\n          scope.$$phase || (scope.$root && scope.$root.$$phase) || scope.$digest();\r\n          // Focus once the enter-animation has started\r\n          // Weird PhantomJS bug hack\r\n          var el = modalElement[0];\r\n          requestAnimationFrame(function() {\r\n            el.focus();\r\n          });\r\n\r\n          bodyElement.addClass(options.prefixClass + '-open');\r\n          if(options.animation) {\r\n            bodyElement.addClass(options.prefixClass + '-with-' + options.animation);\r\n          }\r\n\r\n          // Bind events\r\n          if(options.backdrop) {\r\n            modalElement.on('click', hideOnBackdropClick);\r\n            backdropElement.on('click', hideOnBackdropClick);\r\n          }\r\n          if(options.keyboard) {\r\n            modalElement.on('keyup', $modal.$onKeyUp);\r\n          }\r\n        };\r\n\r\n        function enterAnimateCallback() {\r\n          scope.$emit(options.prefixEvent + '.show', $modal);\r\n        }\r\n\r\n        $modal.hide = function() {\r\n\r\n          if(scope.$emit(options.prefixEvent + '.hide.before', $modal).defaultPrevented) {\r\n            return;\r\n          }\r\n          var promise = $animate.leave(modalElement, leaveAnimateCallback);\r\n          // Support v1.3+ $animate\r\n          // https://github.com/angular/angular.js/commit/bf0f5502b1bbfddc5cdd2f138efd9188b8c652a9\r\n          if(promise && promise.then) promise.then(leaveAnimateCallback);\r\n\r\n          if(options.backdrop) {\r\n            $animate.leave(backdropElement);\r\n          }\r\n          scope.$isShown = false;\r\n          scope.$$phase || (scope.$root && scope.$root.$$phase) || scope.$digest();\r\n\r\n          // Unbind events\r\n          if(options.backdrop) {\r\n            modalElement.off('click', hideOnBackdropClick);\r\n            backdropElement.off('click', hideOnBackdropClick);\r\n          }\r\n          if(options.keyboard) {\r\n            modalElement.off('keyup', $modal.$onKeyUp);\r\n          }\r\n        };\r\n\r\n        function leaveAnimateCallback() {\r\n          scope.$emit(options.prefixEvent + '.hide', $modal);\r\n          bodyElement.removeClass(options.prefixClass + '-open');\r\n          if(options.animation) {\r\n            bodyElement.removeClass(options.prefixClass + '-with-' + options.animation);\r\n          }\r\n        }\r\n\r\n        $modal.toggle = function() {\r\n\r\n          scope.$isShown ? $modal.hide() : $modal.show();\r\n\r\n        };\r\n\r\n        $modal.focus = function() {\r\n          modalElement[0].focus();\r\n        };\r\n\r\n        // Protected methods\r\n\r\n        $modal.$onKeyUp = function(evt) {\r\n\r\n          if (evt.which === 27 && scope.$isShown) {\r\n            $modal.hide();\r\n            evt.stopPropagation();\r\n          }\r\n\r\n        };\r\n\r\n        // Private methods\r\n\r\n        function hideOnBackdropClick(evt) {\r\n          if(evt.target !== evt.currentTarget) return;\r\n          options.backdrop === 'static' ? $modal.focus() : $modal.hide();\r\n        }\r\n\r\n        return $modal;\r\n\r\n      }\r\n\r\n      // Helper functions\r\n\r\n      function findElement(query, element) {\r\n        return angular.element((element || document).querySelectorAll(query));\r\n      }\r\n\r\n      function fetchTemplate(template) {\r\n        return $q.when($templateCache.get(template) || $http.get(template))\r\n        .then(function(res) {\r\n          if(angular.isObject(res)) {\r\n            $templateCache.put(template, res.data);\r\n            return res.data;\r\n          }\r\n          return res;\r\n        });\r\n      }\r\n\r\n      return ModalFactory;\r\n\r\n    };\r\n\r\n  })\r\n\r\n  .directive('bsModal', function($window, $sce, $modal) {\r\n\r\n    return {\r\n      restrict: 'EAC',\r\n      scope: true,\r\n      link: function postLink(scope, element, attr, transclusion) {\r\n\r\n        // Directive options\r\n        var options = {scope: scope, element: element, show: false};\r\n        angular.forEach(['template', 'contentTemplate', 'placement', 'backdrop', 'keyboard', 'html', 'container', 'animation'], function(key) {\r\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\r\n        });\r\n\r\n        // Support scope as data-attrs\r\n        angular.forEach(['title', 'content'], function(key) {\r\n          attr[key] && attr.$observe(key, function(newValue, oldValue) {\r\n            scope[key] = $sce.trustAsHtml(newValue);\r\n          });\r\n        });\r\n\r\n        // Support scope as an object\r\n        attr.bsModal && scope.$watch(attr.bsModal, function(newValue, oldValue) {\r\n          if(angular.isObject(newValue)) {\r\n            angular.extend(scope, newValue);\r\n          } else {\r\n            scope.content = newValue;\r\n          }\r\n        }, true);\r\n\r\n        // Initialize modal\r\n        var modal = $modal(options);\r\n\r\n        // Trigger\r\n        element.on(attr.trigger || 'click', modal.toggle);\r\n\r\n        // Garbage collection\r\n        scope.$on('$destroy', function() {\r\n          if (modal) modal.destroy();\r\n          options = null;\r\n          modal = null;\r\n        });\r\n\r\n      }\r\n    };\r\n\r\n  });\r\n","'use strict';\r\n\r\nangular.module('mgcrea.ngStrap.navbar', [])\r\n\r\n  .provider('$navbar', function() {\r\n\r\n    var defaults = this.defaults = {\r\n      activeClass: 'active',\r\n      routeAttr: 'data-match-route',\r\n      strict: false\r\n    };\r\n\r\n    this.$get = function() {\r\n      return {defaults: defaults};\r\n    };\r\n\r\n  })\r\n\r\n  .directive('bsNavbar', function($window, $location, $navbar) {\r\n\r\n    var defaults = $navbar.defaults;\r\n\r\n    return {\r\n      restrict: 'A',\r\n      link: function postLink(scope, element, attr, controller) {\r\n\r\n        // Directive options\r\n        var options = angular.copy(defaults);\r\n        angular.forEach(Object.keys(defaults), function(key) {\r\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\r\n        });\r\n\r\n        // Watch for the $location\r\n        scope.$watch(function() {\r\n\r\n          return $location.path();\r\n\r\n        }, function(newValue, oldValue) {\r\n\r\n          var liElements = element[0].querySelectorAll('li[' + options.routeAttr + ']');\r\n\r\n          angular.forEach(liElements, function(li) {\r\n\r\n            var liElement = angular.element(li);\r\n            var pattern = liElement.attr(options.routeAttr).replace('/', '\\\\/');\r\n            if(options.strict) {\r\n              pattern = '^' + pattern + '$';\r\n            }\r\n            var regexp = new RegExp(pattern, ['i']);\r\n\r\n            if(regexp.test(newValue)) {\r\n              liElement.addClass(options.activeClass);\r\n            } else {\r\n              liElement.removeClass(options.activeClass);\r\n            }\r\n\r\n          });\r\n\r\n        });\r\n\r\n      }\r\n\r\n    };\r\n\r\n  });\r\n","'use strict';\r\n\r\nangular.module('mgcrea.ngStrap.popover', ['mgcrea.ngStrap.tooltip'])\r\n\r\n  .provider('$popover', function() {\r\n\r\n    var defaults = this.defaults = {\r\n      animation: 'am-fade',\r\n      customClass: '',\r\n      container: false,\r\n      target: false,\r\n      placement: 'right',\r\n      template: 'popover/popover.tpl.html',\r\n      contentTemplate: false,\r\n      trigger: 'click',\r\n      keyboard: true,\r\n      html: false,\r\n      title: '',\r\n      content: '',\r\n      delay: 0\r\n    };\r\n\r\n    this.$get = function($tooltip) {\r\n\r\n      function PopoverFactory(element, config) {\r\n\r\n        // Common vars\r\n        var options = angular.extend({}, defaults, config);\r\n\r\n        var $popover = $tooltip(element, options);\r\n\r\n        // Support scope as string options [/*title, */content]\r\n        if(options.content) {\r\n          $popover.$scope.content = options.content;\r\n        }\r\n\r\n        return $popover;\r\n\r\n      }\r\n\r\n      return PopoverFactory;\r\n\r\n    };\r\n\r\n  })\r\n\r\n  .directive('bsPopover', function($window, $sce, $popover) {\r\n\r\n    var requestAnimationFrame = $window.requestAnimationFrame || $window.setTimeout;\r\n\r\n    return {\r\n      restrict: 'EAC',\r\n      scope: true,\r\n      link: function postLink(scope, element, attr) {\r\n\r\n        // Directive options\r\n        var options = {scope: scope};\r\n        angular.forEach(['template', 'contentTemplate', 'placement', 'container', 'target', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'customClass'], function(key) {\r\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\r\n        });\r\n\r\n        // Support scope as data-attrs\r\n        angular.forEach(['title', 'content'], function(key) {\r\n          attr[key] && attr.$observe(key, function(newValue, oldValue) {\r\n            scope[key] = $sce.trustAsHtml(newValue);\r\n            angular.isDefined(oldValue) && requestAnimationFrame(function() {\r\n              popover && popover.$applyPlacement();\r\n            });\r\n          });\r\n        });\r\n\r\n        // Support scope as an object\r\n        attr.bsPopover && scope.$watch(attr.bsPopover, function(newValue, oldValue) {\r\n          if(angular.isObject(newValue)) {\r\n            angular.extend(scope, newValue);\r\n          } else {\r\n            scope.content = newValue;\r\n          }\r\n          angular.isDefined(oldValue) && requestAnimationFrame(function() {\r\n            popover && popover.$applyPlacement();\r\n          });\r\n        }, true);\r\n\r\n        // Visibility binding support\r\n        attr.bsShow && scope.$watch(attr.bsShow, function(newValue, oldValue) {\r\n          if(!popover || !angular.isDefined(newValue)) return;\r\n          if(angular.isString(newValue)) newValue = !!newValue.match(',?(popover),?');\r\n          newValue === true ? popover.show() : popover.hide();\r\n        });\r\n\r\n        // Initialize popover\r\n        var popover = $popover(element, options);\r\n\r\n        // Garbage collection\r\n        scope.$on('$destroy', function() {\r\n          if (popover) popover.destroy();\r\n          options = null;\r\n          popover = null;\r\n        });\r\n\r\n      }\r\n    };\r\n\r\n  });\r\n","'use strict';\r\n\r\nangular.module('mgcrea.ngStrap.scrollspy', ['mgcrea.ngStrap.helpers.debounce', 'mgcrea.ngStrap.helpers.dimensions'])\r\n\r\n  .provider('$scrollspy', function() {\r\n\r\n    // Pool of registered spies\r\n    var spies = this.$$spies = {};\r\n\r\n    var defaults = this.defaults = {\r\n      debounce: 150,\r\n      throttle: 100,\r\n      offset: 100\r\n    };\r\n\r\n    this.$get = function($window, $document, $rootScope, dimensions, debounce, throttle) {\r\n\r\n      var windowEl = angular.element($window);\r\n      var docEl = angular.element($document.prop('documentElement'));\r\n      var bodyEl = angular.element($window.document.body);\r\n\r\n      // Helper functions\r\n\r\n      function nodeName(element, name) {\r\n        return element[0].nodeName && element[0].nodeName.toLowerCase() === name.toLowerCase();\r\n      }\r\n\r\n      function ScrollSpyFactory(config) {\r\n\r\n        // Common vars\r\n        var options = angular.extend({}, defaults, config);\r\n        if(!options.element) options.element = bodyEl;\r\n        var isWindowSpy = nodeName(options.element, 'body');\r\n        var scrollEl = isWindowSpy ? windowEl : options.element;\r\n        var scrollId = isWindowSpy ? 'window' : options.id;\r\n\r\n        // Use existing spy\r\n        if(spies[scrollId]) {\r\n          spies[scrollId].$$count++;\r\n          return spies[scrollId];\r\n        }\r\n\r\n        var $scrollspy = {};\r\n\r\n        // Private vars\r\n        var unbindViewContentLoaded, unbindIncludeContentLoaded;\r\n        var trackedElements = $scrollspy.$trackedElements = [];\r\n        var sortedElements = [];\r\n        var activeTarget;\r\n        var debouncedCheckPosition;\r\n        var throttledCheckPosition;\r\n        var debouncedCheckOffsets;\r\n        var viewportHeight;\r\n        var scrollTop;\r\n\r\n        $scrollspy.init = function() {\r\n\r\n          // Setup internal ref counter\r\n          this.$$count = 1;\r\n\r\n          // Bind events\r\n          debouncedCheckPosition = debounce(this.checkPosition, options.debounce);\r\n          throttledCheckPosition = throttle(this.checkPosition, options.throttle);\r\n          scrollEl.on('click', this.checkPositionWithEventLoop);\r\n          windowEl.on('resize', debouncedCheckPosition);\r\n          scrollEl.on('scroll', throttledCheckPosition);\r\n\r\n          debouncedCheckOffsets = debounce(this.checkOffsets, options.debounce);\r\n          unbindViewContentLoaded = $rootScope.$on('$viewContentLoaded', debouncedCheckOffsets);\r\n          unbindIncludeContentLoaded = $rootScope.$on('$includeContentLoaded', debouncedCheckOffsets);\r\n          debouncedCheckOffsets();\r\n\r\n          // Register spy for reuse\r\n          if(scrollId) {\r\n            spies[scrollId] = $scrollspy;\r\n          }\r\n\r\n        };\r\n\r\n        $scrollspy.destroy = function() {\r\n\r\n          // Check internal ref counter\r\n          this.$$count--;\r\n          if(this.$$count > 0) {\r\n            return;\r\n          }\r\n\r\n          // Unbind events\r\n          scrollEl.off('click', this.checkPositionWithEventLoop);\r\n          windowEl.off('resize', debouncedCheckPosition);\r\n          scrollEl.off('scroll', debouncedCheckPosition);\r\n          unbindViewContentLoaded();\r\n          unbindIncludeContentLoaded();\r\n          if (scrollId) {\r\n            delete spies[scrollId];\r\n          }\r\n        };\r\n\r\n        $scrollspy.checkPosition = function() {\r\n\r\n          // Not ready yet\r\n          if(!sortedElements.length) return;\r\n\r\n          // Calculate the scroll position\r\n          scrollTop = (isWindowSpy ? $window.pageYOffset : scrollEl.prop('scrollTop')) || 0;\r\n\r\n          // Calculate the viewport height for use by the components\r\n          viewportHeight = Math.max($window.innerHeight, docEl.prop('clientHeight'));\r\n\r\n          // Activate first element if scroll is smaller\r\n          if(scrollTop < sortedElements[0].offsetTop && activeTarget !== sortedElements[0].target) {\r\n            return $scrollspy.$activateElement(sortedElements[0]);\r\n          }\r\n\r\n          // Activate proper element\r\n          for (var i = sortedElements.length; i--;) {\r\n            if(angular.isUndefined(sortedElements[i].offsetTop) || sortedElements[i].offsetTop === null) continue;\r\n            if(activeTarget === sortedElements[i].target) continue;\r\n            if(scrollTop < sortedElements[i].offsetTop) continue;\r\n            if(sortedElements[i + 1] && scrollTop > sortedElements[i + 1].offsetTop) continue;\r\n            return $scrollspy.$activateElement(sortedElements[i]);\r\n          }\r\n\r\n        };\r\n\r\n        $scrollspy.checkPositionWithEventLoop = function() {\r\n          setTimeout(this.checkPosition, 1);\r\n        };\r\n\r\n        // Protected methods\r\n\r\n        $scrollspy.$activateElement = function(element) {\r\n          if(activeTarget) {\r\n            var activeElement = $scrollspy.$getTrackedElement(activeTarget);\r\n            if(activeElement) {\r\n              activeElement.source.removeClass('active');\r\n              if(nodeName(activeElement.source, 'li') && nodeName(activeElement.source.parent().parent(), 'li')) {\r\n                activeElement.source.parent().parent().removeClass('active');\r\n              }\r\n            }\r\n          }\r\n          activeTarget = element.target;\r\n          element.source.addClass('active');\r\n          if(nodeName(element.source, 'li') && nodeName(element.source.parent().parent(), 'li')) {\r\n            element.source.parent().parent().addClass('active');\r\n          }\r\n        };\r\n\r\n        $scrollspy.$getTrackedElement = function(target) {\r\n          return trackedElements.filter(function(obj) {\r\n            return obj.target === target;\r\n          })[0];\r\n        };\r\n\r\n        // Track offsets behavior\r\n\r\n        $scrollspy.checkOffsets = function() {\r\n\r\n          angular.forEach(trackedElements, function(trackedElement) {\r\n            var targetElement = document.querySelector(trackedElement.target);\r\n            trackedElement.offsetTop = targetElement ? dimensions.offset(targetElement).top : null;\r\n            if(options.offset && trackedElement.offsetTop !== null) trackedElement.offsetTop -= options.offset * 1;\r\n          });\r\n\r\n          sortedElements = trackedElements\r\n          .filter(function(el) {\r\n            return el.offsetTop !== null;\r\n          })\r\n          .sort(function(a, b) {\r\n            return a.offsetTop - b.offsetTop;\r\n          });\r\n\r\n          debouncedCheckPosition();\r\n\r\n        };\r\n\r\n        $scrollspy.trackElement = function(target, source) {\r\n          trackedElements.push({target: target, source: source});\r\n        };\r\n\r\n        $scrollspy.untrackElement = function(target, source) {\r\n          var toDelete;\r\n          for (var i = trackedElements.length; i--;) {\r\n            if(trackedElements[i].target === target && trackedElements[i].source === source) {\r\n              toDelete = i;\r\n              break;\r\n            }\r\n          }\r\n          trackedElements = trackedElements.splice(toDelete, 1);\r\n        };\r\n\r\n        $scrollspy.activate = function(i) {\r\n          trackedElements[i].addClass('active');\r\n        };\r\n\r\n        // Initialize plugin\r\n\r\n        $scrollspy.init();\r\n        return $scrollspy;\r\n\r\n      }\r\n\r\n      return ScrollSpyFactory;\r\n\r\n    };\r\n\r\n  })\r\n\r\n  .directive('bsScrollspy', function($rootScope, debounce, dimensions, $scrollspy) {\r\n\r\n    return {\r\n      restrict: 'EAC',\r\n      link: function postLink(scope, element, attr) {\r\n\r\n        var options = {scope: scope};\r\n        angular.forEach(['offset', 'target'], function(key) {\r\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\r\n        });\r\n\r\n        var scrollspy = $scrollspy(options);\r\n        scrollspy.trackElement(options.target, element);\r\n\r\n        scope.$on('$destroy', function() {\r\n          if (scrollspy) {\r\n            scrollspy.untrackElement(options.target, element);\r\n            scrollspy.destroy();\r\n          }\r\n          options = null;\r\n          scrollspy = null;\r\n        });\r\n\r\n      }\r\n    };\r\n\r\n  })\r\n\r\n\r\n  .directive('bsScrollspyList', function($rootScope, debounce, dimensions, $scrollspy) {\r\n\r\n    return {\r\n      restrict: 'A',\r\n      compile: function postLink(element, attr) {\r\n        var children = element[0].querySelectorAll('li > a[href]');\r\n        angular.forEach(children, function(child) {\r\n          var childEl = angular.element(child);\r\n          childEl.parent().attr('bs-scrollspy', '').attr('data-target', childEl.attr('href'));\r\n        });\r\n      }\r\n\r\n    };\r\n\r\n  });\r\n","'use strict';\r\n\r\nangular.module('mgcrea.ngStrap.select', ['mgcrea.ngStrap.tooltip', 'mgcrea.ngStrap.helpers.parseOptions'])\r\n\r\n  .provider('$select', function() {\r\n\r\n    var defaults = this.defaults = {\r\n      animation: 'am-fade',\r\n      prefixClass: 'select',\r\n      prefixEvent: '$select',\r\n      placement: 'bottom-left',\r\n      template: 'select/select.tpl.html',\r\n      trigger: 'focus',\r\n      container: false,\r\n      keyboard: true,\r\n      html: false,\r\n      delay: 0,\r\n      multiple: false,\r\n      allNoneButtons: false,\r\n      sort: true,\r\n      caretHtml: '&nbsp;<span class=\"caret\"></span>',\r\n      placeholder: 'Choose among the following...',\r\n      maxLength: 3,\r\n      maxLengthHtml: 'selected',\r\n      iconCheckmark: 'glyphicon glyphicon-ok',\r\n      reloadEvents: []\r\n    };\r\n    \r\n    this.$get = function($window, $document, $rootScope, $tooltip) {\r\n\r\n      var bodyEl = angular.element($window.document.body);\r\n      var isNative = /(ip(a|o)d|iphone|android)/ig.test($window.navigator.userAgent);\r\n      var isTouch = ('createTouch' in $window.document) && isNative;\r\n\r\n      function SelectFactory(element, controller, config) {\r\n\r\n        var $select = {};\r\n\r\n        // Common vars\r\n        var options = angular.extend({}, defaults, config);\r\n\r\n        $select = $tooltip(element, options);\r\n        var scope = $select.$scope;\r\n\r\n        scope.$matches = [];\r\n        scope.$activeIndex = 0;\r\n        scope.$isMultiple = options.multiple;\r\n        scope.$showAllNoneButtons = options.allNoneButtons && options.multiple;\r\n        scope.$iconCheckmark = options.iconCheckmark;\r\n\r\n        scope.$activate = function(index) {\r\n          scope.$$postDigest(function() {\r\n            $select.activate(index);\r\n          });\r\n        };\r\n\r\n        scope.$select = function(index, evt) {\r\n          scope.$$postDigest(function() {\r\n            $select.select(index);\r\n          });\r\n        };\r\n\r\n        scope.$isVisible = function() {\r\n          return $select.$isVisible();\r\n        };\r\n\r\n        scope.$isActive = function(index) {\r\n          return $select.$isActive(index);\r\n        };\r\n\r\n        scope.$selectAll = function () {\r\n          for (var i = 0; i < scope.$matches.length; i++) {\r\n            if (!scope.$isActive(i)) {\r\n              scope.$select(i);\r\n            }\r\n          }\r\n        };\r\n\r\n        scope.$selectNone = function () {\r\n          for (var i = 0; i < scope.$matches.length; i++) {\r\n            if (scope.$isActive(i)) {\r\n              scope.$select(i);\r\n            }\r\n          }\r\n        };\r\n\r\n        // Public methods\r\n\r\n        $select.update = function(matches) {\r\n          scope.$matches = matches;\r\n          $select.$updateActiveIndex();\r\n        };\r\n\r\n        $select.activate = function(index) {\r\n          if(options.multiple) {\r\n            scope.$activeIndex.sort();\r\n            $select.$isActive(index) ? scope.$activeIndex.splice(scope.$activeIndex.indexOf(index), 1) : scope.$activeIndex.push(index);\r\n            if(options.sort) scope.$activeIndex.sort();\r\n          } else {\r\n            scope.$activeIndex = index;\r\n          }\r\n          return scope.$activeIndex;\r\n        };\r\n\r\n        $select.select = function(index) {\r\n          var value = scope.$matches[index].value;\r\n          scope.$apply(function() {\r\n            $select.activate(index);\r\n            if(options.multiple) {\r\n              controller.$setViewValue(scope.$activeIndex.map(function(index) {\r\n                return scope.$matches[index].value;\r\n              }));\r\n            } else {\r\n              controller.$setViewValue(value);\r\n              // Hide if single select\r\n              $select.hide();\r\n            }\r\n          });\r\n          // Emit event\r\n          scope.$emit(options.prefixEvent + '.select', value, index);\r\n        };\r\n\r\n        // Protected methods\r\n\r\n        $select.$updateActiveIndex = function() {\r\n          if(controller.$modelValue && scope.$matches.length) {\r\n            if(options.multiple && angular.isArray(controller.$modelValue)) {\r\n              scope.$activeIndex = controller.$modelValue.map(function(value) {\r\n                return $select.$getIndex(value);\r\n              });\r\n            } else {\r\n              scope.$activeIndex = $select.$getIndex(controller.$modelValue);\r\n            }\r\n          } else if(scope.$activeIndex >= scope.$matches.length) {\r\n            scope.$activeIndex = options.multiple ? [] : 0;\r\n          }\r\n        };\r\n\r\n        $select.$isVisible = function() {\r\n          if(!options.minLength || !controller) {\r\n            return scope.$matches.length;\r\n          }\r\n          // minLength support\r\n          return scope.$matches.length && controller.$viewValue.length >= options.minLength;\r\n        };\r\n\r\n        $select.$isActive = function(index) {\r\n          if(options.multiple) {\r\n            return scope.$activeIndex.indexOf(index) !== -1;\r\n          } else {\r\n            return scope.$activeIndex === index;\r\n          }\r\n        };\r\n\r\n        $select.$getIndex = function(value) {\r\n          var l = scope.$matches.length, i = l;\r\n          if(!l) return;\r\n          for(i = l; i--;) {\r\n            if(scope.$matches[i].value === value) break;\r\n          }\r\n          if(i < 0) return;\r\n          return i;\r\n        };\r\n\r\n        $select.$onMouseDown = function(evt) {\r\n          // Prevent blur on mousedown on .dropdown-menu\r\n          evt.preventDefault();\r\n          evt.stopPropagation();\r\n          // Emulate click for mobile devices\r\n          if(isTouch) {\r\n            var targetEl = angular.element(evt.target);\r\n            targetEl.triggerHandler('click');\r\n          }\r\n        };\r\n\r\n        $select.$onKeyDown = function(evt) {\r\n          if (!/(9|13|38|40)/.test(evt.keyCode)) return;\r\n          evt.preventDefault();\r\n          evt.stopPropagation();\r\n\r\n          // Select with enter\r\n          if(!options.multiple && (evt.keyCode === 13 || evt.keyCode === 9)) {\r\n            return $select.select(scope.$activeIndex);\r\n          }\r\n\r\n          // Navigate with keyboard\r\n          if(evt.keyCode === 38 && scope.$activeIndex > 0) scope.$activeIndex--;\r\n          else if(evt.keyCode === 40 && scope.$activeIndex < scope.$matches.length - 1) scope.$activeIndex++;\r\n          else if(angular.isUndefined(scope.$activeIndex)) scope.$activeIndex = 0;\r\n          scope.$digest();\r\n        };\r\n\r\n        // Overrides\r\n\r\n        var _show = $select.show;\r\n        $select.show = function() {\r\n          _show();\r\n          if(options.multiple) {\r\n            $select.$element.addClass('select-multiple');\r\n          }\r\n          setTimeout(function() {\r\n            $select.$element.on(isTouch ? 'touchstart' : 'mousedown', $select.$onMouseDown);\r\n            if(options.keyboard) {\r\n              element.on('keydown', $select.$onKeyDown);\r\n            }\r\n          });\r\n        };\r\n\r\n        var _hide = $select.hide;\r\n        $select.hide = function() {\r\n          $select.$element.off(isTouch ? 'touchstart' : 'mousedown', $select.$onMouseDown);\r\n          if(options.keyboard) {\r\n            element.off('keydown', $select.$onKeyDown);\r\n          }\r\n          _hide(true);\r\n        };\r\n\r\n        return $select;\r\n\r\n      }\r\n\r\n      SelectFactory.defaults = defaults;\r\n      return SelectFactory;\r\n\r\n    };\r\n\r\n  })\r\n\r\n  .directive('bsSelect', function($window, $parse, $q, $select, $parseOptions) {\r\n\r\n    var defaults = $select.defaults;\r\n\r\n    return {\r\n      restrict: 'EAC',\r\n      require: 'ngModel',\r\n      link: function postLink(scope, element, attr, controller) {\r\n\r\n        // Directive options\r\n        var options = {scope: scope};\r\n        angular.forEach(['placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'template', 'placeholder', 'multiple', 'allNoneButtons', 'maxLength', 'maxLengthHtml', 'reloadEvents'], function (key) {\r\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\r\n        });\r\n\r\n        // Add support for select markup\r\n        if(element[0].nodeName.toLowerCase() === 'select') {\r\n          var inputEl = element;\r\n          inputEl.css('display', 'none');\r\n          element = angular.element('<button type=\"button\" class=\"btn btn-default\"></button>');\r\n          inputEl.after(element);\r\n        }\r\n\r\n        // Build proper ngOptions\r\n        var parsedOptions = $parseOptions(attr.ngOptions);\r\n\r\n        // Initialize select\r\n        var select = $select(element, controller, options);\r\n\r\n        var reloadData = function () {\r\n            // console.warn('scope.$watch(%s)', watchedOptions, newValue, oldValue);\r\n            parsedOptions.valuesFn(scope, controller)\r\n                .then(function (values) {\r\n                    select.update(values);\r\n                    controller.$render();\r\n                });\r\n        };\r\n\r\n        // Initialize reloading\r\n        var reloadEvents = options.reloadEvents === undefined ? defaults.reloadEvents : options.reloadEvents.replace(' ', ',').split(',').filter(function (eventName) {\r\n            return eventName.trim() !== '';\r\n        });\r\n\r\n        reloadEvents.forEach(function (eventName) {\r\n            scope.$root.$on(eventName, reloadData);\r\n        });\r\n\r\n        // Watch ngOptions values before filtering for changes\r\n        var watchedOptions = parsedOptions.$match[7].replace(/\\|.+/, '').trim();\r\n        scope.$watch(watchedOptions, reloadData, true);\r\n\r\n        // Watch model for changes\r\n        scope.$watch(attr.ngModel, function(newValue, oldValue) {\r\n          // console.warn('scope.$watch(%s)', attr.ngModel, newValue, oldValue);\r\n          select.$updateActiveIndex();\r\n          controller.$render();\r\n        }, true);\r\n\r\n        // Observe placeholder\r\n        attr.$observe('placeholder', function() {\r\n          controller.$render();\r\n        });\r\n        \r\n        var getPlaceHolder = function () {\r\n            try {\r\n                return scope.$eval(attr.placeholder) || attr.placeholder || defaults.placeholder;\r\n            } catch (e) {\r\n                return attr.placeholder || defaults.placeholder;\r\n            }\r\n        };\r\n\r\n        // Model rendering in view\r\n        controller.$render = function () {\r\n          // console.warn('$render', element.attr('ng-model'), 'controller.$modelValue', typeof controller.$modelValue, controller.$modelValue, 'controller.$viewValue', typeof controller.$viewValue, controller.$viewValue);\r\n          var selected, index;\r\n          if(options.multiple && angular.isArray(controller.$modelValue)) {\r\n            selected = controller.$modelValue.map(function(value) {\r\n              index = select.$getIndex(value);\r\n              return angular.isDefined(index) ? select.$scope.$matches[index].label : false;\r\n            }).filter(angular.isDefined);\r\n            if(selected.length > (options.maxLength || defaults.maxLength)) {\r\n              selected = selected.length + ' ' + (options.maxLengthHtml || defaults.maxLengthHtml);\r\n            } else {\r\n              selected = selected.join(', ');\r\n            }\r\n          } else {\r\n            index = select.$getIndex(controller.$modelValue);\r\n            selected = angular.isDefined(index) ? select.$scope.$matches[index].label : false;\r\n          }\r\n          element.html((selected ? selected : getPlaceHolder()) + defaults.caretHtml);\r\n        };\r\n\r\n        // Garbage collection\r\n        scope.$on('$destroy', function() {\r\n          if (select) select.destroy();\r\n          options = null;\r\n          select = null;\r\n        });\r\n      }\r\n    };\r\n  });\r\n","'use strict';\r\n\r\nangular.module('mgcrea.ngStrap.tab', [])\r\n\r\n  .provider('$tab', function() {\r\n\r\n    var defaults = this.defaults = {\r\n      animation: 'am-fade',\r\n      template: 'tab/tab.tpl.html',\r\n      navClass: 'nav-tabs',\r\n      activeClass: 'active'\r\n    };\r\n\r\n    var controller = this.controller = function($scope, $element, $attrs) {\r\n      var self = this;\r\n\r\n      // Attributes options\r\n      self.$options = angular.copy(defaults);\r\n      angular.forEach(['animation', 'navClass', 'activeClass'], function(key) {\r\n        if(angular.isDefined($attrs[key])) self.$options[key] = $attrs[key];\r\n      });\r\n\r\n      // Publish options on scope\r\n      $scope.$navClass = self.$options.navClass;\r\n      $scope.$activeClass = self.$options.activeClass;\r\n\r\n      self.$panes = $scope.$panes = [];\r\n\r\n      self.$viewChangeListeners = [];\r\n\r\n      self.$push = function(pane) {\r\n        self.$panes.push(pane);\r\n      };\r\n\r\n      self.$panes.$active = 0;\r\n      self.$setActive = $scope.$setActive = function(value) {\r\n        self.$panes.$active = value;\r\n        self.$viewChangeListeners.forEach(function(fn) {\r\n          fn();\r\n        });\r\n      };\r\n\r\n    };\r\n\r\n    this.$get = function() {\r\n      var $tab = {};\r\n      $tab.defaults = defaults;\r\n      $tab.controller = controller;\r\n      return $tab;\r\n    };\r\n\r\n  })\r\n\r\n  .directive('bsTabs', function($window, $animate, $tab) {\r\n\r\n    var defaults = $tab.defaults;\r\n\r\n    return {\r\n      require: ['?ngModel', 'bsTabs'],\r\n      transclude: true,\r\n      scope: true,\r\n      controller: ['$scope', '$element', '$attrs', $tab.controller],\r\n      templateUrl: function(element, attr) {\r\n        return attr.template || defaults.template;\r\n      },\r\n      link: function postLink(scope, element, attrs, controllers) {\r\n\r\n        var ngModelCtrl = controllers[0];\r\n        var bsTabsCtrl = controllers[1];\r\n\r\n        if(ngModelCtrl) {\r\n\r\n          // Update the modelValue following\r\n          bsTabsCtrl.$viewChangeListeners.push(function() {\r\n            ngModelCtrl.$setViewValue(bsTabsCtrl.$panes.$active);\r\n          });\r\n\r\n          // modelValue -> $formatters -> viewValue\r\n          ngModelCtrl.$formatters.push(function(modelValue) {\r\n            // console.warn('$formatter(\"%s\"): modelValue=%o (%o)', element.attr('ng-model'), modelValue, typeof modelValue);\r\n            bsTabsCtrl.$setActive(modelValue * 1);\r\n            return modelValue;\r\n          });\r\n\r\n        }\r\n\r\n      }\r\n    };\r\n\r\n  })\r\n\r\n  .directive('bsPane', function($window, $animate, $sce) {\r\n\r\n    return {\r\n      require: ['^?ngModel', '^bsTabs'],\r\n      scope: true,\r\n      link: function postLink(scope, element, attrs, controllers) {\r\n\r\n        var ngModelCtrl = controllers[0];\r\n        var bsTabsCtrl = controllers[1];\r\n\r\n        // Add base class\r\n        element.addClass('tab-pane');\r\n\r\n        // Observe title attribute for change\r\n        attrs.$observe('title', function(newValue, oldValue) {\r\n          scope.title = $sce.trustAsHtml(newValue);\r\n        });\r\n\r\n        // Add animation class\r\n        if(bsTabsCtrl.$options.animation) {\r\n          element.addClass(bsTabsCtrl.$options.animation);\r\n        }\r\n\r\n        // Push pane to parent bsTabs controller\r\n        bsTabsCtrl.$push(scope);\r\n\r\n        function render() {\r\n          var index = bsTabsCtrl.$panes.indexOf(scope);\r\n          var active = bsTabsCtrl.$panes.$active;\r\n          $animate[index === active ? 'addClass' : 'removeClass'](element, bsTabsCtrl.$options.activeClass);\r\n        }\r\n\r\n        bsTabsCtrl.$viewChangeListeners.push(function() {\r\n          render();\r\n        });\r\n        render();\r\n\r\n      }\r\n    };\r\n\r\n  });\r\n","'use strict';\r\n\r\nangular.module('mgcrea.ngStrap.timepicker', ['mgcrea.ngStrap.helpers.dateParser', 'mgcrea.ngStrap.tooltip'])\r\n\r\n  .provider('$timepicker', function() {\r\n\r\n    var defaults = this.defaults = {\r\n      animation: 'am-fade',\r\n      prefixClass: 'timepicker',\r\n      placement: 'bottom-left',\r\n      template: 'timepicker/timepicker.tpl.html',\r\n      trigger: 'focus',\r\n      container: false,\r\n      keyboard: true,\r\n      html: false,\r\n      delay: 0,\r\n      // lang: $locale.id,\r\n      useNative: true,\r\n      timeType: 'date',\r\n      timeFormat: 'shortTime',\r\n      modelTimeFormat: null,\r\n      autoclose: false,\r\n      minTime: -Infinity,\r\n      maxTime: +Infinity,\r\n      length: 5,\r\n      hourStep: 1,\r\n      minuteStep: 5,\r\n      iconUp: 'glyphicon glyphicon-chevron-up',\r\n      iconDown: 'glyphicon glyphicon-chevron-down',\r\n      arrowBehavior: 'pager'\r\n    };\r\n\r\n    this.$get = function($window, $document, $rootScope, $sce, $locale, dateFilter, $tooltip) {\r\n\r\n      var bodyEl = angular.element($window.document.body);\r\n      var isNative = /(ip(a|o)d|iphone|android)/ig.test($window.navigator.userAgent);\r\n      var isTouch = ('createTouch' in $window.document) && isNative;\r\n      if(!defaults.lang) defaults.lang = $locale.id;\r\n\r\n      function timepickerFactory(element, controller, config) {\r\n\r\n        var $timepicker = $tooltip(element, angular.extend({}, defaults, config));\r\n        var parentScope = config.scope;\r\n        var options = $timepicker.$options;\r\n        var scope = $timepicker.$scope;\r\n\r\n        // View vars\r\n\r\n        var selectedIndex = 0;\r\n        var startDate = controller.$dateValue || new Date();\r\n        var viewDate = {hour: startDate.getHours(), meridian: startDate.getHours() < 12, minute: startDate.getMinutes(), second: startDate.getSeconds(), millisecond: startDate.getMilliseconds()};\r\n\r\n        var format = $locale.DATETIME_FORMATS[options.timeFormat] || options.timeFormat;\r\n        var formats = /(h+)([:\\.])?(m+)[ ]?(a?)/i.exec(format).slice(1);\r\n        scope.$iconUp = options.iconUp;\r\n        scope.$iconDown = options.iconDown;\r\n\r\n        // Scope methods\r\n\r\n        scope.$select = function(date, index) {\r\n          $timepicker.select(date, index);\r\n        };\r\n        scope.$moveIndex = function(value, index) {\r\n          $timepicker.$moveIndex(value, index);\r\n        };\r\n        scope.$switchMeridian = function(date) {\r\n          $timepicker.switchMeridian(date);\r\n        };\r\n\r\n        // Public methods\r\n\r\n        $timepicker.update = function(date) {\r\n          // console.warn('$timepicker.update() newValue=%o', date);\r\n          if(angular.isDate(date) && !isNaN(date.getTime())) {\r\n            $timepicker.$date = date;\r\n            angular.extend(viewDate, {hour: date.getHours(), minute: date.getMinutes(), second: date.getSeconds(), millisecond: date.getMilliseconds()});\r\n            $timepicker.$build();\r\n          } else if(!$timepicker.$isBuilt) {\r\n            $timepicker.$build();\r\n          }\r\n        };\r\n\r\n        $timepicker.select = function(date, index, keep) {\r\n          // console.warn('$timepicker.select', date, scope.$mode);\r\n          if(!controller.$dateValue || isNaN(controller.$dateValue.getTime())) controller.$dateValue = new Date(1970, 0, 1);\r\n          if(!angular.isDate(date)) date = new Date(date);\r\n          if(index === 0) controller.$dateValue.setHours(date.getHours());\r\n          else if(index === 1) controller.$dateValue.setMinutes(date.getMinutes());\r\n          controller.$setViewValue(controller.$dateValue);\r\n          controller.$render();\r\n          if(options.autoclose && !keep) {\r\n            $timepicker.hide(true);\r\n          }\r\n        };\r\n\r\n        $timepicker.switchMeridian = function(date) {\r\n          var hours = (date || controller.$dateValue).getHours();\r\n          controller.$dateValue.setHours(hours < 12 ? hours + 12 : hours - 12);\r\n          controller.$setViewValue(controller.$dateValue);\r\n          controller.$render();\r\n        };\r\n\r\n        // Protected methods\r\n\r\n        $timepicker.$build = function() {\r\n          // console.warn('$timepicker.$build() viewDate=%o', viewDate);\r\n          var i, midIndex = scope.midIndex = parseInt(options.length / 2, 10);\r\n          var hours = [], hour;\r\n          for(i = 0; i < options.length; i++) {\r\n            hour = new Date(1970, 0, 1, viewDate.hour - (midIndex - i) * options.hourStep);\r\n            hours.push({date: hour, label: dateFilter(hour, formats[0]), selected: $timepicker.$date && $timepicker.$isSelected(hour, 0), disabled: $timepicker.$isDisabled(hour, 0)});\r\n          }\r\n          var minutes = [], minute;\r\n          for(i = 0; i < options.length; i++) {\r\n            minute = new Date(1970, 0, 1, 0, viewDate.minute - (midIndex - i) * options.minuteStep);\r\n            minutes.push({date: minute, label: dateFilter(minute, formats[2]), selected: $timepicker.$date && $timepicker.$isSelected(minute, 1), disabled: $timepicker.$isDisabled(minute, 1)});\r\n          }\r\n\r\n          var rows = [];\r\n          for(i = 0; i < options.length; i++) {\r\n            rows.push([hours[i], minutes[i]]);\r\n          }\r\n          scope.rows = rows;\r\n          scope.showAM = !!formats[3];\r\n          scope.isAM = ($timepicker.$date || hours[midIndex].date).getHours() < 12;\r\n          scope.timeSeparator = formats[1];\r\n          $timepicker.$isBuilt = true;\r\n        };\r\n\r\n        $timepicker.$isSelected = function(date, index) {\r\n          if(!$timepicker.$date) return false;\r\n          else if(index === 0) {\r\n            return date.getHours() === $timepicker.$date.getHours();\r\n          } else if(index === 1) {\r\n            return date.getMinutes() === $timepicker.$date.getMinutes();\r\n          }\r\n        };\r\n\r\n        $timepicker.$isDisabled = function(date, index) {\r\n          var selectedTime;\r\n          if(index === 0) {\r\n            selectedTime = date.getTime() + viewDate.minute * 6e4;\r\n          } else if(index === 1) {\r\n            selectedTime = date.getTime() + viewDate.hour * 36e5;\r\n          }\r\n          return selectedTime < options.minTime * 1 || selectedTime > options.maxTime * 1;\r\n        };\r\n\r\n        scope.$arrowAction = function (value, index) {\r\n          if (options.arrowBehavior === 'picker') {\r\n            $timepicker.$setTimeByStep(value,index);\r\n          } else {\r\n            $timepicker.$moveIndex(value,index);\r\n          }\r\n        };\r\n\r\n        $timepicker.$setTimeByStep = function(value, index) {\r\n          var newDate = new Date($timepicker.$date);\r\n          var hours = newDate.getHours(), hoursLength = dateFilter(newDate, 'h').length;\r\n          var minutes = newDate.getMinutes(), minutesLength = dateFilter(newDate, 'mm').length;\r\n          if (index === 0) {\r\n            newDate.setHours(hours - (parseInt(options.hourStep, 10) * value));\r\n          }\r\n          else {\r\n            newDate.setMinutes(minutes - (parseInt(options.minuteStep, 10) * value));\r\n          }\r\n          $timepicker.select(newDate, index, true);\r\n          parentScope.$digest();\r\n        };\r\n\r\n        $timepicker.$moveIndex = function(value, index) {\r\n          var targetDate;\r\n          if(index === 0) {\r\n            targetDate = new Date(1970, 0, 1, viewDate.hour + (value * options.length), viewDate.minute);\r\n            angular.extend(viewDate, {hour: targetDate.getHours()});\r\n          } else if(index === 1) {\r\n            targetDate = new Date(1970, 0, 1, viewDate.hour, viewDate.minute + (value * options.length * options.minuteStep));\r\n            angular.extend(viewDate, {minute: targetDate.getMinutes()});\r\n          }\r\n          $timepicker.$build();\r\n        };\r\n\r\n        $timepicker.$onMouseDown = function(evt) {\r\n          // Prevent blur on mousedown on .dropdown-menu\r\n          if(evt.target.nodeName.toLowerCase() !== 'input') evt.preventDefault();\r\n          evt.stopPropagation();\r\n          // Emulate click for mobile devices\r\n          if(isTouch) {\r\n            var targetEl = angular.element(evt.target);\r\n            if(targetEl[0].nodeName.toLowerCase() !== 'button') {\r\n              targetEl = targetEl.parent();\r\n            }\r\n            targetEl.triggerHandler('click');\r\n          }\r\n        };\r\n\r\n        $timepicker.$onKeyDown = function(evt) {\r\n          if (!/(38|37|39|40|13)/.test(evt.keyCode) || evt.shiftKey || evt.altKey) return;\r\n          evt.preventDefault();\r\n          evt.stopPropagation();\r\n\r\n          // Close on enter\r\n          if(evt.keyCode === 13) return $timepicker.hide(true);\r\n\r\n          // Navigate with keyboard\r\n          var newDate = new Date($timepicker.$date);\r\n          var hours = newDate.getHours(), hoursLength = dateFilter(newDate, 'h').length;\r\n          var minutes = newDate.getMinutes(), minutesLength = dateFilter(newDate, 'mm').length;\r\n          var lateralMove = /(37|39)/.test(evt.keyCode);\r\n          var count = 2 + !!formats[3] * 1;\r\n\r\n          // Navigate indexes (left, right)\r\n          if (lateralMove) {\r\n            if(evt.keyCode === 37) selectedIndex = selectedIndex < 1 ? count - 1 : selectedIndex - 1;\r\n            else if(evt.keyCode === 39) selectedIndex = selectedIndex < count - 1 ? selectedIndex + 1 : 0;\r\n          }\r\n\r\n          // Update values (up, down)\r\n          var selectRange = [0, hoursLength];\r\n          if(selectedIndex === 0) {\r\n            if(evt.keyCode === 38) newDate.setHours(hours - parseInt(options.hourStep, 10));\r\n            else if(evt.keyCode === 40) newDate.setHours(hours + parseInt(options.hourStep, 10));\r\n            selectRange = [0, hoursLength];\r\n          } else if(selectedIndex === 1) {\r\n            if(evt.keyCode === 38) newDate.setMinutes(minutes - parseInt(options.minuteStep, 10));\r\n            else if(evt.keyCode === 40) newDate.setMinutes(minutes + parseInt(options.minuteStep, 10));\r\n            selectRange = [hoursLength + 1, hoursLength + 1 + minutesLength];\r\n          } else if(selectedIndex === 2) {\r\n            if(!lateralMove) $timepicker.switchMeridian();\r\n            selectRange = [hoursLength + 1 + minutesLength + 1, hoursLength + 1 + minutesLength + 3];\r\n          }\r\n          $timepicker.select(newDate, selectedIndex, true);\r\n          createSelection(selectRange[0], selectRange[1]);\r\n          parentScope.$digest();\r\n        };\r\n\r\n        // Private\r\n\r\n        function createSelection(start, end) {\r\n          if(element[0].createTextRange) {\r\n            var selRange = element[0].createTextRange();\r\n            selRange.collapse(true);\r\n            selRange.moveStart('character', start);\r\n            selRange.moveEnd('character', end);\r\n            selRange.select();\r\n          } else if(element[0].setSelectionRange) {\r\n            element[0].setSelectionRange(start, end);\r\n          } else if(angular.isUndefined(element[0].selectionStart)) {\r\n            element[0].selectionStart = start;\r\n            element[0].selectionEnd = end;\r\n          }\r\n        }\r\n\r\n        function focusElement() {\r\n          element[0].focus();\r\n        }\r\n\r\n        // Overrides\r\n\r\n        var _init = $timepicker.init;\r\n        $timepicker.init = function() {\r\n          if(isNative && options.useNative) {\r\n            element.prop('type', 'time');\r\n            element.css('-webkit-appearance', 'textfield');\r\n            return;\r\n          } else if(isTouch) {\r\n            element.prop('type', 'text');\r\n            element.attr('readonly', 'true');\r\n            element.on('click', focusElement);\r\n          }\r\n          _init();\r\n        };\r\n\r\n        var _destroy = $timepicker.destroy;\r\n        $timepicker.destroy = function() {\r\n          if(isNative && options.useNative) {\r\n            element.off('click', focusElement);\r\n          }\r\n          _destroy();\r\n        };\r\n\r\n        var _show = $timepicker.show;\r\n        $timepicker.show = function() {\r\n          _show();\r\n          setTimeout(function() {\r\n            $timepicker.$element.on(isTouch ? 'touchstart' : 'mousedown', $timepicker.$onMouseDown);\r\n            if(options.keyboard) {\r\n              element.on('keydown', $timepicker.$onKeyDown);\r\n            }\r\n          });\r\n        };\r\n\r\n        var _hide = $timepicker.hide;\r\n        $timepicker.hide = function(blur) {\r\n          $timepicker.$element.off(isTouch ? 'touchstart' : 'mousedown', $timepicker.$onMouseDown);\r\n          if(options.keyboard) {\r\n            element.off('keydown', $timepicker.$onKeyDown);\r\n          }\r\n          _hide(blur);\r\n        };\r\n\r\n        return $timepicker;\r\n\r\n      }\r\n\r\n      timepickerFactory.defaults = defaults;\r\n      return timepickerFactory;\r\n\r\n    };\r\n\r\n  })\r\n\r\n\r\n  .directive('bsTimepicker', function($window, $parse, $q, $locale, dateFilter, $timepicker, $dateParser, $timeout) {\r\n\r\n    var defaults = $timepicker.defaults;\r\n    var isNative = /(ip(a|o)d|iphone|android)/ig.test($window.navigator.userAgent);\r\n    var requestAnimationFrame = $window.requestAnimationFrame || $window.setTimeout;\r\n\r\n    return {\r\n      restrict: 'EAC',\r\n      require: 'ngModel',\r\n      link: function postLink(scope, element, attr, controller) {\r\n\r\n        // Directive options\r\n        var options = {scope: scope, controller: controller};\r\n        angular.forEach(['placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'template', 'autoclose', 'timeType', 'timeFormat', 'modelTimeFormat', 'useNative', 'hourStep', 'minuteStep', 'length', 'arrowBehavior'], function(key) {\r\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\r\n        });\r\n\r\n        // Visibility binding support\r\n        attr.bsShow && scope.$watch(attr.bsShow, function(newValue, oldValue) {\r\n          if(!timepicker || !angular.isDefined(newValue)) return;\r\n          if(angular.isString(newValue)) newValue = !!newValue.match(',?(timepicker),?');\r\n          newValue === true ? timepicker.show() : timepicker.hide();\r\n        });\r\n\r\n        // Initialize timepicker\r\n        if(isNative && (options.useNative || defaults.useNative)) options.timeFormat = 'HH:mm';\r\n        var timepicker = $timepicker(element, controller, options);\r\n        options = timepicker.$options;\r\n\r\n        // Initialize parser\r\n        var dateParser = $dateParser({format: options.timeFormat, lang: options.lang});\r\n\r\n        // Observe attributes for changes\r\n        angular.forEach(['minTime', 'maxTime'], function(key) {\r\n          // console.warn('attr.$observe(%s)', key, attr[key]);\r\n          angular.isDefined(attr[key]) && attr.$observe(key, function(newValue) {\r\n            if(newValue === 'now') {\r\n              timepicker.$options[key] = new Date().setFullYear(1970, 0, 1);\r\n            } else if(angular.isString(newValue) && newValue.match(/^\".+\"$/)) {\r\n              timepicker.$options[key] = +new Date(newValue.substr(1, newValue.length - 2));\r\n            } else {\r\n              timepicker.$options[key] = dateParser.parse(newValue, new Date(1970, 0, 1, 0));\r\n            }\r\n            !isNaN(timepicker.$options[key]) && timepicker.$build();\r\n          });\r\n        });\r\n\r\n        // Watch model for changes\r\n        scope.$watch(attr.ngModel, function(newValue, oldValue) {\r\n          // console.warn('scope.$watch(%s)', attr.ngModel, newValue, oldValue, controller.$dateValue);\r\n          timepicker.update(controller.$dateValue);\r\n        }, true);\r\n\r\n        // viewValue -> $parsers -> modelValue\r\n        controller.$parsers.unshift(function(viewValue) {\r\n          // console.warn('$parser(\"%s\"): viewValue=%o', element.attr('ng-model'), viewValue);\r\n          // Null values should correctly reset the model value & validity\r\n          if(!viewValue) {\r\n            controller.$setValidity('date', true);\r\n            return;\r\n          }\r\n          var parsedTime = angular.isDate(viewValue) ? viewValue : dateParser.parse(viewValue, controller.$dateValue);\r\n          if(!parsedTime || isNaN(parsedTime.getTime())) {\r\n            controller.$setValidity('date', false);\r\n          } else {\r\n            var isValid = parsedTime.getTime() >= options.minTime && parsedTime.getTime() <= options.maxTime;\r\n            controller.$setValidity('date', isValid);\r\n            // Only update the model when we have a valid date\r\n            if(isValid) controller.$dateValue = parsedTime;\r\n          }\r\n          if(options.timeType === 'string') {\r\n            return dateFilter(parsedTime, options.modelTimeFormat || options.timeFormat);\r\n          } else if(options.timeType === 'number') {\r\n            return controller.$dateValue.getTime();\r\n          } else if(options.timeType === 'iso') {\r\n            return controller.$dateValue.toISOString();\r\n          } else {\r\n            return new Date(controller.$dateValue);\r\n          }\r\n        });\r\n\r\n        // modelValue -> $formatters -> viewValue\r\n        controller.$formatters.push(function(modelValue) {\r\n          // console.warn('$formatter(\"%s\"): modelValue=%o (%o)', element.attr('ng-model'), modelValue, typeof modelValue);\r\n          var date;\r\n          if(angular.isUndefined(modelValue) || modelValue === null) {\r\n            date = NaN;\r\n          } else if(angular.isDate(modelValue)) {\r\n            date = modelValue;\r\n          } else if(options.timeType === 'string') {\r\n            date = dateParser.parse(modelValue, null, options.modelTimeFormat);\r\n          } else {\r\n            date = new Date(modelValue);\r\n          }\r\n          // Setup default value?\r\n          // if(isNaN(date.getTime())) date = new Date(new Date().setMinutes(0) + 36e5);\r\n          controller.$dateValue = date;\r\n          return controller.$dateValue;\r\n        });\r\n\r\n        // viewValue -> element\r\n        controller.$render = function() {\r\n          // console.warn('$render(\"%s\"): viewValue=%o', element.attr('ng-model'), controller.$viewValue);\r\n          element.val(!controller.$dateValue || isNaN(controller.$dateValue.getTime()) ? '' : dateFilter(controller.$dateValue, options.timeFormat));\r\n        };\r\n\r\n        // Garbage collection\r\n        scope.$on('$destroy', function() {\r\n          if (timepicker) timepicker.destroy();\r\n          options = null;\r\n          timepicker = null;\r\n        });\r\n\r\n      }\r\n    };\r\n\r\n  });\r\n","'use strict';\r\n\r\nangular.module('mgcrea.ngStrap.tooltip', ['mgcrea.ngStrap.helpers.dimensions'])\r\n\r\n  .provider('$tooltip', function() {\r\n\r\n    var defaults = this.defaults = {\r\n      animation: 'am-fade',\r\n      customClass: '',\r\n      prefixClass: 'tooltip',\r\n      prefixEvent: 'tooltip',\r\n      container: false,\r\n      target: false,\r\n      placement: 'top',\r\n      template: 'tooltip/tooltip.tpl.html',\r\n      contentTemplate: false,\r\n      trigger: 'hover focus',\r\n      keyboard: false,\r\n      html: false,\r\n      show: false,\r\n      title: '',\r\n      type: '',\r\n      delay: 0\r\n    };\r\n\r\n    this.$get = function($window, $rootScope, $compile, $q, $templateCache, $http, $animate, dimensions, $$rAF) {\r\n\r\n      var trim = String.prototype.trim;\r\n      var isTouch = 'createTouch' in $window.document;\r\n      var htmlReplaceRegExp = /ng-bind=\"/ig;\r\n\r\n      function TooltipFactory(element, config) {\r\n\r\n        var $tooltip = {};\r\n\r\n        // Common vars\r\n        var nodeName = element[0].nodeName.toLowerCase();\r\n        var options = $tooltip.$options = angular.extend({}, defaults, config);\r\n        $tooltip.$promise = fetchTemplate(options.template);\r\n        var scope = $tooltip.$scope = options.scope && options.scope.$new() || $rootScope.$new();\r\n        if(options.delay && angular.isString(options.delay)) {\r\n          var split = options.delay.split(',').map(parseFloat);\r\n          options.delay = split.length > 1 ? {show: split[0], hide: split[1]} : split[0];\r\n        }\r\n\r\n        // Support scope as string options\r\n        if(options.title) {\r\n          $tooltip.$scope.title = options.title;\r\n        }\r\n\r\n        // Provide scope helpers\r\n        scope.$hide = function() {\r\n          scope.$$postDigest(function() {\r\n            $tooltip.hide();\r\n          });\r\n        };\r\n        scope.$show = function() {\r\n          scope.$$postDigest(function() {\r\n            $tooltip.show();\r\n          });\r\n        };\r\n        scope.$toggle = function() {\r\n          scope.$$postDigest(function() {\r\n            $tooltip.toggle();\r\n          });\r\n        };\r\n        $tooltip.$isShown = scope.$isShown = false;\r\n\r\n        // Private vars\r\n        var timeout, hoverState;\r\n\r\n        // Support contentTemplate option\r\n        if(options.contentTemplate) {\r\n          $tooltip.$promise = $tooltip.$promise.then(function(template) {\r\n            var templateEl = angular.element(template);\r\n            return fetchTemplate(options.contentTemplate)\r\n            .then(function(contentTemplate) {\r\n              var contentEl = findElement('[ng-bind=\"content\"]', templateEl[0]);\r\n              if(!contentEl.length) contentEl = findElement('[ng-bind=\"title\"]', templateEl[0]);\r\n              contentEl.removeAttr('ng-bind').html(contentTemplate);\r\n              return templateEl[0].outerHTML;\r\n            });\r\n          });\r\n        }\r\n\r\n        // Fetch, compile then initialize tooltip\r\n        var tipLinker, tipElement, tipTemplate, tipContainer;\r\n        $tooltip.$promise.then(function(template) {\r\n          if(angular.isObject(template)) template = template.data;\r\n          if(options.html) template = template.replace(htmlReplaceRegExp, 'ng-bind-html=\"');\r\n          template = trim.apply(template);\r\n          tipTemplate = template;\r\n          tipLinker = $compile(template);\r\n          $tooltip.init();\r\n        });\r\n\r\n        $tooltip.init = function() {\r\n\r\n          // Options: delay\r\n          if (options.delay && angular.isNumber(options.delay)) {\r\n            options.delay = {\r\n              show: options.delay,\r\n              hide: options.delay\r\n            };\r\n          }\r\n\r\n          // Replace trigger on touch devices ?\r\n          // if(isTouch && options.trigger === defaults.trigger) {\r\n          //   options.trigger.replace(/hover/g, 'click');\r\n          // }\r\n\r\n          // Options : container\r\n          if(options.container === 'self') {\r\n            tipContainer = element;\r\n          } else if(angular.isElement(options.container)) {\r\n            tipContainer = options.container;\r\n          } else if(options.container) {\r\n            tipContainer = findElement(options.container);\r\n          }\r\n\r\n          // Options: trigger\r\n          var triggers = options.trigger.split(' ');\r\n          angular.forEach(triggers, function(trigger) {\r\n            if(trigger === 'click') {\r\n              element.on('click', $tooltip.toggle);\r\n            } else if(trigger !== 'manual') {\r\n              element.on(trigger === 'hover' ? 'mouseenter' : 'focus', $tooltip.enter);\r\n              element.on(trigger === 'hover' ? 'mouseleave' : 'blur', $tooltip.leave);\r\n              nodeName === 'button' && trigger !== 'hover' && element.on(isTouch ? 'touchstart' : 'mousedown', $tooltip.$onFocusElementMouseDown);\r\n            }\r\n          });\r\n\r\n          // Options: target\r\n          if(options.target) {\r\n            options.target = angular.isElement(options.target) ? options.target : findElement(options.target);\r\n          }\r\n\r\n          // Options: show\r\n          if(options.show) {\r\n            scope.$$postDigest(function() {\r\n              options.trigger === 'focus' ? element[0].focus() : $tooltip.show();\r\n            });\r\n          }\r\n\r\n        };\r\n\r\n        $tooltip.destroy = function() {\r\n\r\n          // Unbind events\r\n          var triggers = options.trigger.split(' ');\r\n          for (var i = triggers.length; i--;) {\r\n            var trigger = triggers[i];\r\n            if(trigger === 'click') {\r\n              element.off('click', $tooltip.toggle);\r\n            } else if(trigger !== 'manual') {\r\n              element.off(trigger === 'hover' ? 'mouseenter' : 'focus', $tooltip.enter);\r\n              element.off(trigger === 'hover' ? 'mouseleave' : 'blur', $tooltip.leave);\r\n              nodeName === 'button' && trigger !== 'hover' && element.off(isTouch ? 'touchstart' : 'mousedown', $tooltip.$onFocusElementMouseDown);\r\n            }\r\n          }\r\n\r\n          // Remove element\r\n          if(tipElement) {\r\n            tipElement.remove();\r\n            tipElement = null;\r\n          }\r\n\r\n          // Cancel pending callbacks\r\n          clearTimeout(timeout);\r\n\r\n          // Destroy scope\r\n          scope.$destroy();\r\n\r\n        };\r\n\r\n        $tooltip.enter = function() {\r\n\r\n          clearTimeout(timeout);\r\n          hoverState = 'in';\r\n          if (!options.delay || !options.delay.show) {\r\n            return $tooltip.show();\r\n          }\r\n\r\n          timeout = setTimeout(function() {\r\n            if (hoverState ==='in') $tooltip.show();\r\n          }, options.delay.show);\r\n\r\n        };\r\n\r\n        $tooltip.show = function() {\r\n\r\n          scope.$emit(options.prefixEvent + '.show.before', $tooltip);\r\n          var parent = options.container ? tipContainer : null;\r\n          var after = options.container ? null : element;\r\n\r\n          // Hide any existing tipElement\r\n          if(tipElement) tipElement.remove();\r\n          // Fetch a cloned element linked from template\r\n          tipElement = $tooltip.$element = tipLinker(scope, function(clonedElement, scope) {});\r\n\r\n          // Set the initial positioning.  Make the tooltip invisible\r\n          // so IE doesn't try to focus on it off screen.\r\n          tipElement.css({top: '-9999px', left: '-9999px', display: 'block', visibility: 'hidden'}).addClass(options.placement);\r\n\r\n          // Options: animation\r\n          if(options.animation) tipElement.addClass(options.animation);\r\n          // Options: type\r\n          if(options.type) tipElement.addClass(options.prefixClass + '-' + options.type);\r\n          // Options: custom classes\r\n          if(options.customClass) tipElement.addClass(options.customClass);\r\n\r\n          // Support v1.3+ $animate\r\n          // https://github.com/angular/angular.js/commit/bf0f5502b1bbfddc5cdd2f138efd9188b8c652a9\r\n          var promise = $animate.enter(tipElement, parent, after, enterAnimateCallback);\r\n          if(promise && promise.then) promise.then(enterAnimateCallback);\r\n\r\n          $tooltip.$isShown = scope.$isShown = true;\r\n          scope.$$phase || (scope.$root && scope.$root.$$phase) || scope.$digest();\r\n          $$rAF(function () {\r\n            $tooltip.$applyPlacement();\r\n\r\n            // Once placed, make the tooltip visible\r\n            if(tipElement)\r\n            tipElement.css({visibility: 'visible'});\r\n          }); // var a = bodyEl.offsetWidth + 1; ?\r\n\r\n          // Bind events\r\n          if(options.keyboard) {\r\n            if(options.trigger !== 'focus') {\r\n              $tooltip.focus();\r\n              tipElement.on('keyup', $tooltip.$onKeyUp);\r\n            } else {\r\n              element.on('keyup', $tooltip.$onFocusKeyUp);\r\n            }\r\n          }\r\n\r\n        };\r\n\r\n        function enterAnimateCallback() {\r\n          scope.$emit(options.prefixEvent + '.show', $tooltip);\r\n        }\r\n\r\n        $tooltip.leave = function() {\r\n\r\n          clearTimeout(timeout);\r\n          hoverState = 'out';\r\n          if (!options.delay || !options.delay.hide) {\r\n            return $tooltip.hide();\r\n          }\r\n          timeout = setTimeout(function () {\r\n            if (hoverState === 'out') {\r\n              $tooltip.hide();\r\n            }\r\n          }, options.delay.hide);\r\n\r\n        };\r\n\r\n        $tooltip.hide = function(blur) {\r\n\r\n          if(!$tooltip.$isShown) return;\r\n          scope.$emit(options.prefixEvent + '.hide.before', $tooltip);\r\n\r\n          // Support v1.3+ $animate\r\n          // https://github.com/angular/angular.js/commit/bf0f5502b1bbfddc5cdd2f138efd9188b8c652a9\r\n          var promise = $animate.leave(tipElement, leaveAnimateCallback);\r\n          if(promise && promise.then) promise.then(leaveAnimateCallback);\r\n\r\n          $tooltip.$isShown = scope.$isShown = false;\r\n          scope.$$phase || (scope.$root && scope.$root.$$phase) || scope.$digest();\r\n\r\n          // Unbind events\r\n          if(options.keyboard && tipElement !== null) {\r\n            tipElement.off('keyup', $tooltip.$onKeyUp);\r\n          }\r\n\r\n        };\r\n\r\n        function leaveAnimateCallback() {\r\n          scope.$emit(options.prefixEvent + '.hide', $tooltip);\r\n          // Allow to blur the input when hidden, like when pressing enter key\r\n          if(blur && options.trigger === 'focus') {\r\n            return element[0].blur();\r\n          }\r\n        }\r\n\r\n        $tooltip.toggle = function() {\r\n          $tooltip.$isShown ? $tooltip.leave() : $tooltip.enter();\r\n        };\r\n\r\n        $tooltip.focus = function() {\r\n          tipElement[0].focus();\r\n        };\r\n\r\n        // Protected methods\r\n\r\n        $tooltip.$applyPlacement = function() {\r\n          if(!tipElement) return;\r\n\r\n          // Get the position of the tooltip element.\r\n          var elementPosition = getPosition();\r\n\r\n          // Get the height and width of the tooltip so we can center it.\r\n          var tipWidth = tipElement.prop('offsetWidth'),\r\n              tipHeight = tipElement.prop('offsetHeight');\r\n\r\n          // Get the tooltip's top and left coordinates to center it with this directive.\r\n          var tipPosition = getCalculatedOffset(options.placement, elementPosition, tipWidth, tipHeight);\r\n\r\n          // Now set the calculated positioning.\r\n          tipPosition.top += 'px';\r\n          tipPosition.left += 'px';\r\n          tipElement.css(tipPosition);\r\n\r\n        };\r\n\r\n        $tooltip.$onKeyUp = function(evt) {\r\n          if (evt.which === 27 && $tooltip.$isShown) {\r\n            $tooltip.hide();\r\n            evt.stopPropagation();\r\n          }\r\n        };\r\n\r\n        $tooltip.$onFocusKeyUp = function(evt) {\r\n          if (evt.which === 27) {\r\n            element[0].blur();\r\n            evt.stopPropagation();\r\n          }\r\n        };\r\n\r\n        $tooltip.$onFocusElementMouseDown = function(evt) {\r\n          evt.preventDefault();\r\n          evt.stopPropagation();\r\n          // Some browsers do not auto-focus buttons (eg. Safari)\r\n          $tooltip.$isShown ? element[0].blur() : element[0].focus();\r\n        };\r\n\r\n        // Private methods\r\n\r\n        function getPosition() {\r\n          if(options.container === 'body') {\r\n            return dimensions.offset(options.target[0] || element[0]);\r\n          } else {\r\n            return dimensions.position(options.target[0] || element[0]);\r\n          }\r\n        }\r\n\r\n        function getCalculatedOffset(placement, position, actualWidth, actualHeight) {\r\n          var offset;\r\n          var split = placement.split('-');\r\n\r\n          switch (split[0]) {\r\n          case 'right':\r\n            offset = {\r\n              top: position.top + position.height / 2 - actualHeight / 2,\r\n              left: position.left + position.width\r\n            };\r\n            break;\r\n          case 'bottom':\r\n            offset = {\r\n              top: position.top + position.height,\r\n              left: position.left + position.width / 2 - actualWidth / 2\r\n            };\r\n            break;\r\n          case 'left':\r\n            offset = {\r\n              top: position.top + position.height / 2 - actualHeight / 2,\r\n              left: position.left - actualWidth\r\n            };\r\n            break;\r\n          default:\r\n            offset = {\r\n              top: position.top - actualHeight,\r\n              left: position.left + position.width / 2 - actualWidth / 2\r\n            };\r\n            break;\r\n          }\r\n\r\n          if(!split[1]) {\r\n            return offset;\r\n          }\r\n\r\n          // Add support for corners @todo css\r\n          if(split[0] === 'top' || split[0] === 'bottom') {\r\n            switch (split[1]) {\r\n            case 'left':\r\n              offset.left = position.left;\r\n              break;\r\n            case 'right':\r\n              offset.left =  position.left + position.width - actualWidth;\r\n            }\r\n          } else if(split[0] === 'left' || split[0] === 'right') {\r\n            switch (split[1]) {\r\n            case 'top':\r\n              offset.top = position.top - actualHeight;\r\n              break;\r\n            case 'bottom':\r\n              offset.top = position.top + position.height;\r\n            }\r\n          }\r\n\r\n          return offset;\r\n        }\r\n\r\n        return $tooltip;\r\n\r\n      }\r\n\r\n      // Helper functions\r\n\r\n      function findElement(query, element) {\r\n        return angular.element((element || document).querySelectorAll(query));\r\n      }\r\n\r\n      function fetchTemplate(template) {\r\n        return $q.when($templateCache.get(template) || $http.get(template))\r\n        .then(function(res) {\r\n          if(angular.isObject(res)) {\r\n            $templateCache.put(template, res.data);\r\n            return res.data;\r\n          }\r\n          return res;\r\n        });\r\n      }\r\n\r\n      return TooltipFactory;\r\n\r\n    };\r\n\r\n  })\r\n\r\n  .directive('bsTooltip', function($window, $location, $sce, $tooltip, $$rAF) {\r\n\r\n    return {\r\n      restrict: 'EAC',\r\n      scope: true,\r\n      link: function postLink(scope, element, attr, transclusion) {\r\n\r\n        // Directive options\r\n        var options = {scope: scope};\r\n        angular.forEach(['template', 'contentTemplate', 'placement', 'container', 'target', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'type', 'customClass'], function(key) {\r\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\r\n        });\r\n\r\n        // Observe scope attributes for change\r\n        attr.$observe('title', function(newValue, oldValue) {\r\n          scope.title = $sce.trustAsHtml(newValue);\r\n          angular.isDefined(oldValue) && $$rAF(function() {\r\n            tooltip && tooltip.$applyPlacement();\r\n          });\r\n        });\r\n\r\n        // Support scope as an object\r\n        attr.bsTooltip && scope.$watch(attr.bsTooltip, function(newValue, oldValue) {\r\n          if(angular.isObject(newValue)) {\r\n            angular.extend(scope, newValue);\r\n          } else {\r\n            scope.title = newValue;\r\n          }\r\n          angular.isDefined(oldValue) && $$rAF(function() {\r\n            tooltip && tooltip.$applyPlacement();\r\n          });\r\n        }, true);\r\n\r\n        // Visibility binding support\r\n        attr.bsShow && scope.$watch(attr.bsShow, function(newValue, oldValue) {\r\n          if(!tooltip || !angular.isDefined(newValue)) return;\r\n          if(angular.isString(newValue)) newValue = !!newValue.match(',?(tooltip),?');\r\n          newValue === true ? tooltip.show() : tooltip.hide();\r\n        });\r\n\r\n        // Initialize popover\r\n        var tooltip = $tooltip(element, options);\r\n\r\n        // Garbage collection\r\n        scope.$on('$destroy', function() {\r\n          if(tooltip) tooltip.destroy();\r\n          options = null;\r\n          tooltip = null;\r\n        });\r\n\r\n      }\r\n    };\r\n\r\n  });\r\n","'use strict';\r\n\r\nangular.module('mgcrea.ngStrap.typeahead', ['mgcrea.ngStrap.tooltip', 'mgcrea.ngStrap.helpers.parseOptions'])\r\n\r\n  .provider('$typeahead', function() {\r\n\r\n    var defaults = this.defaults = {\r\n      animation: 'am-fade',\r\n      prefixClass: 'typeahead',\r\n      prefixEvent: '$typeahead',\r\n      placement: 'bottom-left',\r\n      template: 'typeahead/typeahead.tpl.html',\r\n      trigger: 'focus',\r\n      container: false,\r\n      keyboard: true,\r\n      html: false,\r\n      delay: 0,\r\n      minLength: 1,\r\n      filter: 'filter',\r\n      limit: 6\r\n    };\r\n\r\n    this.$get = function($window, $rootScope, $tooltip) {\r\n\r\n      var bodyEl = angular.element($window.document.body);\r\n\r\n      function TypeaheadFactory(element, controller, config) {\r\n\r\n        var $typeahead = {};\r\n\r\n        // Common vars\r\n        var options = angular.extend({}, defaults, config);\r\n\r\n        $typeahead = $tooltip(element, options);\r\n        var parentScope = config.scope;\r\n        var scope = $typeahead.$scope;\r\n\r\n        scope.$resetMatches = function(){\r\n          scope.$matches = [];\r\n          scope.$activeIndex = 0;\r\n        };\r\n        scope.$resetMatches();\r\n\r\n        scope.$activate = function(index) {\r\n          scope.$$postDigest(function() {\r\n            $typeahead.activate(index);\r\n          });\r\n        };\r\n\r\n        scope.$select = function(index, evt) {\r\n          scope.$$postDigest(function() {\r\n            $typeahead.select(index);\r\n          });\r\n        };\r\n\r\n        scope.$isVisible = function() {\r\n          return $typeahead.$isVisible();\r\n        };\r\n\r\n        // Public methods\r\n\r\n        $typeahead.update = function(matches) {\r\n          scope.$matches = matches;\r\n          if(scope.$activeIndex >= matches.length) {\r\n            scope.$activeIndex = 0;\r\n          }\r\n        };\r\n\r\n        $typeahead.activate = function(index) {\r\n          scope.$activeIndex = index;\r\n        };\r\n\r\n        $typeahead.select = function(index) {\r\n          var value = scope.$matches[index].value;\r\n          controller.$setViewValue(value);\r\n          controller.$render();\r\n          scope.$resetMatches();\r\n          if(parentScope) parentScope.$digest();\r\n          // Emit event\r\n          scope.$emit(options.prefixEvent + '.select', value, index);\r\n        };\r\n\r\n        // Protected methods\r\n\r\n        $typeahead.$isVisible = function() {\r\n          if(!options.minLength || !controller) {\r\n            return !!scope.$matches.length;\r\n          }\r\n          // minLength support\r\n          return scope.$matches.length && angular.isString(controller.$viewValue) && controller.$viewValue.length >= options.minLength;\r\n        };\r\n\r\n        $typeahead.$getIndex = function(value) {\r\n          var l = scope.$matches.length, i = l;\r\n          if(!l) return;\r\n          for(i = l; i--;) {\r\n            if(scope.$matches[i].value === value) break;\r\n          }\r\n          if(i < 0) return;\r\n          return i;\r\n        };\r\n\r\n        $typeahead.$onMouseDown = function(evt) {\r\n          // Prevent blur on mousedown\r\n          evt.preventDefault();\r\n          evt.stopPropagation();\r\n        };\r\n\r\n        $typeahead.$onKeyDown = function(evt) {\r\n          if(!/(38|40|13)/.test(evt.keyCode)) return;\r\n\r\n          // Let ngSubmit pass if the typeahead tip is hidden\r\n          if($typeahead.$isVisible()) {\r\n            evt.preventDefault();\r\n            evt.stopPropagation();\r\n          }\r\n\r\n          // Select with enter\r\n          if(evt.keyCode === 13 && scope.$matches.length) {\r\n            $typeahead.select(scope.$activeIndex);\r\n          }\r\n\r\n          // Navigate with keyboard\r\n          else if(evt.keyCode === 38 && scope.$activeIndex > 0) scope.$activeIndex--;\r\n          else if(evt.keyCode === 40 && scope.$activeIndex < scope.$matches.length - 1) scope.$activeIndex++;\r\n          else if(angular.isUndefined(scope.$activeIndex)) scope.$activeIndex = 0;\r\n          scope.$digest();\r\n        };\r\n\r\n        // Overrides\r\n\r\n        var show = $typeahead.show;\r\n        $typeahead.show = function() {\r\n          show();\r\n          setTimeout(function() {\r\n            $typeahead.$element.on('mousedown', $typeahead.$onMouseDown);\r\n            if(options.keyboard) {\r\n              element.on('keydown', $typeahead.$onKeyDown);\r\n            }\r\n          });\r\n        };\r\n\r\n        var hide = $typeahead.hide;\r\n        $typeahead.hide = function() {\r\n          $typeahead.$element.off('mousedown', $typeahead.$onMouseDown);\r\n          if(options.keyboard) {\r\n            element.off('keydown', $typeahead.$onKeyDown);\r\n          }\r\n          hide();\r\n        };\r\n\r\n        return $typeahead;\r\n\r\n      }\r\n\r\n      TypeaheadFactory.defaults = defaults;\r\n      return TypeaheadFactory;\r\n\r\n    };\r\n\r\n  })\r\n\r\n  .directive('bsTypeahead', function($window, $parse, $q, $typeahead, $parseOptions) {\r\n\r\n    var defaults = $typeahead.defaults;\r\n\r\n    return {\r\n      restrict: 'EAC',\r\n      require: 'ngModel',\r\n      link: function postLink(scope, element, attr, controller) {\r\n\r\n        // Directive options\r\n        var options = {scope: scope};\r\n        angular.forEach(['placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'template', 'filter', 'limit', 'minLength', 'watchOptions', 'selectMode'], function(key) {\r\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\r\n        });\r\n\r\n        // Build proper ngOptions\r\n        var filter = options.filter || defaults.filter;\r\n        var limit = options.limit || defaults.limit;\r\n        var ngOptions = attr.ngOptions;\r\n        if(filter) ngOptions += ' | ' + filter + ':$viewValue';\r\n        if(limit) ngOptions += ' | limitTo:' + limit;\r\n        var parsedOptions = $parseOptions(ngOptions);\r\n\r\n        // Initialize typeahead\r\n        var typeahead = $typeahead(element, controller, options);\r\n\r\n        // Watch options on demand\r\n        if(options.watchOptions) {\r\n          // Watch ngOptions values before filtering for changes, drop function calls\r\n          var watchedOptions = parsedOptions.$match[7].replace(/\\|.+/, '').replace(/\\(.*\\)/g, '').trim();\r\n          scope.$watch(watchedOptions, function (newValue, oldValue) {\r\n            // console.warn('scope.$watch(%s)', watchedOptions, newValue, oldValue);\r\n            parsedOptions.valuesFn(scope, controller).then(function (values) {\r\n              typeahead.update(values);\r\n              controller.$render();\r\n            });\r\n          }, true);\r\n        }\r\n\r\n        // Watch model for changes\r\n        scope.$watch(attr.ngModel, function(newValue, oldValue) {\r\n          // console.warn('$watch', element.attr('ng-model'), newValue);\r\n          scope.$modelValue = newValue; // Publish modelValue on scope for custom templates\r\n          parsedOptions.valuesFn(scope, controller)\r\n          .then(function(values) {\r\n            // Prevent input with no future prospect if selectMode is truthy\r\n            // @TODO test selectMode\r\n            if(options.selectMode && !values.length && newValue.length > 0) {\r\n              controller.$setViewValue(controller.$viewValue.substring(0, controller.$viewValue.length - 1));\r\n              return;\r\n            }\r\n            if(values.length > limit) values = values.slice(0, limit);\r\n            var isVisible = typeahead.$isVisible();\r\n            isVisible && typeahead.update(values);\r\n            // Do not re-queue an update if a correct value has been selected\r\n            if(values.length === 1 && values[0].value === newValue) return;\r\n            !isVisible && typeahead.update(values);\r\n            // Queue a new rendering that will leverage collection loading\r\n            controller.$render();\r\n          });\r\n        });\r\n\r\n        // Model rendering in view\r\n        controller.$render = function () {\r\n          // console.warn('$render', element.attr('ng-model'), 'controller.$modelValue', typeof controller.$modelValue, controller.$modelValue, 'controller.$viewValue', typeof controller.$viewValue, controller.$viewValue);\r\n          if(controller.$isEmpty(controller.$viewValue)) return element.val('');\r\n          var index = typeahead.$getIndex(controller.$modelValue);\r\n          var selected = angular.isDefined(index) ? typeahead.$scope.$matches[index].label : controller.$viewValue;\r\n          selected = angular.isObject(selected) ? selected.label : selected;\r\n          element.val(selected ? selected.replace(/<(?:.|\\n)*?>/gm, '').trim() : '');\r\n        };\r\n\r\n        // Garbage collection\r\n        scope.$on('$destroy', function() {\r\n          if (typeahead) typeahead.destroy();\r\n          options = null;\r\n          typeahead = null;\r\n        });\r\n\r\n      }\r\n    };\r\n\r\n  });\r\n"],"sourceRoot":"/source/"}