{"version":3,"sources":["dropdown.min.js","dropdown/dropdown.js"],"names":["angular","module","provider","defaults","this","animation","prefixClass","placement","template","trigger","container","keyboard","html","delay","$get","$window","$rootScope","$tooltip","DropdownFactory","element","config","onBodyClick","evt","target","$dropdown","hide","options","extend","$scope","scope","$new","parentEl","parent","$onKeyDown","test","keyCode","preventDefault","stopPropagation","items","$element","querySelectorAll","length","index","forEach","el","i","matchesSelector","call","isUndefined","eq","focus","show","setTimeout","on","bodyEl","hasClass","addClass","off","removeClass","document","body","Element","prototype","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","directive","$sce","restrict","link","attr","transclusion","key","isDefined","bsDropdown","$watch","newValue","oldValue","content","bsShow","dropdown","isString","match","$on","destroy"],"mappings":"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","file":"dropdown.min.js","sourcesContent":["/**\n * angular-strap\n * @version v2.1.0 - 2015-12-14\n * @link http://mgcrea.github.io/angular-strap\n * @author Olivier Louvignes (olivier@mg-crea.com)\n * @license MIT License, http://www.opensource.org/licenses/MIT\n */\n'use strict';\r\n\r\nangular.module('mgcrea.ngStrap.dropdown', ['mgcrea.ngStrap.tooltip'])\r\n\r\n  .provider('$dropdown', function() {\r\n\r\n    var defaults = this.defaults = {\r\n      animation: 'am-fade',\r\n      prefixClass: 'dropdown',\r\n      placement: 'bottom-left',\r\n      template: 'dropdown/dropdown.tpl.html',\r\n      trigger: 'click',\r\n      container: false,\r\n      keyboard: true,\r\n      html: false,\r\n      delay: 0\r\n    };\r\n\r\n    this.$get = [\"$window\", \"$rootScope\", \"$tooltip\", function($window, $rootScope, $tooltip) {\r\n\r\n      var bodyEl = angular.element($window.document.body);\r\n      var matchesSelector = Element.prototype.matchesSelector || Element.prototype.webkitMatchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector;\r\n\r\n      function DropdownFactory(element, config) {\r\n\r\n        var $dropdown = {};\r\n\r\n        // Common vars\r\n        var options = angular.extend({}, defaults, config);\r\n        var scope = $dropdown.$scope = options.scope && options.scope.$new() || $rootScope.$new();\r\n\r\n        $dropdown = $tooltip(element, options);\r\n        var parentEl = element.parent();\r\n\r\n        // Protected methods\r\n\r\n        $dropdown.$onKeyDown = function(evt) {\r\n          if (!/(38|40)/.test(evt.keyCode)) return;\r\n          evt.preventDefault();\r\n          evt.stopPropagation();\r\n\r\n          // Retrieve focused index\r\n          var items = angular.element($dropdown.$element[0].querySelectorAll('li:not(.divider) a'));\r\n          if(!items.length) return;\r\n          var index;\r\n          angular.forEach(items, function(el, i) {\r\n            if(matchesSelector && matchesSelector.call(el, ':focus')) index = i;\r\n          });\r\n\r\n          // Navigate with keyboard\r\n          if(evt.keyCode === 38 && index > 0) index--;\r\n          else if(evt.keyCode === 40 && index < items.length - 1) index++;\r\n          else if(angular.isUndefined(index)) index = 0;\r\n          items.eq(index)[0].focus();\r\n\r\n        };\r\n\r\n        // Overrides\r\n\r\n        var show = $dropdown.show;\r\n        $dropdown.show = function() {\r\n          show();\r\n          setTimeout(function() {\r\n            options.keyboard && $dropdown.$element.on('keydown', $dropdown.$onKeyDown);\r\n            bodyEl.on('click', onBodyClick);\r\n          });\r\n          parentEl.hasClass('dropdown') && parentEl.addClass('open');\r\n        };\r\n\r\n        var hide = $dropdown.hide;\r\n        $dropdown.hide = function() {\r\n          options.keyboard && $dropdown.$element.off('keydown', $dropdown.$onKeyDown);\r\n          bodyEl.off('click', onBodyClick);\r\n          parentEl.hasClass('dropdown') && parentEl.removeClass('open');\r\n          hide();\r\n        };\r\n\r\n        // Private functions\r\n\r\n        function onBodyClick(evt) {\r\n          if(evt.target === element[0]) return;\r\n          return evt.target !== element[0] && $dropdown.hide();\r\n        }\r\n\r\n        return $dropdown;\r\n\r\n      }\r\n\r\n      return DropdownFactory;\r\n\r\n    }];\r\n\r\n  })\r\n\r\n  .directive('bsDropdown', [\"$window\", \"$sce\", \"$dropdown\", function($window, $sce, $dropdown) {\r\n\r\n    return {\r\n      restrict: 'EAC',\r\n      scope: true,\r\n      link: function postLink(scope, element, attr, transclusion) {\r\n\r\n        // Directive options\r\n        var options = {scope: scope};\r\n        angular.forEach(['placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'template'], function(key) {\r\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\r\n        });\r\n\r\n        // Support scope as an object\r\n        attr.bsDropdown && scope.$watch(attr.bsDropdown, function(newValue, oldValue) {\r\n          scope.content = newValue;\r\n        }, true);\r\n\r\n        // Visibility binding support\r\n        attr.bsShow && scope.$watch(attr.bsShow, function(newValue, oldValue) {\r\n          if(!dropdown || !angular.isDefined(newValue)) return;\r\n          if(angular.isString(newValue)) newValue = !!newValue.match(',?(dropdown),?');\r\n          newValue === true ? dropdown.show() : dropdown.hide();\r\n        });\r\n\r\n        // Initialize dropdown\r\n        var dropdown = $dropdown(element, options);\r\n\r\n        // Garbage collection\r\n        scope.$on('$destroy', function() {\r\n          if (dropdown) dropdown.destroy();\r\n          options = null;\r\n          dropdown = null;\r\n        });\r\n\r\n      }\r\n    };\r\n\r\n  }]);\r\n","'use strict';\r\n\r\nangular.module('mgcrea.ngStrap.dropdown', ['mgcrea.ngStrap.tooltip'])\r\n\r\n  .provider('$dropdown', function() {\r\n\r\n    var defaults = this.defaults = {\r\n      animation: 'am-fade',\r\n      prefixClass: 'dropdown',\r\n      placement: 'bottom-left',\r\n      template: 'dropdown/dropdown.tpl.html',\r\n      trigger: 'click',\r\n      container: false,\r\n      keyboard: true,\r\n      html: false,\r\n      delay: 0\r\n    };\r\n\r\n    this.$get = function($window, $rootScope, $tooltip) {\r\n\r\n      var bodyEl = angular.element($window.document.body);\r\n      var matchesSelector = Element.prototype.matchesSelector || Element.prototype.webkitMatchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector;\r\n\r\n      function DropdownFactory(element, config) {\r\n\r\n        var $dropdown = {};\r\n\r\n        // Common vars\r\n        var options = angular.extend({}, defaults, config);\r\n        var scope = $dropdown.$scope = options.scope && options.scope.$new() || $rootScope.$new();\r\n\r\n        $dropdown = $tooltip(element, options);\r\n        var parentEl = element.parent();\r\n\r\n        // Protected methods\r\n\r\n        $dropdown.$onKeyDown = function(evt) {\r\n          if (!/(38|40)/.test(evt.keyCode)) return;\r\n          evt.preventDefault();\r\n          evt.stopPropagation();\r\n\r\n          // Retrieve focused index\r\n          var items = angular.element($dropdown.$element[0].querySelectorAll('li:not(.divider) a'));\r\n          if(!items.length) return;\r\n          var index;\r\n          angular.forEach(items, function(el, i) {\r\n            if(matchesSelector && matchesSelector.call(el, ':focus')) index = i;\r\n          });\r\n\r\n          // Navigate with keyboard\r\n          if(evt.keyCode === 38 && index > 0) index--;\r\n          else if(evt.keyCode === 40 && index < items.length - 1) index++;\r\n          else if(angular.isUndefined(index)) index = 0;\r\n          items.eq(index)[0].focus();\r\n\r\n        };\r\n\r\n        // Overrides\r\n\r\n        var show = $dropdown.show;\r\n        $dropdown.show = function() {\r\n          show();\r\n          setTimeout(function() {\r\n            options.keyboard && $dropdown.$element.on('keydown', $dropdown.$onKeyDown);\r\n            bodyEl.on('click', onBodyClick);\r\n          });\r\n          parentEl.hasClass('dropdown') && parentEl.addClass('open');\r\n        };\r\n\r\n        var hide = $dropdown.hide;\r\n        $dropdown.hide = function() {\r\n          options.keyboard && $dropdown.$element.off('keydown', $dropdown.$onKeyDown);\r\n          bodyEl.off('click', onBodyClick);\r\n          parentEl.hasClass('dropdown') && parentEl.removeClass('open');\r\n          hide();\r\n        };\r\n\r\n        // Private functions\r\n\r\n        function onBodyClick(evt) {\r\n          if(evt.target === element[0]) return;\r\n          return evt.target !== element[0] && $dropdown.hide();\r\n        }\r\n\r\n        return $dropdown;\r\n\r\n      }\r\n\r\n      return DropdownFactory;\r\n\r\n    };\r\n\r\n  })\r\n\r\n  .directive('bsDropdown', function($window, $sce, $dropdown) {\r\n\r\n    return {\r\n      restrict: 'EAC',\r\n      scope: true,\r\n      link: function postLink(scope, element, attr, transclusion) {\r\n\r\n        // Directive options\r\n        var options = {scope: scope};\r\n        angular.forEach(['placement', 'container', 'delay', 'trigger', 'keyboard', 'html', 'animation', 'template'], function(key) {\r\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\r\n        });\r\n\r\n        // Support scope as an object\r\n        attr.bsDropdown && scope.$watch(attr.bsDropdown, function(newValue, oldValue) {\r\n          scope.content = newValue;\r\n        }, true);\r\n\r\n        // Visibility binding support\r\n        attr.bsShow && scope.$watch(attr.bsShow, function(newValue, oldValue) {\r\n          if(!dropdown || !angular.isDefined(newValue)) return;\r\n          if(angular.isString(newValue)) newValue = !!newValue.match(',?(dropdown),?');\r\n          newValue === true ? dropdown.show() : dropdown.hide();\r\n        });\r\n\r\n        // Initialize dropdown\r\n        var dropdown = $dropdown(element, options);\r\n\r\n        // Garbage collection\r\n        scope.$on('$destroy', function() {\r\n          if (dropdown) dropdown.destroy();\r\n          options = null;\r\n          dropdown = null;\r\n        });\r\n\r\n      }\r\n    };\r\n\r\n  });\r\n"],"sourceRoot":"/source/"}