{"version":3,"sources":["tab.min.js","tab/tab.js"],"names":["angular","module","provider","defaults","this","animation","template","navClass","activeClass","controller","$scope","$element","$attrs","self","$options","copy","forEach","key","isDefined","$navClass","$activeClass","$panes","$viewChangeListeners","$push","pane","push","$active","$setActive","value","fn","$get","$tab","directive","$window","$animate","require","transclude","scope","templateUrl","element","attr","link","attrs","controllers","ngModelCtrl","bsTabsCtrl","$setViewValue","$formatters","modelValue","$sce","render","index","indexOf","active","addClass","$observe","newValue","oldValue","title","trustAsHtml"],"mappings":"AAOA,YAEAA,SCAMC,OAAA,yBDEHC,SAAS,OAAQ,WCEhB,GAAIC,GAAAC,KAAaD,UACfE,UAAW,UDCXC,SAAU,mBACVC,SAAU,WCCVC,YAAK,UDGHC,EAAaL,KAAKK,WAAa,SAASC,EAAQC,EAAUC,GAC5D,GAAIC,GAAOT,ICGXS,GAAAC,SAAOd,QAAee,KAAKZ,GDC3BH,QAAQgB,SAAS,YAAa,WAAY,eAAgB,SAASC,GCC9DjB,QAAAkB,UAAgBN,EAASK,MAAAJ,EAAAC,SAAAG,GAAAL,EAAAK,MAI9BP,EAAKS,UAAQN,EAASC,SAAMP,SDC5BG,ECAOU,aAAYP,EAAAC,SAAAN,YDEnBK,EAAKQ,OAASX,EAAOW,UCErBR,EAAKS,wBDELT,ECAEU,MAAK,SAAAC,GDCLX,ECAEQ,OAAAI,KAAAD,IDGJX,EAAKQ,OAAOK,QAAU,EACtBb,EAAKc,WAAajB,EAAOiB,WAAa,SAASC,GAC7Cf,EAAKQ,OAAOK,QAAUE,ECC1Bf,EAAKS,qBAAkBN,QAAA,SAAAa,GACjBA,ODMNzB,MAAK0B,KAAO,WACV,GAAIC,KCGN,OAFDA,GAAA5B,SAAUA,EDCP4B,EAAKtB,WAAaA,ECChBsB,KDKLC,UCAU,UAAA,UAAA,WAAA,OAAA,SAAAC,EAAAC,EAAAH,GDET,GCAE5B,GAAa4B,EAAA5B,QDEf,QCCEgC,SAAM,WAAS,UDCfC,YAAY,EACZC,OCAM,EDCN5B,YCAM,SAAa,WAAY,SAAAsB,EAAAtB,YDC/B6B,YAAa,SAASC,EAASC,GCC7B,MAAGA,GAAAlC,UAAaH,EAAAG,UDElBmC,KAAM,SAAkBJ,EAAOE,EAASG,EAAOC,GAE7C,GCAIC,GAAYD,EAAc,GDC1BE,EAAaF,EAAY,EAE1BC,KAGDC,ECAEvB,qBAAsBG,KAAa,WACnCmB,EAAOE,cAAAD,EAAAxB,OAAAK,WDITkB,EAAYG,YAAYtB,KAAK,SAASuB,GAGpC,MADAH,GAAWlB,WAAwB,EAAbqB,GACfA,UAUhBhB,UCAS,UAAA,UAAc,WAAY,OAAA,SAAAC,EAAAC,EAAAe,GDElC,OACEd,SAAU,YAAa,WACvBE,OCAE,EDCFI,KAAM,SAAkBJ,EAAOE,EAASG,EAAOC,GAqB7C,QCAEO,KDCA,GAAIC,GAAQN,EAAWxB,OAAO+B,QAAQf,GCCxCgB,EAAAR,EAAAxB,OAAAK,ODCEQ,GAASiB,IAAUE,EAAS,WAAa,eAAed,EAASM,EAAW/B,SAASN,aCtBvF,GACEqC,IADaF,EAAS,GACRA,EAAK,GDGrBJ,GAAQe,SAAS,YAGjBZ,EAAMa,SAAS,QAAS,SAASC,EAAUC,GACzCpB,EAAMqB,MAAQT,EAAKU,YAAYH,KCIjCX,EAAS/B,SAAST,WAChBkC,EAAIe,SAAQT,EAAW/B,SAAOT,WDIhCwC,EAAWtB,MAAMc,GAQjBQ,EAAWvB,qBAAqBG,KAAK,WACnCyB,MAEFA","file":"tab.min.js","sourcesContent":["/**\n * angular-strap\n * @version v2.1.0 - 2015-12-14\n * @link http://mgcrea.github.io/angular-strap\n * @author Olivier Louvignes (olivier@mg-crea.com)\n * @license MIT License, http://www.opensource.org/licenses/MIT\n */\n'use strict';\r\n\r\nangular.module('mgcrea.ngStrap.tab', [])\r\n\r\n  .provider('$tab', function() {\r\n\r\n    var defaults = this.defaults = {\r\n      animation: 'am-fade',\r\n      template: 'tab/tab.tpl.html',\r\n      navClass: 'nav-tabs',\r\n      activeClass: 'active'\r\n    };\r\n\r\n    var controller = this.controller = function($scope, $element, $attrs) {\r\n      var self = this;\r\n\r\n      // Attributes options\r\n      self.$options = angular.copy(defaults);\r\n      angular.forEach(['animation', 'navClass', 'activeClass'], function(key) {\r\n        if(angular.isDefined($attrs[key])) self.$options[key] = $attrs[key];\r\n      });\r\n\r\n      // Publish options on scope\r\n      $scope.$navClass = self.$options.navClass;\r\n      $scope.$activeClass = self.$options.activeClass;\r\n\r\n      self.$panes = $scope.$panes = [];\r\n\r\n      self.$viewChangeListeners = [];\r\n\r\n      self.$push = function(pane) {\r\n        self.$panes.push(pane);\r\n      };\r\n\r\n      self.$panes.$active = 0;\r\n      self.$setActive = $scope.$setActive = function(value) {\r\n        self.$panes.$active = value;\r\n        self.$viewChangeListeners.forEach(function(fn) {\r\n          fn();\r\n        });\r\n      };\r\n\r\n    };\r\n\r\n    this.$get = function() {\r\n      var $tab = {};\r\n      $tab.defaults = defaults;\r\n      $tab.controller = controller;\r\n      return $tab;\r\n    };\r\n\r\n  })\r\n\r\n  .directive('bsTabs', [\"$window\", \"$animate\", \"$tab\", function($window, $animate, $tab) {\r\n\r\n    var defaults = $tab.defaults;\r\n\r\n    return {\r\n      require: ['?ngModel', 'bsTabs'],\r\n      transclude: true,\r\n      scope: true,\r\n      controller: ['$scope', '$element', '$attrs', $tab.controller],\r\n      templateUrl: function(element, attr) {\r\n        return attr.template || defaults.template;\r\n      },\r\n      link: function postLink(scope, element, attrs, controllers) {\r\n\r\n        var ngModelCtrl = controllers[0];\r\n        var bsTabsCtrl = controllers[1];\r\n\r\n        if(ngModelCtrl) {\r\n\r\n          // Update the modelValue following\r\n          bsTabsCtrl.$viewChangeListeners.push(function() {\r\n            ngModelCtrl.$setViewValue(bsTabsCtrl.$panes.$active);\r\n          });\r\n\r\n          // modelValue -> $formatters -> viewValue\r\n          ngModelCtrl.$formatters.push(function(modelValue) {\r\n            // console.warn('$formatter(\"%s\"): modelValue=%o (%o)', element.attr('ng-model'), modelValue, typeof modelValue);\r\n            bsTabsCtrl.$setActive(modelValue * 1);\r\n            return modelValue;\r\n          });\r\n\r\n        }\r\n\r\n      }\r\n    };\r\n\r\n  }])\r\n\r\n  .directive('bsPane', [\"$window\", \"$animate\", \"$sce\", function($window, $animate, $sce) {\r\n\r\n    return {\r\n      require: ['^?ngModel', '^bsTabs'],\r\n      scope: true,\r\n      link: function postLink(scope, element, attrs, controllers) {\r\n\r\n        var ngModelCtrl = controllers[0];\r\n        var bsTabsCtrl = controllers[1];\r\n\r\n        // Add base class\r\n        element.addClass('tab-pane');\r\n\r\n        // Observe title attribute for change\r\n        attrs.$observe('title', function(newValue, oldValue) {\r\n          scope.title = $sce.trustAsHtml(newValue);\r\n        });\r\n\r\n        // Add animation class\r\n        if(bsTabsCtrl.$options.animation) {\r\n          element.addClass(bsTabsCtrl.$options.animation);\r\n        }\r\n\r\n        // Push pane to parent bsTabs controller\r\n        bsTabsCtrl.$push(scope);\r\n\r\n        function render() {\r\n          var index = bsTabsCtrl.$panes.indexOf(scope);\r\n          var active = bsTabsCtrl.$panes.$active;\r\n          $animate[index === active ? 'addClass' : 'removeClass'](element, bsTabsCtrl.$options.activeClass);\r\n        }\r\n\r\n        bsTabsCtrl.$viewChangeListeners.push(function() {\r\n          render();\r\n        });\r\n        render();\r\n\r\n      }\r\n    };\r\n\r\n  }]);\r\n","'use strict';\r\n\r\nangular.module('mgcrea.ngStrap.tab', [])\r\n\r\n  .provider('$tab', function() {\r\n\r\n    var defaults = this.defaults = {\r\n      animation: 'am-fade',\r\n      template: 'tab/tab.tpl.html',\r\n      navClass: 'nav-tabs',\r\n      activeClass: 'active'\r\n    };\r\n\r\n    var controller = this.controller = function($scope, $element, $attrs) {\r\n      var self = this;\r\n\r\n      // Attributes options\r\n      self.$options = angular.copy(defaults);\r\n      angular.forEach(['animation', 'navClass', 'activeClass'], function(key) {\r\n        if(angular.isDefined($attrs[key])) self.$options[key] = $attrs[key];\r\n      });\r\n\r\n      // Publish options on scope\r\n      $scope.$navClass = self.$options.navClass;\r\n      $scope.$activeClass = self.$options.activeClass;\r\n\r\n      self.$panes = $scope.$panes = [];\r\n\r\n      self.$viewChangeListeners = [];\r\n\r\n      self.$push = function(pane) {\r\n        self.$panes.push(pane);\r\n      };\r\n\r\n      self.$panes.$active = 0;\r\n      self.$setActive = $scope.$setActive = function(value) {\r\n        self.$panes.$active = value;\r\n        self.$viewChangeListeners.forEach(function(fn) {\r\n          fn();\r\n        });\r\n      };\r\n\r\n    };\r\n\r\n    this.$get = function() {\r\n      var $tab = {};\r\n      $tab.defaults = defaults;\r\n      $tab.controller = controller;\r\n      return $tab;\r\n    };\r\n\r\n  })\r\n\r\n  .directive('bsTabs', function($window, $animate, $tab) {\r\n\r\n    var defaults = $tab.defaults;\r\n\r\n    return {\r\n      require: ['?ngModel', 'bsTabs'],\r\n      transclude: true,\r\n      scope: true,\r\n      controller: ['$scope', '$element', '$attrs', $tab.controller],\r\n      templateUrl: function(element, attr) {\r\n        return attr.template || defaults.template;\r\n      },\r\n      link: function postLink(scope, element, attrs, controllers) {\r\n\r\n        var ngModelCtrl = controllers[0];\r\n        var bsTabsCtrl = controllers[1];\r\n\r\n        if(ngModelCtrl) {\r\n\r\n          // Update the modelValue following\r\n          bsTabsCtrl.$viewChangeListeners.push(function() {\r\n            ngModelCtrl.$setViewValue(bsTabsCtrl.$panes.$active);\r\n          });\r\n\r\n          // modelValue -> $formatters -> viewValue\r\n          ngModelCtrl.$formatters.push(function(modelValue) {\r\n            // console.warn('$formatter(\"%s\"): modelValue=%o (%o)', element.attr('ng-model'), modelValue, typeof modelValue);\r\n            bsTabsCtrl.$setActive(modelValue * 1);\r\n            return modelValue;\r\n          });\r\n\r\n        }\r\n\r\n      }\r\n    };\r\n\r\n  })\r\n\r\n  .directive('bsPane', function($window, $animate, $sce) {\r\n\r\n    return {\r\n      require: ['^?ngModel', '^bsTabs'],\r\n      scope: true,\r\n      link: function postLink(scope, element, attrs, controllers) {\r\n\r\n        var ngModelCtrl = controllers[0];\r\n        var bsTabsCtrl = controllers[1];\r\n\r\n        // Add base class\r\n        element.addClass('tab-pane');\r\n\r\n        // Observe title attribute for change\r\n        attrs.$observe('title', function(newValue, oldValue) {\r\n          scope.title = $sce.trustAsHtml(newValue);\r\n        });\r\n\r\n        // Add animation class\r\n        if(bsTabsCtrl.$options.animation) {\r\n          element.addClass(bsTabsCtrl.$options.animation);\r\n        }\r\n\r\n        // Push pane to parent bsTabs controller\r\n        bsTabsCtrl.$push(scope);\r\n\r\n        function render() {\r\n          var index = bsTabsCtrl.$panes.indexOf(scope);\r\n          var active = bsTabsCtrl.$panes.$active;\r\n          $animate[index === active ? 'addClass' : 'removeClass'](element, bsTabsCtrl.$options.activeClass);\r\n        }\r\n\r\n        bsTabsCtrl.$viewChangeListeners.push(function() {\r\n          render();\r\n        });\r\n        render();\r\n\r\n      }\r\n    };\r\n\r\n  });\r\n"],"sourceRoot":"/source/"}